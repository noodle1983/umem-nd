cscope 16 /home/ubt/umem-1.0.1/tools               0000437709
	@leaky_subr.c

26 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

28 
	~"umem.h
"

30 
	~<sys/vmem_im∂_u£r.h
>

31 
	~<umem_im∂.h
>

33 
	~<Æloˇ.h
>

34 
	~<lib¥oc.h
>

35 
	~<°dio.h
>

36 
	~<°rög.h
>

37 
	~<sys/°ack.h
>

39 
	~"Àaky_im∂.h
"

40 
	~"misc.h
"

41 
	~"¥oc_kludges.h
"

43 
	~"umem_∑gesize.h
"

55 
	#TYPE_MMAP
 0

	)

56 
	#TYPE_SBRK
 1

	)

57 
	#TYPE_VMEM
 2

	)

58 
	#TYPE_CACHE
 3

	)

59 
	#TYPE_UMEM
 4

	)

61 
	#LKM_CTL_BUFCTL
 0

	)

62 
	#LKM_CTL_VMSEG
 1

	)

63 
	#LKM_CTL_MEMORY
 2

	)

64 
	#LKM_CTL_CACHE
 3

	)

65 
	#LKM_CTL_MASK
 3L

	)

70 
	#LKM_CTL
(
±r
, 
ty≥
Ë(
	`LKM_CTLPTR
’åË| (ty≥))

	)

71 
	#LKM_CTLPTR
(
˘l
Ë((
uöçå_t
)(˘lË& ~(
LKM_CTL_MASK
))

	)

72 
	#LKM_CTLTYPE
(
˘l
Ë((
uöçå_t
)(˘lË& (
LKM_CTL_MASK
))

	)

74 
uöçå_t
 
	gÀak_brkba£
;

75 
uöçå_t
 
	gÀak_brksize
;

77 
	#LEAKY_INBRK
(
±r
) \

78 (((
uöçå_t
)(
±r
Ë- 
Àak_brkba£
Ë< 
Àak_brksize
)

	)

80 
	sÀaky_£g_öfo
 {

81 
uöçå_t
 
	mls_°¨t
;

82 
uöçå_t
 
	mls_íd
;

83 } 
	tÀaky_£g_öfo_t
;

85 
	sÀaky_m≠s
 {

86 
Àaky_£g_öfo_t
 *
	mlm_£gs
;

87 
uöçå_t
 
	mlm_£g_cou¡
;

88 
uöçå_t
 
	mlm_£g_max
;

90 
p°©us_t
 *
	mlm_p°©us
;

92 
Àak_mèb_t
 **
	mlm_lmp
;

93 } 
	tÀaky_m≠s_t
;

97 
	$Àaky_mèb
(
uöçå_t
 
addr
, c⁄° 
umem_buf˘l_audô_t
 *
b˝
, 
Àak_mèb_t
 **
lmp
)

99 
Àak_mèb_t
 *
lm
 = (*
lmp
)++;

101 
lm
->
lkm_ba£
 = (
uöçå_t
)
b˝
->
bc_addr
;

102 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
addr
, 
LKM_CTL_BUFCTL
);

104  (
WALK_NEXT
);

105 
	}
}

109 
	$Àaky_mèb_addr
(
uöçå_t
 
addr
, *
ign‹ed
, 
Àak_mèb_t
 **
lmp
)

111 
Àak_mèb_t
 *
lm
 = (*
lmp
)++;

113 
lm
->
lkm_ba£
 = 
addr
;

115  (
WALK_NEXT
);

116 
	}
}

119 
	$Àaky_£g
(
uöçå_t
 
addr
, c⁄° 
vmem_£g_t
 *
£g
, 
Àak_mèb_t
 **
lmp
)

121 
Àak_mèb_t
 *
lm
 = (*
lmp
)++;

123 
lm
->
lkm_ba£
 = 
£g
->
vs_°¨t
;

124 
lm
->
lkm_limô
 = 
£g
->
vs_íd
;

125 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
addr
, 
LKM_CTL_VMSEG
);

126  (
WALK_NEXT
);

127 
	}
}

130 
	$Àaky_vmem
(
uöçå_t
 
addr
, c⁄° 
vmem_t
 *
vmem
, 
Àak_mèb_t
 **
lmp
)

132 i‡(
	`°rcmp
(
vmem
->
vm_«me
, "umem_oversize") != 0 &&

133 
	`°rcmp
(
vmem
->
vm_«me
, "umem_memalign") != 0)

134  (
WALK_NEXT
);

136 i‡(
	`mdb_pwÆk
("vmem_Æloc", (
mdb_wÆk_cb_t
)
Àaky_£g
, 
lmp
, 
addr
) == -1)

137 
	`mdb_w¨n
("ˇn'àwÆk vmem_Ælo¯f‹ %†(%p)", 
vmem
->
vm_«me
,

138 
addr
);

140  (
WALK_NEXT
);

141 
	}
}

145 
	$Àaky_e°im©e_vmem
(
uöçå_t
 
addr
, c⁄° 
vmem_t
 *
vmem
, 
size_t
 *
e°
)

147 i‡(
	`°rcmp
(
vmem
->
vm_«me
, "umem_oversize") != 0 &&

148 
	`°rcmp
(
vmem
->
vm_«me
, "umem_memalign") != 0)

149  (
WALK_NEXT
);

151 *
e°
 +()(
vmem
->
vm_k°©
.
vk_Æloc
 - vmem->vm_k°©.
vk_‰ì
);

153  (
WALK_NEXT
);

154 
	}
}

157 
	$Àaky_£g_cmp
(c⁄° *
l
, c⁄° *
r
)

159 c⁄° 
Àaky_£g_öfo_t
 *
lhs
 = (c⁄°Üóky_£g_öfo_à*)
l
;

160 c⁄° 
Àaky_£g_öfo_t
 *
rhs
 = (c⁄°Üóky_£g_öfo_à*)
r
;

162 i‡(
lhs
->
ls_°¨t
 < 
rhs
->ls_start)

164 i‡(
lhs
->
ls_°¨t
 > 
rhs
->ls_start)

168 
	}
}

170 
ssize_t


171 
	$Àaky_£g_£¨ch
(
uöçå_t
 
addr
, 
Àaky_£g_öfo_t
 *
li°p
, 
cou¡
)

173 
ssize_t
 
À·
 = 0, 
right
 = 
cou¡
 - 1, 
guess
;

175 
right
 >
À·
) {

176 
guess
 = (
right
 + 
À·
) >> 1;

178 i‡(
addr
 < 
li°p
[
guess
].
ls_°¨t
) {

179 
right
 = 
guess
 - 1;

183 i‡(
addr
 >
li°p
[
guess
].
ls_íd
) {

184 
À·
 = 
guess
 + 1;

188  (
guess
);

192 
	}
}

196 
	$Àaky_cou¡
(
uöçå_t
 
addr
, *
unu£d
, 
size_t
 *
tŸÆ
)

198 ++*
tŸÆ
;

200  (
WALK_NEXT
);

201 
	}
}

205 
	$Àaky_ªad_£gs
(
uöçå_t
 
addr
, c⁄° 
vmem_£g_t
 *
£g
, 
Àaky_m≠s_t
 *
lmp
)

207 
Àaky_£g_öfo_t
 *
my_si
 = 
lmp
->
lm_£gs
 +Ümp->
lm_£g_cou¡
;

209 i‡(
£g
->
vs_°¨t
 =£g->
vs_íd
 && seg->vs_start == 0)

210  (
WALK_NEXT
);

212 i‡(
lmp
->
lm_£g_cou¡
++ >lmp->
lm_£g_max
)

213  (
WALK_ERR
);

215 
my_si
->
ls_°¨t
 = 
£g
->
vs_°¨t
;

216 
my_si
->
ls_íd
 = 
£g
->
vs_íd
;

218  (
WALK_NEXT
);

219 
	}
}

223 
	$Àaky_¥o˚ss_™⁄_m≠pögs
(
uöçå_t
 
ign‹ed
, c⁄° 
¥m≠_t
 *
pmp
,

224 
Àaky_m≠s_t
 *
lmp
)

226 
uöçå_t
 
°¨t
 = 
pmp
->
¥_vaddr
;

227 
uöçå_t
 
íd
 = 
pmp
->
¥_vaddr
 +Ömp->
¥_size
;

229 
Àak_mèb_t
 *
lm
;

230 
p°©us_t
 *
P•
 = 
lmp
->
lm_p°©us
;

232 
uöçå_t
 
brk_°¨t
 = 
P•
->
¥_brkba£
;

233 
uöçå_t
 
brk_íd
 = 
P•
->
¥_brkba£
 + P•->
¥_brksize
;

235 
has_brk
 = 0;

236 
ö_vmem
 = 0;

241 i‡(
íd
 > 
brk_°¨t
 && 
°¨t
 < 
brk_íd
)

242 
has_brk
 = 1;

244 i‡(
	`Àaky_£g_£¨ch
(
°¨t
, 
lmp
->
lm_£gs
,Ümp->
lm_£g_cou¡
) != -1)

245 
ö_vmem
 = 1;

256 i‡((
pmp
->
¥_mÊags
 & (
MA_READ
 | 
MA_WRITE
)) == (MA_READ | MA_WRITE) &&

257 (
pmp
->
¥_mÊags
 & 
MA_SHARED
) == 0 &&

258 (
pmp
->
¥_m≠«me
[0] == 0) &&

259 !
has_brk
 &&

260 !
ö_vmem
) {

261 
	`d¥ötf
(("mm≠edÑegi⁄: [%p, %p)\n", 
°¨t
, 
íd
));

262 
lm
 = (*
lmp
->
lm_lmp
)++;

263 
lm
->
lkm_ba£
 = 
°¨t
;

264 
lm
->
lkm_limô
 = 
íd
;

265 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
pmp
->
¥_vaddr
, 
LKM_CTL_MEMORY
);

268  (
WALK_NEXT
);

269 
	}
}

272 
	$Àaky_h™dÀ_sbrk
(
Àaky_m≠s_t
 *
lmp
)

274 
uöçå_t
 
brkba£
 = 
lmp
->
lm_p°©us
->
¥_brkba£
;

275 
uöçå_t
 
brkíd
 = 
brkba£
 + 
lmp
->
lm_p°©us
->
¥_brksize
;

277 
Àak_mèb_t
 *
lm
;

279 
Àaky_£g_öfo_t
 *
£gs
 = 
lmp
->
lm_£gs
;

281 
x
, 
fú°
 = -1, 
œ°
 = -1;

283 
	`d¥ötf
(("brk: [%p, %p)\n", 
brkba£
, 
brkíd
));

285 
x
 = 0; x < 
lmp
->
lm_£g_cou¡
; x++) {

286 i‡(
£gs
[
x
].
ls_°¨t
 >
brkba£
 && segs[x].
ls_íd
 <
brkíd
) {

287 i‡(
fú°
 == -1)

288 
fú°
 = 
x
;

289 
œ°
 = 
x
;

293 i‡(
brkba£
 =
brkíd
) {

294 
	`d¥ötf
(("empty brk -- doÇothing\n"));

295 } i‡(
fú°
 == -1) {

296 
	`d¥ötf
(("addög [%p, %pËwhﬁêbrk\n", 
brkba£
, 
brkíd
));

298 
lm
 = (*
lmp
->
lm_lmp
)++;

299 
lm
->
lkm_ba£
 = 
brkba£
;

300 
lm
->
lkm_limô
 = 
brkíd
;

301 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
brkba£
, 
LKM_CTL_MEMORY
);

303 
uöçå_t
 
curbrk
 = 
	`P2ROUNDUP
(
brkba£
, 
umem_∑gesize
);

305 i‡(
curbrk
 !
£gs
[
fú°
].
ls_°¨t
) {

306 
	`d¥ötf
(("adding [%p, %p) in brk, before first seg\n",

307 
brkba£
, 
£gs
[
fú°
].
ls_°¨t
));

309 
lm
 = (*
lmp
->
lm_lmp
)++;

310 
lm
->
lkm_ba£
 = 
brkba£
;

311 
lm
->
lkm_limô
 = 
£gs
[
fú°
].
ls_°¨t
;

312 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
brkba£
, 
LKM_CTL_MEMORY
);

314 
curbrk
 = 
£gs
[
fú°
].
ls_°¨t
;

316 } i‡(
curbrk
 !
brkba£
) {

317 
	`d¥ötf
(("ign‹ê[%p, %pË--Ñólign\n", 
brkba£
,

318 
curbrk
));

321 
x
 = 
fú°
; x <
œ°
; x++) {

322 i‡(
curbrk
 < 
£gs
[
x
].
ls_°¨t
) {

323 
	`d¥ötf
(("addög [%p, %pËö brk\n", 
curbrk
,

324 
£gs
[
x
].
ls_°¨t
));

326 
lm
 = (*
lmp
->
lm_lmp
)++;

327 
lm
->
lkm_ba£
 = 
curbrk
;

328 
lm
->
lkm_limô
 = 
£gs
[
x
].
ls_°¨t
;

329 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
curbrk
,

330 
LKM_CTL_MEMORY
);

332 
curbrk
 = 
£gs
[
x
].
ls_íd
;

335 i‡(
curbrk
 < 
brkíd
) {

336 
	`d¥ötf
(("adding [%p, %p) in brk,áfterÜast seg\n",

337 
curbrk
, 
brkíd
));

339 
lm
 = (*
lmp
->
lm_lmp
)++;

340 
lm
->
lkm_ba£
 = 
curbrk
;

341 
lm
->
lkm_limô
 = 
brkíd
;

342 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
curbrk
, 
LKM_CTL_MEMORY
);

345 
	}
}

348 
	$Àaky_h™dÀ_™⁄_m≠pögs
(
Àak_mèb_t
 **
lmp
)

350 
Àaky_m≠s_t
 
lm
;

352 
vmem_t
 *
hóp_¨ía
;

353 
vmem_t
 *
vm_√xt
;

354 
vmem_t
 *
hóp_t›
;

355 
vmem_t
 
vmem
;

357 
p°©us_t
 
Ps
;

359 i‡(
	`mdb_gë_xd©a
("p°©us", &
Ps
,  (Ps)) == -1) {

360 
	`mdb_w¨n
("couldn'tÑeadÖstatus xdata");

361  (
DCMD_ERR
);

363 
lm
.
lm_p°©us
 = &
Ps
;

365 
Àak_brkba£
 = 
Ps
.
¥_brkba£
;

366 
Àak_brksize
 = 
Ps
.
¥_brksize
;

368 i‡(
	`umem_ªadv¨
(&
hóp_¨ía
, "heap_arena") == -1) {

369 
	`mdb_w¨n
("couldn'tÑead heap_arena");

370  (
DCMD_ERR
);

373 i‡(
hóp_¨ía
 =
NULL
) {

374 
	`mdb_w¨n
("heap_arena is NULL.\n");

375  (
DCMD_ERR
);

378 
vm_√xt
 = 
hóp_¨ía
; vm_√xà!
NULL
; vm_√xà
vmem
.
vm_sour˚
) {

379 i‡(
	`mdb_vªad
(&
vmem
,  (vmem), (
uöçå_t
)
vm_√xt
) == -1) {

380 
	`mdb_w¨n
("couldn'àªad vmemáà%p", 
vm_√xt
);

381  (
DCMD_ERR
);

383 
hóp_t›
 = 
vm_√xt
;

386 
lm
.
lm_£g_cou¡
 = 0;

387 
lm
.
lm_£g_max
 = 0;

389 i‡(
	`mdb_pwÆk
("vmem_•™", (
mdb_wÆk_cb_t
)
Àaky_cou¡
,

390 &
lm
.
lm_£g_max
, (
uöçå_t
)
hóp_t›
) == -1) {

391 
	`mdb_w¨n
("couldn'àwÆk vmem_•™ f‹ vmem %p", 
hóp_t›
);

392  (
DCMD_ERR
);

394 
lm
.
lm_£gs
 = 
	`mdb_Æloc
÷m.
lm_£g_max
 *  (*lm.lm_segs),

395 
UM_SLEEP
 | 
UM_GC
);

397 i‡(
	`mdb_pwÆk
("vmem_•™", (
mdb_wÆk_cb_t
)
Àaky_ªad_£gs
, &
lm
,

398 (
uöçå_t
)
hóp_t›
) == -1) {

399 
	`mdb_w¨n
("couldn't walk vmem_span for vmem %p",

400 
hóp_t›
);

401  (
DCMD_ERR
);

404 i‡(
lm
.
lm_£g_cou¡
 >Üm.
lm_£g_max
) {

405 
	`mdb_w¨n
("£gmíàli° f‹ vmem %∞gªw\n", 
hóp_t›
);

406  (
DCMD_ERR
);

409 
	`qs‹t
(
lm
.
lm_£gs
,Üm.
lm_£g_cou¡
,  (*lm.lm_£gs), 
Àaky_£g_cmp
);

411 
lm
.
lm_lmp
 = 
lmp
;

413 
	`¥ockludge_add_wÆkîs
();

415 i‡(
	`mdb_wÆk
(
KLUDGE_MAPWALK_NAME
,

416 (
mdb_wÆk_cb_t
)
Àaky_¥o˚ss_™⁄_m≠pögs
, &
lm
) == -1) {

417 
	`mdb_w¨n
("Couldn'àwÆk "
KLUDGE_MAPWALK_NAME
);

418 
	`¥ockludge_ªmove_wÆkîs
();

419  (
DCMD_ERR
);

422 
	`¥ockludge_ªmove_wÆkîs
();

423 
	`Àaky_h™dÀ_sbrk
(&
lm
);

425  (
DCMD_OK
);

426 
	}
}

429 
	$Àaky_öãª°ed
(c⁄° 
umem_ˇche_t
 *
c
)

431 
vmem_t
 
vmem
;

433 i‡(
	`mdb_vªad
(&
vmem
,  (vmem), (
uöçå_t
)
c
->
ˇche_¨ía
) == -1) {

434 
	`mdb_w¨n
("cannotÑeadárena %p for cache '%s'",

435 (
uöçå_t
)
c
->
ˇche_¨ía
, c->
ˇche_«me
);

443 i‡(
	`°rcmp
(
vmem
.
vm_«me
, "umem_default") != 0 &&

444 
	`°rcmp
(
vmem
.
vm_«me
, "umem_firewall") != 0) {

445 
	`d¥ötf
(("Skipping cache '%s' withárena '%s'\n",

446 
c
->
ˇche_«me
, 
vmem
.
vm_«me
));

451 
	}
}

455 
	$Àaky_e°im©e
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
size_t
 *
e°
)

457 i‡(!
	`Àaky_öãª°ed
(
c
))

458  (
WALK_NEXT
);

460 *
e°
 +
	`umem_e°im©e_Æloˇãd
(
addr
, 
c
);

462  (
WALK_NEXT
);

463 
	}
}

467 
	$Àaky_ˇche
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
Àak_mèb_t
 **
lmp
)

469 
Àak_mèb_t
 *
lm
 = *
lmp
;

470 
mdb_wÆk_cb_t
 
cb
;

471 c⁄° *
wÆk
;

472 
audô
 = (
c
->
ˇche_Êags
 & 
UMF_AUDIT
);

474 i‡(!
	`Àaky_öãª°ed
(
c
))

475  (
WALK_NEXT
);

477 i‡(
audô
) {

478 
wÆk
 = "bufctl";

479 
cb
 = (
mdb_wÆk_cb_t
)
Àaky_mèb
;

481 
wÆk
 = "umem";

482 
cb
 = (
mdb_wÆk_cb_t
)
Àaky_mèb_addr
;

484 i‡(
	`mdb_pwÆk
(
wÆk
, 
cb
, 
lmp
, 
addr
) == -1) {

485 
	`mdb_w¨n
("ˇn'àwÆk umem f‹ cachê%∞(%s)", 
addr
,

486 
c
->
ˇche_«me
);

487  (
WALK_DONE
);

490 ; 
lm
 < *
lmp
;Üm++) {

491 
lm
->
lkm_limô
 =Üm->
lkm_ba£
 + 
c
->
ˇche_bufsize
;

492 i‡(!
audô
)

493 
lm
->
lkm_buf˘l
 = 
	`LKM_CTL
(
addr
, 
LKM_CTL_CACHE
);

495  (
WALK_NEXT
);

496 
	}
}

498 *
	gm≠_hód
 = "%-?s %?s %-10s usedÑeason\n";

499 *
	gm≠_fmt
 = "[%?p,%?p) %-10s ";

500 
	#BACKING_LEN
 10

	)

503 
	$Àaky_m≠pögs_hódî
()

505 
	`d¥ötf
((
m≠_hód
, "mapping", "", "backing"));

506 
	}
}

510 
	$Àaky_gªp_m≠pögs
(
uöçå_t
 
ign‹ed
, c⁄° 
¥m≠_t
 *
pmp
,

511 c⁄° 
p°©us_t
 *
P•
)

513 c⁄° *
m≠_lib«me_±r
;

514 
db_mp_«me
[
BACKING_LEN
+1];

516 
m≠_lib«me_±r
 = 
	`°ºchr
(
pmp
->
¥_m≠«me
, '/');

517 i‡(
m≠_lib«me_±r
 !
NULL
)

518 
m≠_lib«me_±r
++;

520 
m≠_lib«me_±r
 = 
pmp
->
¥_m≠«me
;

522 
	`°æ˝y
(
db_mp_«me
, 
m≠_lib«me_±r
,  (db_mp_name));

524 
	`d¥ötf
((
m≠_fmt
, 
pmp
->
¥_vaddr
, (*Ìmp->¥_vadd∏+Ömp->
¥_size
,

525 
db_mp_«me
));

527 
	#USE
(
r¢
Ë
	`d¥ötf_c⁄t
(("ye† %s\n", (r¢)))

	)

528 
	#IGNORE
(
r¢
Ë
	`d¥ötf_c⁄t
(("nÿ %s\n", (r¢)))

	)

530 i‡(!(
pmp
->
¥_mÊags
 & 
MA_WRITE
Ë|| !’mp->¥_mÊag†& 
MA_READ
)) {

531 
	`IGNORE
("read-only");

532 } i‡(
pmp
->
¥_vaddr
 <
P•
->
¥_brkba£
 &&

533 
pmp
->
¥_vaddr
 +Ömp->
¥_size
 > 
P•
->
¥_brkba£
) {

534 
	`USE
("bss");

535 
	`Àaky_gªp
(
pmp
->
¥_vaddr
, 
P•
->
¥_brkba£
 -Ömp->pr_vaddr);

536 } i‡(
pmp
->
¥_vaddr
 >
P•
->
¥_brkba£
 &&

537 
pmp
->
¥_vaddr
 < 
P•
->
¥_brkba£
 + P•->
¥_brksize
) {

538 
	`IGNORE
("in brk");

539 } i‡(
pmp
->
¥_vaddr
 =
P•
->
¥_°kba£
 &&

540 
pmp
->
¥_size
 =
P•
->
¥_°ksize
) {

541 
	`IGNORE
("stack");

542 } i‡(0 =
	`°rcmp
(
m≠_lib«me_±r
, "a.out")) {

543 
	`USE
("a.out data");

544 
	`Àaky_gªp
(
pmp
->
¥_vaddr
,Ömp->
¥_size
);

545 } i‡(0 =
	`°∫cmp
(
m≠_lib«me_±r
, "libumem.so", 10)) {

546 
	`IGNORE
("part of umem");

547 } i‡(
pmp
->
¥_m≠«me
[0] != 0) {

548 
	`USE
("lib data");

549 
	`Àaky_gªp
(
pmp
->
¥_vaddr
,Ömp->
¥_size
);

550 } i‡((
pmp
->
¥_mÊags
 & 
MA_ANON
Ë&&Ömp->
¥_m≠«me
[0] == 0) {

551 
	`IGNORE
("anon");

553 
	`IGNORE
("");

556 #unde‡
USE


557 #unde‡
IGNORE


559  (
WALK_NEXT
);

560 
	}
}

564 
	$Àaky_m¨k_lwp
(*
ign‹ed
, c⁄° 
lwp°©us_t
 *
lwp
)

566 
	`Àaky_m¨k_±r
(
lwp
->
¥_ªg
[
R_SP
] + 
STACK_BIAS
);

568 
	}
}

572 
	$Àaky_¥o˚ss_lwp
(*
ign‹ed
, c⁄° 
lwp°©us_t
 *
lwp
)

574 c⁄° 
uöçå_t
 *
ªgs
 = (c⁄° uöçå_à*)&
lwp
->
¥_ªg
;

575 
i
;

576 
uöçå_t
 
•
;

577 
uöçå_t
 
addr
;

578 
size_t
 
size
;

580 
i
 = 0; i < 
R_SP
; i++)

581 
	`Àaky_gªp_±r
(
ªgs
[
i
]);

583 
•
 = 
ªgs
[
i
++] + 
STACK_BIAS
;

584 i‡(
	`Àaky_lookup_m¨ked
(
•
, &
addr
, &
size
))

585 
	`Àaky_gªp
(
•
, 
size
 - (• - 
addr
));

587 ; 
i
 < 
NPRGREG
; i++)

588 
	`Àaky_gªp_±r
(
ªgs
[
i
]);

591 
	}
}

599 
	$Àaky_¥o˚ss_¥oc
()

601 
p°©us_t
 
Ps
;

602 
ps_¥och™dÀ
 *
Pr
;

604 i‡(
	`mdb_gë_xd©a
("p°©us", &
Ps
,  (Ps)) == -1) {

605 
	`mdb_w¨n
("couldn'tÑeadÖstatus xdata");

606  (
DCMD_ERR
);

609 
	`d¥ötf
(("pstatus says:\n"));

610 
	`d¥ötf
(("\tbrk: base %p size %p\n",

611 
Ps
.
¥_brkba£
, Ps.
¥_brksize
));

612 
	`d¥ötf
(("\tstk: base %p size %p\n",

613 
Ps
.
¥_°kba£
, Ps.
¥_°ksize
));

615 i‡(
	`mdb_gë_xd©a
("psh™dÀ", &
Pr
,  (Pr)) == -1) {

616 
	`mdb_w¨n
("couldn'tÑeadÖshandle xdata");

617  (
DCMD_ERR
);

620 i‡(
	`Plwp_ôî
(
Pr
, 
Àaky_m¨k_lwp
, 
NULL
) != 0) {

621 
	`mdb_w¨n
("findleaks: FailedÅo iterateÜwps\n");

622  (
DCMD_ERR
);

625 i‡(
	`Plwp_ôî
(
Pr
, 
Àaky_¥o˚ss_lwp
, 
NULL
) != 0) {

626 
	`mdb_w¨n
("findleaks: FailedÅo iterateÜwps\n");

627  (
DCMD_ERR
);

630 
	`¥ockludge_add_wÆkîs
();

632 
	`Àaky_m≠pögs_hódî
();

634 i‡(
	`mdb_wÆk
(
KLUDGE_MAPWALK_NAME
, (
mdb_wÆk_cb_t
)
Àaky_gªp_m≠pögs
,

635 &
Ps
) == -1) {

636 
	`mdb_w¨n
("Couldn'àwÆk "
KLUDGE_MAPWALK_NAME
);

637 
	`¥ockludge_ªmove_wÆkîs
();

641 
	`¥ockludge_ªmove_wÆkîs
();

644 
	}
}

647 
	$Àaky_subr_ˇŒî
(c⁄° 
uöçå_t
 *
°ack
, 
uöt_t
 
dïth
, *
buf
,

648 
uöçå_t
 *
p˝
)

650 
i
;

651 
GElf_Sym
 
sym
;

652 
uöçå_t
 
pc
 = 0;

654 
buf
[0] = 0;

656 
i
 = 0; i < 
dïth
; i++) {

657 
pc
 = 
°ack
[
i
];

659 i‡(
	`mdb_lookup_by_addr
(
pc
,

660 
MDB_SYM_FUZZY
, 
buf
, 
MDB_SYM_NAMLEN
, &
sym
) == -1)

662 i‡(
	`°∫cmp
(
buf
, "libumem.so", 10) == 0)

665 *
p˝
 = 
pc
;

673 *
p˝
 = 
pc
;

674 
	}
}

677 
	$Àaky_subr_buf˘l_cmp
(c⁄° 
Àak_buf˘l_t
 *
lhs
, c⁄°Üók_buf˘l_à*
rhs
)

679 
lbuf
[
MDB_SYM_NAMLEN
], 
rbuf
[MDB_SYM_NAMLEN];

680 
uöçå_t
 
lˇŒî
, 
rˇŒî
;

681 
rvÆ
;

683 
	`Àaky_subr_ˇŒî
(
lhs
->
lkb_°ack
,Ühs->
lkb_dïth
, 
lbuf
, &
lˇŒî
);

684 
	`Àaky_subr_ˇŒî
(
rhs
->
lkb_°ack
, 
lhs
->
lkb_dïth
, 
rbuf
, &
rˇŒî
);

686 i‡(
rvÆ
 = 
	`°rcmp
(
lbuf
, 
rbuf
))

687  (
rvÆ
);

689 i‡(
lˇŒî
 < 
rˇŒî
)

692 i‡(
lˇŒî
 > 
rˇŒî
)

695 i‡(
lhs
->
lkb_d©a
 < 
rhs
->lkb_data)

698 i‡(
lhs
->
lkb_d©a
 > 
rhs
->lkb_data)

702 
	}
}

706 
	$Àaky_subr_e°im©e
(
size_t
 *
e°p
)

708 i‡(
umem_ªady
 == 0) {

709 
	`mdb_w¨n
(

711  (
DCMD_ERR
);

714 i‡(
umem_ªady
 =
UMEM_READY_INIT_FAILED
) {

715 
	`mdb_w¨n
("findleaks: umem initialization failed --Ço "

717  (
DCMD_ERR
);

720 i‡(
umem_ªady
 !
UMEM_READY
) {

721 
	`mdb_w¨n
("findleaks: Noállocations have occured --Ço "

723  (
DCMD_ERR
);

726 i‡(
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
Àaky_e°im©e
, 
e°p
) == -1) {

727 
	`mdb_w¨n
("couldn't walk 'umem_cache'");

728  (
DCMD_ERR
);

731 i‡(
	`mdb_wÆk
("vmem", (
mdb_wÆk_cb_t
)
Àaky_e°im©e_vmem
, 
e°p
) == -1) {

732 
	`mdb_w¨n
("couldn't walk 'vmem'");

733  (
DCMD_ERR
);

736 i‡(*
e°p
 == 0) {

737 
	`mdb_w¨n
("findleaks: Noállocated buffers found.\n");

738  (
DCMD_ERR
);

741 
	`¥ockludge_add_wÆkîs
();

743 i‡(
	`mdb_wÆk
(
KLUDGE_MAPWALK_NAME
, (
mdb_wÆk_cb_t
)
Àaky_cou¡
,

744 
e°p
) == -1) {

745 
	`mdb_w¨n
("Couldn'àwÆk "
KLUDGE_MAPWALK_NAME
);

746 
	`¥ockludge_ªmove_wÆkîs
();

747  (
DCMD_ERR
);

750 
	`¥ockludge_ªmove_wÆkîs
();

752  (
DCMD_OK
);

753 
	}
}

756 
	$Àaky_subr_fûl
(
Àak_mèb_t
 **
lmµ
)

758 i‡(
	`Àaky_h™dÀ_™⁄_m≠pögs
(
lmµ
Ë!
DCMD_OK
) {

759 
	`mdb_w¨n
("unableÅoÖrocess mappings\n");

760  (
DCMD_ERR
);

763 i‡(
	`mdb_wÆk
("vmem", (
mdb_wÆk_cb_t
)
Àaky_vmem
, 
lmµ
) == -1) {

764 
	`mdb_w¨n
("couldn't walk 'vmem'");

765  (
DCMD_ERR
);

768 i‡(
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
Àaky_ˇche
, 
lmµ
) == -1) {

769 
	`mdb_w¨n
("couldn't walk 'umem_cache'");

770  (
DCMD_ERR
);

773  (
DCMD_OK
);

774 
	}
}

777 
	$Àaky_subr_run
()

779 i‡(
	`Àaky_¥o˚ss_¥oc
(Ë=
DCMD_ERR
) {

780 
	`mdb_w¨n
("failedÅoÖrocessÖroc");

781  (
DCMD_ERR
);

783  (
DCMD_OK
);

784 
	}
}

787 
	$Àaky_subr_add_Àak
(
Àak_mèb_t
 *
lmp
)

789 
uöçå_t
 
addr
 = 
	`LKM_CTLPTR
(
lmp
->
lkm_buf˘l
);

790 
uöt_t
 
dïth
;

792 
vmem_£g_t
 
vs
;

793 
umem_buf˘l_audô_t
 *
b˝
;

794 
	`UMEM_LOCAL_BUFCTL_AUDIT
(&
b˝
);

796 
	`LKM_CTLTYPE
(
lmp
->
lkm_buf˘l
)) {

797 
LKM_CTL_BUFCTL
:

798 i‡(
	`mdb_vªad
(
b˝
, 
UMEM_BUFCTL_AUDIT_SIZE
, 
addr
) == -1) {

799 
	`mdb_w¨n
("couldn'tÑeadÜeaked bufctlátáddr %p",

800 
addr
);

804 
dïth
 = 
	`MIN
(
b˝
->
bc_dïth
, 
umem_°ack_dïth
);

814 i‡(
dïth
 > 0)

815 
dïth
--;

816 
	`Àaky_add_Àak
(
TYPE_UMEM
, 
addr
, (
uöçå_t
)
b˝
->
bc_addr
,

817 
b˝
->
bc_time°amp
, b˝->
bc_°ack
 + 1, 
dïth
,

818 (
uöçå_t
)
b˝
->
bc_ˇche
, (uintptr_t)bcp->bc_cache);

820 
LKM_CTL_VMSEG
:

821 i‡(
	`mdb_vªad
(&
vs
,  (vs), 
addr
) == -1) {

822 
	`mdb_w¨n
("couldn'tÑeadÜeaked vmem_segátáddr %p",

823 
addr
);

826 
dïth
 = 
	`MIN
(
vs
.
vs_dïth
, 
VMEM_STACK_DEPTH
);

828 
	`Àaky_add_Àak
(
TYPE_VMEM
, 
addr
, 
vs
.
vs_°¨t
, vs.
vs_time°amp
,

829 
vs
.
vs_°ack
, 
dïth
, 0, (vs.
vs_íd
 - vs.
vs_°¨t
));

831 
LKM_CTL_MEMORY
:

832 i‡(
	`LEAKY_INBRK
(
addr
))

833 
	`Àaky_add_Àak
(
TYPE_SBRK
, 
addr
,áddr, 0, 
NULL
, 0, 0,

834 
lmp
->
lkm_limô
 - 
addr
);

836 
	`Àaky_add_Àak
(
TYPE_MMAP
, 
addr
,áddr, 0, 
NULL
, 0, 0,

837 
lmp
->
lkm_limô
 - 
addr
);

839 
LKM_CTL_CACHE
:

840 
	`Àaky_add_Àak
(
TYPE_CACHE
, 
lmp
->
lkm_ba£
,Ümp->lkm_base, 0,

841 
NULL
, 0, 
addr
,áddr);

844 
	`mdb_w¨n
("internalÉrror: invalidÜeak_bufctl_t\n");

847 
	}
}

849 
	glk_vmem_£í
;

850 
	glk_ˇche_£í
;

851 
	glk_umem_£í
;

852 
size_t
 
	glk_âl
;

853 
size_t
 
	glk_byãs
;

856 
	$Àaky_subr_dump_°¨t
(
ty≥
)

858 
ty≥
) {

859 
TYPE_MMAP
:

860 
lk_vmem_£í
 = 0;

863 
TYPE_SBRK
:

864 
TYPE_VMEM
:

867 
TYPE_CACHE
:

868 
lk_ˇche_£í
 = 0;

871 
TYPE_UMEM
:

872 
lk_umem_£í
 = 0;

879 
lk_âl
 = 0;

880 
lk_byãs
 = 0;

881 
	}
}

884 
	$Àaky_subr_dump
(c⁄° 
Àak_buf˘l_t
 *
lkb
, 
vîbo£
)

886 c⁄° 
Àak_buf˘l_t
 *
cur
;

887 
umem_ˇche_t
 
ˇche
;

888 
size_t
 
mö
, 
max
, 
size
;

889 
sz
[30];

890 
c
[
MDB_SYM_NAMLEN
];

891 
uöçå_t
 
ˇŒî
;

892 c⁄° *
nm
, *
nm_lc
;

893 
uöt8_t
 
ty≥
 = 
lkb
->
lkb_ty≥
;

895 i‡(
vîbo£
) {

896 
lk_âl
 = 0;

897 
lk_byãs
 = 0;

898 } i‡(!
lk_vmem_£í
 && (
ty≥
 =
TYPE_VMEM
 ||Åy≥ =
TYPE_MMAP
 ||

899 
ty≥
 =
TYPE_SBRK
)) {

900 
lk_vmem_£í
 = 1;

901 
	`mdb_¥ötf
("%-16s %7s %?s %s\n",

905 
lkb
->
lkb_ty≥
) {

906 
TYPE_MMAP
:

907 
TYPE_SBRK
:

908 
nm
 = (
lkb
->
lkb_ty≥
 =
TYPE_MMAP
) ? "MMAP" : "SBRK";

909 
nm_lc
 = (
lkb
->
lkb_ty≥
 =
TYPE_MMAP
) ? "mmap(2)" : "sbrk(2)";

911 ; 
lkb
 !
NULL
;Ükb =Ükb->
lkb_√xt
) {

912 i‡(!
vîbo£
)

913 
	`mdb_¥ötf
("%-16d %7d %?∞%s\n", 
lkb
->
lkb_d©a
,

914 
lkb
->
lkb_dups
 + 1,Ükb->
lkb_addr
, 
nm
);

916 
	`mdb_¥ötf
("%sÜeak: [%p, %p), %ld bytes\n",

917 
nm_lc
, 
lkb
->
lkb_addr
,

918 
lkb
->
lkb_addr
 +Ükb->
lkb_d©a
,

919 
lkb
->
lkb_d©a
);

920 
lk_âl
++;

921 
lk_byãs
 +
lkb
->
lkb_d©a
;

925 
TYPE_VMEM
:

926 
mö
 = 
max
 = 
lkb
->
lkb_d©a
;

928 
cur
 = 
lkb
; cu∏!
NULL
; cu∏cur->
lkb_√xt
) {

929 
size
 = 
cur
->
lkb_d©a
;

931 i‡(
size
 < 
mö
)

932 
mö
 = 
size
;

933 i‡(
size
 > 
max
)

934 
max
 = 
size
;

936 
lk_âl
++;

937 
lk_byãs
 +
size
;

940 i‡(
mö
 =
max
)

941 (Ë
	`mdb_¢¥ötf
(
sz
,  (sz), "%ld", 
mö
);

943 (Ë
	`mdb_¢¥ötf
(
sz
,  (sz), "%ld-%ld",

944 
mö
, 
max
);

946 i‡(!
vîbo£
) {

947 
	`Àaky_subr_ˇŒî
(
lkb
->
lkb_°ack
,Ükb->
lkb_dïth
,

948 
c
, &
ˇŒî
);

950 
	`mdb_¥ötf
("%-16†%7d %?∞%a\n", 
sz
, 
lkb
->
lkb_dups
 + 1,

951 
lkb
->
lkb_addr
, 
ˇŒî
);

953 
mdb_¨g_t
 
v
;

955 i‡(
lk_âl
 == 1)

956 
	`mdb_¥ötf
("umem_oversizeÜeak: 1 vmem_seg, "

957 "%ld byãs\n", 
lk_byãs
);

959 
	`mdb_¥ötf
("umem_oversizeÜeak: %d vmem_segs, "

961 
lk_âl
, 
sz
, 
lk_byãs
);

963 
v
.
a_ty≥
 = 
MDB_TYPE_STRING
;

964 
v
.
a_un
.
a_°r
 = "-v";

966 i‡(
	`mdb_ˇŒ_dcmd
("vmem_£g", 
lkb
->
lkb_addr
,

967 
DCMD_ADDRSPEC
, 1, &
v
) == -1) {

968 
	`mdb_w¨n
("'%p::vmem_seg -v' failed",

969 
lkb
->
lkb_addr
);

974 
TYPE_CACHE
:

975 i‡(!
lk_ˇche_£í
) {

976 
lk_ˇche_£í
 = 1;

977 i‡(
lk_vmem_£í
)

978 
	`mdb_¥ötf
("\n");

979 
	`mdb_¥ötf
("%-?s %7s %?s %s\n",

983 i‡(
	`mdb_vªad
(&
ˇche
,  (ˇche), 
lkb
->
lkb_d©a
) == -1) {

989 
	`mdb_w¨n
("can'tÑead cache %p forÜeaked "

990 "buf„∏%p", 
lkb
->
lkb_d©a
,Ükb->
lkb_addr
);

994 
lk_âl
 +
lkb
->
lkb_dups
 + 1;

995 
lk_byãs
 +(
lkb
->
lkb_dups
 + 1Ë* 
ˇche
.
ˇche_bufsize
;

997 
ˇŒî
 = (
lkb
->
lkb_dïth
 =0Ë? 0 :Ükb->
lkb_°ack
[0];

998 i‡(
ˇŒî
 != 0) {

999 (Ë
	`mdb_¢¥ötf
(
c
,  (c), "%a", 
ˇŒî
);

1001 (Ë
	`mdb_¢¥ötf
(
c
,  (c), "%s",

1002 (
vîbo£
) ? "" : "?");

1005 i‡(!
vîbo£
) {

1006 
	`mdb_¥ötf
("%0?∞%7d %0?∞%s\n", 
lkb
->
lkb_cid
,

1007 
lkb
->
lkb_dups
 + 1,Ükb->
lkb_addr
, 
c
);

1009 i‡(
lk_âl
 == 1)

1010 
	`mdb_¥ötf
("%sÜeak: 1 buffer, %ld bytes,\n",

1011 
ˇche
.
ˇche_«me
, 
lk_byãs
);

1013 
	`mdb_¥ötf
("%sÜeak: %d buffers, "

1015 
ˇche
.
ˇche_«me
, 
lk_âl
,

1016 
ˇche
.
ˇche_bufsize
, 
lk_byãs
);

1017 
	`mdb_¥ötf
(" %s%s%ssampleáddr %p\n",

1018 (
ˇŒî
 =0Ë? "" : "ˇŒî ", 
c
,

1019 (
ˇŒî
 =0Ë? "" : ", ", 
lkb
->
lkb_addr
);

1023 
TYPE_UMEM
:

1024 i‡(!
lk_umem_£í
) {

1025 
lk_umem_£í
 = 1;

1026 i‡(
lk_vmem_£í
 || 
lk_ˇche_£í
)

1027 
	`mdb_¥ötf
("\n");

1028 
	`mdb_¥ötf
("%-?s %7s %?s %s\n",

1031 i‡(
	`mdb_vªad
(&
ˇche
,  (ˇche), 
lkb
->
lkb_d©a
) == -1) {

1037 
	`mdb_w¨n
("can'tÑead cache %p forÜeaked "

1038 "buf˘»%p", 
lkb
->
lkb_d©a
,Ükb->
lkb_addr
);

1042 
lk_âl
 +
lkb
->
lkb_dups
 + 1;

1043 
lk_byãs
 +(
lkb
->
lkb_dups
 + 1Ë* 
ˇche
.
ˇche_bufsize
;

1045 i‡(!
vîbo£
) {

1046 
	`Àaky_subr_ˇŒî
(
lkb
->
lkb_°ack
,Ükb->
lkb_dïth
, 
c
,

1047 &
ˇŒî
);

1049 
	`mdb_¥ötf
("%0?∞%7d %0?∞%a\n", 
lkb
->
lkb_d©a
,

1050 
lkb
->
lkb_dups
 + 1,Ükb->
lkb_addr
, 
ˇŒî
);

1052 
mdb_¨g_t
 
v
;

1054 i‡(
lk_âl
 == 1)

1055 
	`mdb_¥ötf
("%sÜeak: 1 buffer, %ld bytes\n",

1056 
ˇche
.
ˇche_«me
, 
lk_byãs
);

1058 
	`mdb_¥ötf
("%sÜeak: %d buffers, "

1060 
ˇche
.
ˇche_«me
, 
lk_âl
,

1061 
ˇche
.
ˇche_bufsize
, 
lk_byãs
);

1063 
v
.
a_ty≥
 = 
MDB_TYPE_STRING
;

1064 
v
.
a_un
.
a_°r
 = "-v";

1066 i‡(
	`mdb_ˇŒ_dcmd
("buf˘l", 
lkb
->
lkb_addr
,

1067 
DCMD_ADDRSPEC
, 1, &
v
) == -1) {

1068 
	`mdb_w¨n
("'%p::bufctl -v' failed",

1069 
lkb
->
lkb_addr
);

1077 
	}
}

1080 
	$Àaky_subr_dump_íd
(
ty≥
)

1082 
i
;

1083 
width
;

1084 c⁄° *
Àak
;

1086 
ty≥
) {

1087 
TYPE_VMEM
:

1088 i‡(!
lk_vmem_£í
)

1091 
width
 = 16;

1092 
Àak
 = "oversizedÜeak";

1095 
TYPE_CACHE
:

1096 i‡(!
lk_ˇche_£í
)

1099 
width
 =  (
uöçå_t
) * 2;

1100 
Àak
 = "buffer";

1103 
TYPE_UMEM
:

1104 i‡(!
lk_umem_£í
)

1107 
width
 =  (
uöçå_t
) * 2;

1108 
Àak
 = "buffer";

1115 
i
 = 0; i < 72; i++)

1116 
	`mdb_¥ötf
("-");

1117 
	`mdb_¥ötf
("\n%*s %7ld %s%s, %ld byte%s\n",

1118 
width
, "TŸÆ", 
lk_âl
, 
Àak
, (lk_ttl == 1) ? "" : "s",

1119 
lk_byãs
, (lk_bytes == 1) ? "" : "s");

1120 
	}
}

1123 
	$Àaky_subr_övoke_ˇŒback
(c⁄° 
Àak_buf˘l_t
 *
lkb
, 
mdb_wÆk_cb_t
 
cb
,

1124 *
cbd©a
)

1126 
vmem_£g_t
 
vs
;

1127 
umem_buf˘l_audô_t
 *
b˝
;

1128 
	`UMEM_LOCAL_BUFCTL_AUDIT
(&
b˝
);

1130 
lkb
->
lkb_ty≥
) {

1131 
TYPE_VMEM
:

1132 i‡(
	`mdb_vªad
(&
vs
,  (vs), 
lkb
->
lkb_addr
) == -1) {

1133 
	`mdb_w¨n
("unableÅoÑead vmem_segát %p",

1134 
lkb
->
lkb_addr
);

1135  (
WALK_NEXT
);

1137  (
	`cb
(
lkb
->
lkb_addr
, &
vs
, 
cbd©a
));

1139 
TYPE_UMEM
:

1140 i‡(
	`mdb_vªad
(
b˝
, 
UMEM_BUFCTL_AUDIT_SIZE
,

1141 
lkb
->
lkb_addr
) == -1) {

1142 
	`mdb_w¨n
("unableÅoÑead bufctlát %p",

1143 
lkb
->
lkb_addr
);

1144  (
WALK_NEXT
);

1146  (
	`cb
(
lkb
->
lkb_addr
, 
b˝
, 
cbd©a
));

1149  (
	`cb
(
lkb
->
lkb_addr
, 
NULL
, 
cbd©a
));

1151 
	}
}

	@libumem.c

26 
	~"umem.h
"

27 
	~<lib¥oc.h
>

28 
	~<mdb/mdb_mod≠i.h
>

30 
	~"kgªp.h
"

31 
	~"Àaky.h
"

32 
	~"misc.h
"

33 
	~"¥oc_kludges.h
"

35 
	~<umem_im∂.h
>

36 
	~<sys/vmem_im∂_u£r.h
>

38 
	~"umem_∑gesize.h
"

40 
	sd©afmt
 {

41 *
	mhdr1
;

42 *
	mhdr2
;

43 *
	mdashes
;

44 *
	mfmt
;

45 } 
	td©afmt_t
;

47 
d©afmt_t
 
	gumemfmt
[] = {

56 { 
NULL
, NULL, NULL, NULL }

59 
d©afmt_t
 
	gvmemfmt
[] = {

67 { 
NULL
, NULL, NULL, NULL }

72 
	$uma°©_˝u_avaû
(
uöçå_t
 
addr
, c⁄° 
umem_˝u_ˇche_t
 *
c˝
, *
avaû
)

74 i‡(
c˝
->
cc_rounds
 > 0)

75 *
avaû
 +
c˝
->
cc_rounds
;

76 i‡(
c˝
->
cc_¥ounds
 > 0)

77 *
avaû
 +
c˝
->
cc_¥ounds
;

79  (
WALK_NEXT
);

80 
	}
}

84 
	$uma°©_˝u_Æloc
(
uöçå_t
 
addr
, c⁄° 
umem_˝u_ˇche_t
 *
c˝
, *
Æloc
)

86 *
Æloc
 +
c˝
->
cc_Æloc
;

88  (
WALK_NEXT
);

89 
	}
}

93 
	$uma°©_¶ab_avaû
(
uöçå_t
 
addr
, c⁄° 
umem_¶ab_t
 *
•
, *
avaû
)

95 *
avaû
 +
•
->
¶ab_chunks
 - sp->
¶ab_ªf˙t
;

97  (
WALK_NEXT
);

98 
	}
}

100 
	suma°©_vmem
 {

101 
uöçå_t
 
	mkv_addr
;

102 
uma°©_vmem
 *
	mkv_√xt
;

103 
	mkv_memöu£
;

104 
	mkv_Æloc
;

105 
	mkv_Áû
;

106 } 
	tuma°©_vmem_t
;

109 
	$uma°©_ˇche
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
˝
, 
uma°©_vmem_t
 **
kvp
)

111 
uma°©_vmem_t
 *
kv
;

112 
d©afmt_t
 *
dÂ
 = 
umemfmt
;

113 
magsize
;

115 
avaû
, 
Æloc
, 
tŸÆ
;

116 
size_t
 
memöu£
 = (
˝
->
ˇche_¶ab_¸óã
 - cp->
ˇche_¶ab_de°roy
) *

117 
˝
->
ˇche_¶absize
;

119 
mdb_wÆk_cb_t
 
˝u_avaû
 = (mdb_wÆk_cb_t)
uma°©_˝u_avaû
;

120 
mdb_wÆk_cb_t
 
˝u_Æloc
 = (mdb_wÆk_cb_t)
uma°©_˝u_Æloc
;

121 
mdb_wÆk_cb_t
 
¶ab_avaû
 = (mdb_wÆk_cb_t)
uma°©_¶ab_avaû
;

123 
magsize
 = 
	`umem_gë_magsize
(
˝
);

125 
Æloc
 = 
˝
->
ˇche_¶ab_Æloc
 + cp->
ˇche_fuŒ
.
ml_Æloc
;

126 
avaû
 = 
˝
->
ˇche_fuŒ
.
ml_tŸÆ
 * 
magsize
;

127 
tŸÆ
 = 
˝
->
ˇche_bu·ŸÆ
;

129 (Ë
	`mdb_pwÆk
("umem_˝u_ˇche", 
˝u_Æloc
, &
Æloc
, 
addr
);

130 (Ë
	`mdb_pwÆk
("umem_˝u_ˇche", 
˝u_avaû
, &
avaû
, 
addr
);

131 (Ë
	`mdb_pwÆk
("umem_¶ab_∑πül", 
¶ab_avaû
, &
avaû
, 
addr
);

133 
kv
 = *
kvp
; kv !
NULL
; kv = kv->
kv_√xt
) {

134 i‡(
kv
->
kv_addr
 =(
uöçå_t
)
˝
->
ˇche_¨ía
)

135 
out
;

138 
kv
 = 
	`mdb_zÆloc
( (
uma°©_vmem_t
), 
UM_SLEEP
 | 
UM_GC
);

139 
kv
->
kv_√xt
 = *
kvp
;

140 
kv
->
kv_addr
 = (
uöçå_t
)
˝
->
ˇche_¨ía
;

141 *
kvp
 = 
kv
;

142 
out
:

143 
kv
->
kv_memöu£
 +
memöu£
;

144 
kv
->
kv_Æloc
 +
Æloc
;

145 
kv
->
kv_Áû
 +
˝
->
ˇche_Æloc_Áû
;

147 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
˝
->
ˇche_«me
);

148 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
˝
->
ˇche_bufsize
);

149 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
tŸÆ
 - 
avaû
);

150 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
tŸÆ
);

151 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
memöu£
);

152 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
Æloc
);

153 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
˝
->
ˇche_Æloc_Áû
);

154 
	`mdb_¥ötf
("\n");

156  (
WALK_NEXT
);

157 
	}
}

160 
	$uma°©_vmem_tŸÆs
(
uöçå_t
 
addr
, c⁄° 
vmem_t
 *
v
, 
uma°©_vmem_t
 *
kv
)

162 
kv
 !
NULL
 && kv->
kv_addr
 !
addr
)

163 
kv
 = kv->
kv_√xt
;

165 i‡(
kv
 =
NULL
 || kv->
kv_Æloc
 == 0)

166  (
WALK_NEXT
);

168 
	`mdb_¥ötf
("TŸÆ [%s]%*†%6†%6†%6†%9u %9u %5u\n", 
v
->
vm_«me
,

169 17 - 
	`°æí
(
v
->
vm_«me
), "", "", "", "",

170 
kv
->
kv_memöu£
, kv->
kv_Æloc
, kv->
kv_Áû
);

172  (
WALK_NEXT
);

173 
	}
}

177 
	$uma°©_vmem
(
uöçå_t
 
addr
, c⁄° 
vmem_t
 *
v
, *
ign‹ed
)

179 
d©afmt_t
 *
dÂ
 = 
vmemfmt
;

180 
uöçå_t
 
∑ddr
;

181 
vmem_t
 
∑ª¡
;

182 
idít
 = 0;

184 
∑ddr
 = (
uöçå_t
)
v
->
vm_sour˚
;Öadd∏!
NULL
; 
idít
 += 4) {

185 i‡(
	`mdb_vªad
(&
∑ª¡
,  (∑ª¡), 
∑ddr
) == -1) {

186 
	`mdb_w¨n
("couldn'àåa˚ %p'†™˚°ry", 
addr
);

187 
idít
 = 0;

190 
∑ddr
 = (
uöçå_t
)
∑ª¡
.
vm_sour˚
;

193 
	`mdb_¥ötf
("%*s", 
idít
, "");

194 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 25 - 
idít
, 
v
->
vm_«me
);

195 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
v
->
vm_k°©
.
vk_mem_öu£
);

196 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
v
->
vm_k°©
.
vk_mem_tŸÆ
);

197 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
v
->
vm_k°©
.
vk_mem_imp‹t
);

198 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
v
->
vm_k°©
.
vk_Æloc
);

199 
	`mdb_¥ötf
((
dÂ
++)->
fmt
, 
v
->
vm_k°©
.
vk_Áû
);

201 
	`mdb_¥ötf
("\n");

203  (
WALK_NEXT
);

204 
	}
}

208 
	$uma°©
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

210 
uma°©_vmem_t
 *
kv
 = 
NULL
;

211 
d©afmt_t
 *
dÂ
;

213 i‡(
¨gc
 != 0)

214  (
DCMD_USAGE
);

216 
dÂ
 = 
umemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

217 
	`mdb_¥ötf
("%†", 
dÂ
->
hdr1
);

218 
	`mdb_¥ötf
("\n");

220 
dÂ
 = 
umemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

221 
	`mdb_¥ötf
("%†", 
dÂ
->
hdr2
);

222 
	`mdb_¥ötf
("\n");

224 
dÂ
 = 
umemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

225 
	`mdb_¥ötf
("%†", 
dÂ
->
dashes
);

226 
	`mdb_¥ötf
("\n");

228 i‡(
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
uma°©_ˇche
, &
kv
) == -1) {

229 
	`mdb_w¨n
("can't walk 'umem_cache'");

230  (
DCMD_ERR
);

233 
dÂ
 = 
umemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

234 
	`mdb_¥ötf
("%†", 
dÂ
->
dashes
);

235 
	`mdb_¥ötf
("\n");

237 i‡(
	`mdb_wÆk
("vmem", (
mdb_wÆk_cb_t
)
uma°©_vmem_tŸÆs
, 
kv
) == -1) {

238 
	`mdb_w¨n
("can't walk 'vmem'");

239  (
DCMD_ERR
);

242 
dÂ
 = 
umemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

243 
	`mdb_¥ötf
("%†", 
dÂ
->
dashes
);

244 
	`mdb_¥ötf
("\n");

246 
	`mdb_¥ötf
("\n");

248 
dÂ
 = 
vmemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

249 
	`mdb_¥ötf
("%†", 
dÂ
->
hdr1
);

250 
	`mdb_¥ötf
("\n");

252 
dÂ
 = 
vmemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

253 
	`mdb_¥ötf
("%†", 
dÂ
->
hdr2
);

254 
	`mdb_¥ötf
("\n");

256 
dÂ
 = 
vmemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

257 
	`mdb_¥ötf
("%†", 
dÂ
->
dashes
);

258 
	`mdb_¥ötf
("\n");

260 i‡(
	`mdb_wÆk
("vmem", (
mdb_wÆk_cb_t
)
uma°©_vmem
, 
NULL
) == -1) {

261 
	`mdb_w¨n
("can't walk 'vmem'");

262  (
DCMD_ERR
);

265 
dÂ
 = 
vmemfmt
; dÂ->
hdr1
 !
NULL
; dfp++)

266 
	`mdb_¥ötf
("%†", 
dÂ
->
dashes
);

267 
	`mdb_¥ötf
("\n");

268  (
DCMD_OK
);

269 
	}
}

275 #i‚de‡
_KMDB


277 
	sugªp_wÆk_d©a
 {

278 
kgªp_cb_func
 *
	mug_cb
;

279 *
	mug_cbd©a
;

280 } 
	tugªp_wÆk_d©a_t
;

284 
	$ugªp_m≠pög_cb
(
uöçå_t
 
addr
, c⁄° *
¥m_¨g
, *
d©a
)

286 
ugªp_wÆk_d©a_t
 *
ug
 = 
d©a
;

287 c⁄° 
¥m≠_t
 *
¥m
 = 
¥m_¨g
;

289  (
ug
->
	`ug_cb
(
¥m
->
¥_vaddr
,Örm->¥_vadd∏+Örm->
¥_size
,

290 
ug
->
ug_cbd©a
));

291 
	}
}

294 
	$kgªp_subr
(
kgªp_cb_func
 *
cb
, *
cbd©a
)

296 
ugªp_wÆk_d©a_t
 
ug
;

298 
	`¥ockludge_add_wÆkîs
();

300 
ug
.
ug_cb
 = 
cb
;

301 
ug
.
ug_cbd©a
 = 
cbd©a
;

303 i‡(
	`mdb_wÆk
(
KLUDGE_MAPWALK_NAME
, 
ugªp_m≠pög_cb
, &
ug
) == -1) {

304 
	`mdb_w¨n
("U«bÀÅÿwÆk "
KLUDGE_MAPWALK_NAME
);

305  (
DCMD_ERR
);

308 
	`¥ockludge_ªmove_wÆkîs
();

309  (
DCMD_OK
);

310 
	}
}

312 
size_t


313 
	$kgªp_subr_∑gesize
()

315  (
PAGESIZE
);

316 
	}
}

320 c⁄° 
mdb_dcmd_t
 
	gdcmds
[] = {

323 { "uma°©", 
NULL
, "umemáŒoˇt‹ sèts", 
uma°©
 },

326 { "umem_debug", 
NULL
, "toggÀ umem dcmd/wÆk debuggög", 
umem_debug
},

329 { "umem_°©us", 
NULL
, "Print umem statusánd message buffer",

330 
umem_°©us
 },

332 
Ælocdby
 },

334 "[-àthd]", "¥öà‹ fûã∏®buf˘l", 
buf˘l
, 
buf˘l_hñp
 },

335 { "buf˘l_audô", ":", "¥öà®buf˘l_audô", 
buf˘l_audô
 },

336 { "‰ìdby", ":", "givíáÅhªad,Öröàô†‰ìd buf„rs", 
‰ìdby
 },

338 "di•œy umemÅønß˘i⁄Üogánd sèckÅø˚s", 
umÆog
 },

340 "u£r†o‡thêumemáŒoˇt‹", 
umau£rs
 },

341 { "umem_ˇche", "?", "¥öà®umem cache", 
umem_ˇche
 },

342 { "umem_log", "?", "dum∞umemÅønß˘i⁄Üog", 
umem_log
 },

345 
umem_mÆloc_di°
, 
umem_mÆloc_di°_hñp
 },

348 
umem_mÆloc_öfo
, 
umem_mÆloc_öfo_hñp
 },

350 
umem_vîify
 },

351 { "vmem", "?", "¥öà®vmem_t", 
vmem
 },

354 "¥öà‹ fûã∏®vmem_£g", 
vmem_£g
, 
vmem_£g_hñp
 },

356 #i‚de‡
_KMDB


358 { "ugªp", 
KGREP_USAGE
, "search useráddress space foráÖointer",

359 
kgªp
, 
kgªp_hñp
 },

362 { "födÀaks", 
FINDLEAKS_USAGE
, "search forÖotential memoryÜeaks",

363 
födÀaks
, 
födÀaks_hñp
 },

366 { 
NULL
 }

369 c⁄° 
mdb_wÆkî_t
 
	gwÆkîs
[] = {

373 
Ælocdby_wÆk_öô
, 
Ælocdby_wÆk_°ï
, 
Ælocdby_wÆk_föi
 },

375 
buf˘l_wÆk_öô
, 
umem_wÆk_°ï
, 
umem_wÆk_föi
 },

377 
buf˘l_hi°‹y_wÆk_öô
, 
buf˘l_hi°‹y_wÆk_°ï
,

378 
buf˘l_hi°‹y_wÆk_föi
 },

380 
‰ì˘l_wÆk_öô
, 
umem_wÆk_°ï
, 
umem_wÆk_föi
 },

382 
‰ìdby_wÆk_öô
, 
Ælocdby_wÆk_°ï
, 
Ælocdby_wÆk_föi
 },

384 
‰ìmem_wÆk_öô
, 
umem_wÆk_°ï
, 
umem_wÆk_föi
 },

386 
umem_wÆk_öô
, 
umem_wÆk_°ï
, 
umem_wÆk_föi
 },

388 
umem_˝u_wÆk_öô
, 
umem_˝u_wÆk_°ï
, 
umem_˝u_wÆk_föi
 },

390 
umem_˝u_ˇche_wÆk_öô
, 
umem_˝u_ˇche_wÆk_°ï
, 
NULL
 },

392 
umem_hash_wÆk_öô
, 
umem_hash_wÆk_°ï
, 
umem_hash_wÆk_föi
 },

394 
umem_log_wÆk_öô
, 
umem_log_wÆk_°ï
, 
umem_log_wÆk_föi
 },

396 
umem_¶ab_wÆk_öô
, 
umem_¶ab_wÆk_°ï
, 
NULL
 },

399 
umem_¶ab_wÆk_∑πül_öô
, 
umem_¶ab_wÆk_°ï
, 
NULL
 },

401 
vmem_wÆk_öô
, 
vmem_wÆk_°ï
, 
vmem_wÆk_föi
 },

403 
vmem_Æloc_wÆk_öô
, 
vmem_£g_wÆk_°ï
, 
vmem_£g_wÆk_föi
 },

405 
vmem_‰ì_wÆk_öô
, 
vmem_£g_wÆk_°ï
, 
vmem_£g_wÆk_föi
 },

407 
vmem_wÆk_öô
, 
vmem_po°fix_wÆk_°ï
, 
vmem_wÆk_föi
 },

409 
vmem_£g_wÆk_öô
, 
vmem_£g_wÆk_°ï
, 
vmem_£g_wÆk_föi
 },

411 
vmem_•™_wÆk_öô
, 
vmem_£g_wÆk_°ï
, 
vmem_£g_wÆk_föi
 },

413 #i‚de‡
_KMDB


416 
Àaky_wÆk_öô
, 
Àaky_wÆk_°ï
, 
Àaky_wÆk_föi
 },

418 
Àaky_wÆk_öô
, 
Àaky_buf_wÆk_°ï
, 
Àaky_wÆk_föi
 },

421 { 
NULL
 }

424 c⁄° 
mdb_modöfo_t
 
	gmodöfo
 = {
MDB_API_VERSION
, 
dcmds
, 
wÆkîs
};

426 c⁄° 
mdb_modöfo_t
 *

427 
	$_mdb_öô
()

429 i‡(
	`umem_öô
() != 0)

430  (
NULL
);

432  (&
modöfo
);

433 
	}
}

436 
	$_mdb_föi
()

438 #i‚de‡
_KMDB


439 
	`Àaky_˛ónup
(1);

441 
	}
}

	@misc.c

26 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

28 
	~"misc.h
"

30 
	#UMEM_OBJNAME
 "libumem.so"

	)

32 
	gumem_debug_Àvñ
 = 0;

33 
	gumem_is_°™dÆ⁄e
 = 0;

37 
	$umem_debug
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

39 
umem_debug_Àvñ
 ^= 1;

41 
	`mdb_¥ötf
("umem: debugging isÇow %s\n",

42 
umem_debug_Àvñ
 ? "on" : "off");

44  (
DCMD_OK
);

45 
	}
}

59 
	$umem_£t_°™dÆ⁄e
()

61 
GElf_Sym
 
sym
;

62 
ªady
;

64 i‡(
	`mdb_lookup_by_obj
(
UMEM_OBJNAME
, "umem_Æloc", &
sym
) == 0)

65 
umem_is_°™dÆ⁄e
 = 0;

66 i‡(
	`mdb_lookup_by_obj
(
MDB_OBJ_EXEC
, "umem_Æloc", &
sym
) == 0)

67 
umem_is_°™dÆ⁄e
 = 1;

75 i‡(
	`umem_ªadv¨
(&
ªady
, "umem_ready") == -1)

78 
	}
}

80 
ssize_t


81 
	$umem_lookup_by_«me
(c⁄° *
«me
, 
GElf_Sym
 *
sym
)

83  (
	`mdb_lookup_by_obj
((
umem_is_°™dÆ⁄e
 ? 
MDB_OBJ_EXEC
 :

84 
UMEM_OBJNAME
), 
«me
, 
sym
));

85 
	}
}

88 
ssize_t


89 
	$umem_ªadv¨
(*
buf
, c⁄° *
«me
)

91 
GElf_Sym
 
sym
;

93 i‡(
	`umem_lookup_by_«me
(
«me
, &
sym
))

96 i‡(
	`mdb_vªad
(
buf
, 
sym
.
°_size
, (
uöçå_t
)sym.
°_vÆue
)

97 =
sym
.
°_size
)

98  ((
ssize_t
)
sym
.
°_size
);

101 
	}
}

104 
	$is_umem_sym
(c⁄° *
sym
, c⁄° *
¥efix
)

106 *
tick_p
 = 
	`°ºchr
(
sym
, '`');

108  (
	`°∫cmp
(
sym
, "libumem", 7Ë=0 && 
tick_p
 !
NULL
 &&

109 
	`°∫cmp
(
tick_p
 + 1, 
¥efix
, 
	`°æí
(prefix)) == 0);

110 
	}
}

	@misc.h

26 #i‚def 
_MDBMOD_MISC_H


27 
	#_MDBMOD_MISC_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~<mdb/mdb_mod≠i.h
>

33 #ifde‡
__˝lu•lus


37 
	#off£tof
(
s
, 
m
Ë((
size_t
)(&(((†*)0)->m)))

	)

39 
umem_debug
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

41 
umem_£t_°™dÆ⁄e
();

42 
ssize_t
 
umem_lookup_by_«me
(c⁄° *, 
GElf_Sym
 *);

43 
ssize_t
 
umem_ªadv¨
(*, const *);

48 
is_umem_sym
(const *, const *);

50 
	#d¥ötf
(
x
Ëi‡(
umem_debug_Àvñ
) { \

51 
	`mdb_¥ötf
("umem debug: "); \

53 
mdb_¥ötf
 
x
 ;\

54 }

	)

56 
	#d¥ötf_c⁄t
(
x
Ëi‡(
umem_debug_Àvñ
) { \

58 
mdb_¥ötf
 
x
 ;\

59 }

	)

61 
umem_debug_Àvñ
;

63 #ifde‡
__˝lu•lus


	@proc_kludges.c

27 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

29 
	~<mdb/mdb_mod≠i.h
>

30 
	~<sys/machñf.h
>

32 
	~<lib¥oc.h
>

33 
	~<°dio.h
>

35 
	~"¥oc_kludges.h
"

37 
	s¥ockuldge_m≠pögs
 {

38 
ps_¥och™dÀ
 *
	mpkm_Pr
;

40 
uöt_t
 
	mpkm_idx
;

42 
uöt_t
 
	mpkm_cou¡
;

43 
uöt_t
 
	mpkm_max
;

45 
¥m≠_t
 *
	mpkm_m≠pögs
;

47 
uöt_t
 
	mpkm_ﬁd_max
;

48 
¥m≠_t
 *
	mpkm_ﬁd_m≠pögs
;

49 } 
	t¥ockludge_m≠pögs_t
;

53 
	$¥ockludge_m≠pögs_ôî
(
¥ockludge_m≠pögs_t
 *
pkm
, c⁄° 
¥m≠_t
 *
pmp
,

54 c⁄° *
obje˘_«me
)

56 i‡(
pkm
->
pkm_cou¡
 >pkm->
pkm_max
) {

57 
s
 = 
pkm
->
pkm_max
 ?Ökm->pkm_max * 2 : 16;

59 
pkm
->
pkm_ﬁd_max
 =Ökm->
pkm_max
;

60 
pkm
->
pkm_ﬁd_m≠pögs
 =Ökm->
pkm_m≠pögs
;

61 
pkm
->
pkm_max
 = 
s
;

62 
pkm
->
pkm_m≠pögs
 = 
	`mdb_Æloc
( (
¥m≠_t
Ë* 
s
, 
UM_SLEEP
);

64 
	`bc›y
(
pkm
->
pkm_ﬁd_m≠pögs
,Ökm->
pkm_m≠pögs
,

65  (
¥m≠_t
Ë* 
pkm
->
pkm_ﬁd_max
);

67 
	`mdb_‰ì
(
pkm
->
pkm_ﬁd_m≠pögs
,

68  (
¥m≠_t
Ë* 
pkm
->
pkm_ﬁd_max
);

70 
pkm
->
pkm_ﬁd_m≠pögs
 = 
NULL
;

71 
pkm
->
pkm_ﬁd_max
 = 0;

73 
	`bc›y
(
pmp
, &
pkm
->
pkm_m≠pögs
[pkm->
pkm_cou¡
++],  (
¥m≠_t
));

76 
	}
}

79 
	$¥ockludge_m≠pögs_wÆk_öô
(
mdb_wÆk_°©e_t
 *
mws
)

81 
ps_¥och™dÀ
 *
Pr
;

82 
rc
;

84 
¥ockludge_m≠pögs_t
 *
pkm
;

86 i‡(
	`mdb_gë_xd©a
("psh™dÀ", &
Pr
,  (Pr)) == -1) {

87 
	`mdb_w¨n
("couldn'tÑeadÖshandle xdata");

88  (
WALK_ERR
);

91 
pkm
 = 
	`mdb_zÆloc
( (
¥ockludge_m≠pögs_t
), 
UM_SLEEP
);

92 
pkm
->
pkm_Pr
 = 
Pr
;

93 
mws
->
wÆk_d©a
 = 
pkm
;

95 
rc
 = 
	`Pm≠pög_ôî
(
Pr
, (
¥oc_m≠_f
 *)
¥ockludge_m≠pögs_ôî
, 
pkm
);

96 i‡(
rc
 != 0) {

97 
	`mdb_w¨n
("Pmapping_iter failed");

99 
	`¥ockludge_m≠pögs_wÆk_föi
(
mws
);

100  (
WALK_ERR
);

102  (
WALK_NEXT
);

103 
	}
}

106 
	$¥ockludge_m≠pögs_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

108 
¥ockludge_m≠pögs_t
 *
pkm
 = 
w•
->
wÆk_d©a
;

109 
°©us
;

111 i‡(
pkm
->
pkm_idx
 >pkm->
pkm_cou¡
)

112  (
WALK_DONE
);

114 
°©us
 = 
w•
->
	`wÆk_ˇŒback
(0, &
pkm
->
pkm_m≠pögs
[pkm->
pkm_idx
++],

115 
w•
->
wÆk_cbd©a
);

117  (
°©us
);

118 
	}
}

121 
	$¥ockludge_m≠pögs_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

123 
¥ockludge_m≠pögs_t
 *
pkm
 = 
w•
->
wÆk_d©a
;

124 i‡(
pkm
 !
NULL
) {

125 i‡(
pkm
->
pkm_ﬁd_m≠pögs
 !
NULL
) {

126 
	`mdb_‰ì
(
pkm
->
pkm_ﬁd_m≠pögs
,

127  (
¥m≠_t
Ë* 
pkm
->
pkm_ﬁd_max
);

129 i‡(
pkm
->
pkm_m≠pögs
 &&

130 
pkm
->
pkm_m≠pögs
 !pkm->
pkm_ﬁd_m≠pögs
) {

131 
	`mdb_‰ì
(
pkm
->
pkm_m≠pögs
,

132  (
¥m≠_t
Ë* 
pkm
->
pkm_max
);

134 
	`mdb_‰ì
(
pkm
,  (
¥ockludge_m≠pögs_t
));

136 
	}
}

138 
	gadd_cou¡
 = 0;

141 
	$¥ockludge_add_wÆkîs
()

143 
mdb_wÆkî_t
 
w
;

145 i‡(
add_cou¡
++ == 0) {

146 
w
.
wÆk_«me
 = 
KLUDGE_MAPWALK_NAME
;

147 
w
.
wÆk_des¸
 = "kludge: walkÅheÖrocess'Örmap_ts";

148 
w
.
wÆk_öô
 = 
¥ockludge_m≠pögs_wÆk_öô
;

149 
w
.
wÆk_°ï
 = 
¥ockludge_m≠pögs_wÆk_°ï
;

150 
w
.
wÆk_föi
 = 
¥ockludge_m≠pögs_wÆk_föi
;

151 
w
.
wÆk_öô_¨g
 = 
NULL
;

153 i‡(
	`mdb_add_wÆkî
(&
w
) == -1) {

154 
	`mdb_w¨n
("u«bÀÅÿadd wÆkî "
KLUDGE_MAPWALK_NAME
);

157 
	}
}

160 
	$¥ockludge_ªmove_wÆkîs
()

162 i‡(--
add_cou¡
 == 0) {

163 
	`mdb_ªmove_wÆkî
(
KLUDGE_MAPWALK_NAME
);

165 
	}
}

	@proc_kludges.h

27 #i‚def 
_PROC_KLUDGES_H


28 
	#_PROC_KLUDGES_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 #ifdef 
__˝lu•lus


36 
	#KLUDGE_MAPWALK_NAME
 "__¥ockludge_m≠pögs"

	)

38 
¥ockludge_m≠pögs_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

39 
¥ockludge_m≠pögs_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

40 
¥ockludge_m≠pögs_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

42 
¥ockludge_add_wÆkîs
();

43 
¥ockludge_ªmove_wÆkîs
();

45 #ifdef 
__˝lu•lus


	@umem.c

26 
	~"umem.h
"

28 
	~<sys/vmem_im∂_u£r.h
>

29 
	~<umem_im∂.h
>

31 
	~<Æloˇ.h
>

32 
	~<limôs.h
>

33 
	~<mdb/mdb_wh©is.h
>

35 
	~"misc.h
"

36 
	~"Àaky.h
"

37 
	~"di°.h
"

39 
	~"umem_∑gesize.h
"

41 
	#UM_ALLOCATED
 0x1

	)

42 
	#UM_FREE
 0x2

	)

43 
	#UM_BUFCTL
 0x4

	)

44 
	#UM_HASH
 0x8

	)

46 
	gumem_ªady
;

48 
	gumem_°ack_dïth_w¨√d
;

49 
uöt32_t
 
	gumem_max_n˝us
;

50 
uöt32_t
 
	gumem_°ack_dïth
;

52 
size_t
 
	gumem_∑gesize
;

54 
	#UMEM_READVAR
(
v¨
) \

55 (
	`umem_ªadv¨
(&(
v¨
), #var) == -1 && \

56 (
	`mdb_w¨n
("ÁûedÅÿªad "#v¨), 1))

	)

59 
	$umem_upd©e_v¨übÀs
()

61 
size_t
 
∑gesize
;

67 i‡(
	`umem_£t_°™dÆ⁄e
() == -1) {

68 
umem_ªady
 = 0;

76 i‡(
	`umem_ªadv¨
(&
umem_max_n˝us
, "umem_max_ncpus") == -1 &&

77 
	`umem_ªadv¨
(&
umem_max_n˝us
, "max_ncpus") == -1) {

78 
	`mdb_w¨n
("unableÅoÑead umem_max_ncpus or max_ncpus");

81 i‡(
	`UMEM_READVAR
(
umem_ªady
))

83 i‡(
	`UMEM_READVAR
(
umem_°ack_dïth
))

85 i‡(
	`UMEM_READVAR
(
∑gesize
))

88 i‡(
umem_°ack_dïth
 > 
UMEM_MAX_STACK_DEPTH
) {

89 i‡(
umem_°ack_dïth_w¨√d
 == 0) {

90 
	`mdb_w¨n
("umem_stack_depth corrupted (%d > %d)\n",

91 
umem_°ack_dïth
, 
UMEM_MAX_STACK_DEPTH
);

92 
umem_°ack_dïth_w¨√d
 = 1;

94 
umem_°ack_dïth
 = 0;

97 
umem_∑gesize
 = 
∑gesize
;

100 
	}
}

104 
	$umem_öô_wÆkîs
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, *
ign‹ed
)

106 
mdb_wÆkî_t
 
w
;

107 
des¸
[64];

109 (Ë
	`mdb_¢¥ötf
(
des¸
,  (descr),

110 "wÆkÅhê%†ˇche", 
c
->
ˇche_«me
);

112 
w
.
wÆk_«me
 = 
c
->
ˇche_«me
;

113 
w
.
wÆk_des¸
 = 
des¸
;

114 
w
.
wÆk_öô
 = 
umem_wÆk_öô
;

115 
w
.
wÆk_°ï
 = 
umem_wÆk_°ï
;

116 
w
.
wÆk_föi
 = 
umem_wÆk_föi
;

117 
w
.
wÆk_öô_¨g
 = (*)
addr
;

119 i‡(
	`mdb_add_wÆkî
(&
w
) == -1)

120 
	`mdb_w¨n
("ÁûedÅÿadd %†wÆkî", 
c
->
ˇche_«me
);

122  (
WALK_NEXT
);

123 
	}
}

127 
	$umem_°©ech™ge_cb
(*
¨g
)

129 
bìn_ªady
 = 0;

131 #i‚de‡
_KMDB


132 
	`Àaky_˛ónup
(1);

135 i‡(
	`umem_upd©e_v¨übÀs
() == -1)

138 i‡(
bìn_ªady
)

141 i‡(
umem_ªady
 !
UMEM_READY
)

144 
bìn_ªady
 = 1;

145 (Ë
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
umem_öô_wÆkîs
, 
NULL
);

146 
	}
}

149 
	$umem_ab‹t_mesßges
()

151 *
umem_îr‹_buf„r
;

152 
uöt_t
 
umem_îr‹_begö
;

153 
GElf_Sym
 
sym
;

154 
size_t
 
bufsize
;

156 i‡(
	`UMEM_READVAR
(
umem_îr‹_begö
))

157  (
DCMD_ERR
);

159 i‡(
	`umem_lookup_by_«me
("umem_îr‹_buf„r", &
sym
) == -1) {

160 
	`mdb_w¨n
("unableÅoÜook up umem_error_buffer");

161  (
DCMD_ERR
);

164 
bufsize
 = (
size_t
)
sym
.
°_size
;

166 
umem_îr‹_buf„r
 = 
	`mdb_Æloc
(
bufsize
+1, 
UM_SLEEP
 | 
UM_GC
);

168 i‡(
	`mdb_vªad
(
umem_îr‹_buf„r
, 
bufsize
, (
uöçå_t
)
sym
.
°_vÆue
)

169 !
bufsize
) {

170 
	`mdb_w¨n
("unableÅoÑead umem_error_buffer");

171  (
DCMD_ERR
);

174 
umem_îr‹_buf„r
[
bufsize
] = 0;

176 i‡((
umem_îr‹_begö
 % 
bufsize
) == 0)

177 
	`mdb_¥ötf
("%s\n", 
umem_îr‹_buf„r
);

179 
umem_îr‹_buf„r
[(
umem_îr‹_begö
 % 
bufsize
) - 1] = 0;

180 
	`mdb_¥ötf
("%s%s\n",

181 &
umem_îr‹_buf„r
[
umem_îr‹_begö
 % 
bufsize
],

182 
umem_îr‹_buf„r
);

185  (
DCMD_OK
);

186 
	}
}

189 
	$umem_log_°©us
(c⁄° *
«me
, 
umem_log_hódî_t
 *
vÆ
)

191 
umem_log_hódî_t
 
my_lh
;

192 
uöçå_t
 
pos
 = (uöçå_t)
vÆ
;

193 
size_t
 
size
;

195 i‡(
pos
 =
NULL
)

198 i‡(
	`mdb_vªad
(&
my_lh
,  (
umem_log_hódî_t
), 
pos
) == -1) {

199 
	`mdb_w¨n
("\nunableÅoÑead umem_%s_logÖointer %p",

200 
«me
, 
pos
);

204 
size
 = 
my_lh
.
lh_chunksize
 * my_lh.
lh_nchunks
;

206 i‡(
size
 % (1024 * 1024) == 0)

207 
	`mdb_¥ötf
("%s=%dm ", 
«me
, 
size
 / (1024 * 1024));

208 i‡(
size
 % 1024 == 0)

209 
	`mdb_¥ötf
("%s=%dk ", 
«me
, 
size
 / 1024);

211 
	`mdb_¥ötf
("%s=%d ", 
«me
, 
size
);

212 
	}
}

214 
	sumem_debug_Êags
 {

215 c⁄° *
	mudf_«me
;

216 
uöt_t
 
	mudf_Êags
;

217 
uöt_t
 
	mudf_˛ór
;

218 } 
	tumem_debug_Êags_t
;

220 
umem_debug_Êags_t
 
	gumem_°©us_Êags
[] = {

221 { "øndom", 
UMF_RANDOMIZE
, 
UMF_RANDOM
 },

222 { "deÁu…", 
UMF_AUDIT
 | 
UMF_DEADBEEF
 | 
UMF_REDZONE
 | 
UMF_CONTENTS
 },

223 { "audô", 
UMF_AUDIT
 },

224 { "gu¨ds", 
UMF_DEADBEEF
 | 
UMF_REDZONE
 },

225 { "nosig«l", 
UMF_CHECKSIGNAL
 },

226 { "fúewÆl", 
UMF_FIREWALL
 },

227 { "lôe", 
UMF_LITE
 },

228 { 
NULL
 }

233 
	$umem_°©us
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
ac
, c⁄° 
mdb_¨g_t
 *
¨gv
)

235 
umem_loggög
;

237 
umem_log_hódî_t
 *
umem_å™ß˘i⁄_log
;

238 
umem_log_hódî_t
 *
umem_c⁄ã¡_log
;

239 
umem_log_hódî_t
 *
umem_Áûuª_log
;

240 
umem_log_hódî_t
 *
umem_¶ab_log
;

242 
	`mdb_¥ötf
("Status:\t\t%s\n",

243 
umem_ªady
 =
UMEM_READY_INIT_FAILED
 ? "initialization failed" :

244 
umem_ªady
 =
UMEM_READY_STARTUP
 ? "uninitialized" :

245 
umem_ªady
 =
UMEM_READY_INITING
 ? "initialization inÖrocess" :

246 
umem_ªady
 =
UMEM_READY
 ? "readyándáctive" :

247 
umem_ªady
 == 0 ? "notÜoaded intoáddress space" :

250 i‡(
umem_ªady
 == 0)

251  (
DCMD_OK
);

253 
	`mdb_¥ötf
("C⁄cuºícy:\t%d\n", 
umem_max_n˝us
);

255 i‡(
	`UMEM_READVAR
(
umem_loggög
))

256 
îr
;

257 i‡(
	`UMEM_READVAR
(
umem_å™ß˘i⁄_log
))

258 
îr
;

259 i‡(
	`UMEM_READVAR
(
umem_c⁄ã¡_log
))

260 
îr
;

261 i‡(
	`UMEM_READVAR
(
umem_Áûuª_log
))

262 
îr
;

263 i‡(
	`UMEM_READVAR
(
umem_¶ab_log
))

264 
îr
;

266 
	`mdb_¥ötf
("Logs:\t\t");

267 
	`umem_log_°©us
("å™ß˘i⁄", 
umem_å™ß˘i⁄_log
);

268 
	`umem_log_°©us
("c⁄ã¡", 
umem_c⁄ã¡_log
);

269 
	`umem_log_°©us
("Áû", 
umem_Áûuª_log
);

270 
	`umem_log_°©us
("¶ab", 
umem_¶ab_log
);

271 i‡(!
umem_loggög
)

272 
	`mdb_¥ötf
("(inactive)");

273 
	`mdb_¥ötf
("\n");

275 
	`mdb_¥ötf
("Message buffer:\n");

276  (
	`umem_ab‹t_mesßges
());

278 
îr
:

279 
	`mdb_¥ötf
("Message buffer:\n");

280 (Ë
	`umem_ab‹t_mesßges
();

281  (
DCMD_ERR
);

282 
	}
}

285 
uöçå_t
 
	mucw_fú°
;

286 
uöçå_t
 
	mucw_cuºít
;

287 } 
	tumem_ˇche_wÆk_t
;

290 
	$umem_ˇche_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

292 
umem_ˇche_wÆk_t
 *
ucw
;

293 
umem_ˇche_t
 
c
;

294 
uöçå_t
 
˝
;

295 
GElf_Sym
 
sym
;

297 i‡(
	`umem_lookup_by_«me
("umem_nuŒ_ˇche", &
sym
) == -1) {

298 
	`mdb_w¨n
("couldn't find umem_null_cache");

299  (
WALK_ERR
);

302 
˝
 = (
uöçå_t
)
sym
.
°_vÆue
;

304 i‡(
	`mdb_vªad
(&
c
,  (
umem_ˇche_t
), 
˝
) == -1) {

305 
	`mdb_w¨n
("couldn'àªad cachê© %p", 
˝
);

306  (
WALK_ERR
);

309 
ucw
 = 
	`mdb_Æloc
( (
umem_ˇche_wÆk_t
), 
UM_SLEEP
);

311 
ucw
->
ucw_fú°
 = 
˝
;

312 
ucw
->
ucw_cuºít
 = (
uöçå_t
)
c
.
ˇche_√xt
;

313 
w•
->
wÆk_d©a
 = 
ucw
;

315  (
WALK_NEXT
);

316 
	}
}

319 
	$umem_ˇche_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

321 
umem_ˇche_wÆk_t
 *
ucw
 = 
w•
->
wÆk_d©a
;

322 
umem_ˇche_t
 
c
;

323 
°©us
;

325 i‡(
	`mdb_vªad
(&
c
,  (
umem_ˇche_t
), 
ucw
->
ucw_cuºít
) == -1) {

326 
	`mdb_w¨n
("couldn'àªad cachê© %p", 
ucw
->
ucw_cuºít
);

327  (
WALK_DONE
);

330 
°©us
 = 
w•
->
	`wÆk_ˇŒback
(
ucw
->
ucw_cuºít
, &
c
, w•->
wÆk_cbd©a
);

332 i‡((
ucw
->
ucw_cuºít
 = (
uöçå_t
)
c
.
ˇche_√xt
Ë=ucw->
ucw_fú°
)

333  (
WALK_DONE
);

335  (
°©us
);

336 
	}
}

339 
	$umem_ˇche_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

341 
umem_ˇche_wÆk_t
 *
ucw
 = 
w•
->
wÆk_d©a
;

342 
	`mdb_‰ì
(
ucw
,  (
umem_ˇche_wÆk_t
));

343 
	}
}

346 
umem_˝u_t
 *
	mucw_˝us
;

347 
uöt32_t
 
	mucw_cuºít
;

348 
uöt32_t
 
	mucw_max
;

349 } 
	tumem_˝u_wÆk_°©e_t
;

352 
	$umem_˝u_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

354 
umem_˝u_t
 *
umem_˝us
;

356 
umem_˝u_wÆk_°©e_t
 *
ucw
;

358 i‡(
	`umem_ªadv¨
(&
umem_˝us
, "umem_cpus") == -1) {

359 
	`mdb_w¨n
("failedÅoÑead 'umem_cpus'");

360  (
WALK_ERR
);

363 
ucw
 = 
	`mdb_Æloc
( (*ucw), 
UM_SLEEP
);

365 
ucw
->
ucw_˝us
 = 
umem_˝us
;

366 
ucw
->
ucw_cuºít
 = 0;

367 
ucw
->
ucw_max
 = 
umem_max_n˝us
;

369 
w•
->
wÆk_d©a
 = 
ucw
;

370  (
WALK_NEXT
);

371 
	}
}

374 
	$umem_˝u_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

376 
umem_˝u_t
 
˝u
;

377 
umem_˝u_wÆk_°©e_t
 *
ucw
 = 
w•
->
wÆk_d©a
;

379 
uöçå_t
 
ˇddr
;

381 i‡(
ucw
->
ucw_cuºít
 >ucw->
ucw_max
)

382  (
WALK_DONE
);

384 
ˇddr
 = (
uöçå_t
)&(
ucw
->
ucw_˝us
[ucw->
ucw_cuºít
]);

386 i‡(
	`mdb_vªad
(&
˝u
,  (
umem_˝u_t
), 
ˇddr
) == -1) {

387 
	`mdb_w¨n
("ÁûedÅÿªad cpu %d", 
ucw
->
ucw_cuºít
);

388  (
WALK_ERR
);

391 
ucw
->
ucw_cuºít
++;

393  (
w•
->
	`wÆk_ˇŒback
(
ˇddr
, &
˝u
, w•->
wÆk_cbd©a
));

394 
	}
}

397 
	$umem_˝u_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

399 
umem_˝u_wÆk_°©e_t
 *
ucw
 = 
w•
->
wÆk_d©a
;

401 
	`mdb_‰ì
(
ucw
,  (*ucw));

402 
	}
}

405 
	$umem_˝u_ˇche_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

407 i‡(
w•
->
wÆk_addr
 =
NULL
) {

408 
	`mdb_w¨n
("umem_cpu_cache doesn't support global walks");

409  (
WALK_ERR
);

412 i‡(
	`mdb_œyîed_wÆk
("umem_˝u", 
w•
) == -1) {

413 
	`mdb_w¨n
("couldn't walk 'umem_cpu'");

414  (
WALK_ERR
);

417 
w•
->
wÆk_d©a
 = (*)w•->
wÆk_addr
;

419  (
WALK_NEXT
);

420 
	}
}

423 
	$umem_˝u_ˇche_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

425 
uöçå_t
 
ˇddr
 = (uöçå_t)
w•
->
wÆk_d©a
;

426 c⁄° 
umem_˝u_t
 *
˝u
 = 
w•
->
wÆk_œyî
;

427 
umem_˝u_ˇche_t
 
cc
;

429 
ˇddr
 +
˝u
->
˝u_ˇche_off£t
;

431 i‡(
	`mdb_vªad
(&
cc
,  (
umem_˝u_ˇche_t
), 
ˇddr
) == -1) {

432 
	`mdb_w¨n
("couldn'àªad umem_˝u_ˇchê© %p", 
ˇddr
);

433  (
WALK_ERR
);

436  (
w•
->
	`wÆk_ˇŒback
(
ˇddr
, &
cc
, w•->
wÆk_cbd©a
));

437 
	}
}

440 
	$umem_¶ab_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

442 
uöçå_t
 
ˇddr
 = 
w•
->
wÆk_addr
;

443 
umem_ˇche_t
 
c
;

445 i‡(
ˇddr
 =
NULL
) {

446 
	`mdb_w¨n
("umem_slab doesn't support global walks\n");

447  (
WALK_ERR
);

450 i‡(
	`mdb_vªad
(&
c
,  (c), 
ˇddr
) == -1) {

451 
	`mdb_w¨n
("couldn'àªad umem_ˇchê© %p", 
ˇddr
);

452  (
WALK_ERR
);

455 
w•
->
wÆk_d©a
 =

456 (*)(
ˇddr
 + 
	`off£tof
(
umem_ˇche_t
, 
ˇche_nuŒ¶ab
));

457 
w•
->
wÆk_addr
 = (
uöçå_t
)
c
.
ˇche_nuŒ¶ab
.
¶ab_√xt
;

459  (
WALK_NEXT
);

460 
	}
}

463 
	$umem_¶ab_wÆk_∑πül_öô
(
mdb_wÆk_°©e_t
 *
w•
)

465 
uöçå_t
 
ˇddr
 = 
w•
->
wÆk_addr
;

466 
umem_ˇche_t
 
c
;

468 i‡(
ˇddr
 =
NULL
) {

469 
	`mdb_w¨n
("umem_slab_partial doesn't support global walks\n");

470  (
WALK_ERR
);

473 i‡(
	`mdb_vªad
(&
c
,  (c), 
ˇddr
) == -1) {

474 
	`mdb_w¨n
("couldn'àªad umem_ˇchê© %p", 
ˇddr
);

475  (
WALK_ERR
);

478 
w•
->
wÆk_d©a
 =

479 (*)(
ˇddr
 + 
	`off£tof
(
umem_ˇche_t
, 
ˇche_nuŒ¶ab
));

480 
w•
->
wÆk_addr
 = (
uöçå_t
)
c
.
ˇche_‰ìli°
;

490 i‡((
uöçå_t
)
w•
->
wÆk_d©a
 =w•->
wÆk_addr
)

491 
w•
->
wÆk_addr
 = (
uöçå_t
)
c
.
ˇche_nuŒ¶ab
.
¶ab_¥ev
;

493  (
WALK_NEXT
);

494 
	}
}

497 
	$umem_¶ab_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

499 
umem_¶ab_t
 
s
;

500 
uöçå_t
 
addr
 = 
w•
->
wÆk_addr
;

501 
uöçå_t
 
ßddr
 = (uöçå_t)
w•
->
wÆk_d©a
;

502 
uöçå_t
 
ˇddr
 = 
ßddr
 - 
	`off£tof
(
umem_ˇche_t
, 
ˇche_nuŒ¶ab
);

504 i‡(
addr
 =
ßddr
)

505  (
WALK_DONE
);

507 i‡(
	`mdb_vªad
(&
s
,  (s), 
addr
) == -1) {

508 
	`mdb_w¨n
("ÁûedÅÿªad sœbáà%p", 
w•
->
wÆk_addr
);

509  (
WALK_ERR
);

512 i‡((
uöçå_t
)
s
.
¶ab_ˇche
 !
ˇddr
) {

513 
	`mdb_w¨n
("slab %p isn't in cache %p (in cache %p)\n",

514 
addr
, 
ˇddr
, 
s
.
¶ab_ˇche
);

515  (
WALK_ERR
);

518 
w•
->
wÆk_addr
 = (
uöçå_t
)
s
.
¶ab_√xt
;

520  (
w•
->
	`wÆk_ˇŒback
(
addr
, &
s
, w•->
wÆk_cbd©a
));

521 
	}
}

524 
	$umem_ˇche
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
ac
, c⁄° 
mdb_¨g_t
 *
¨gv
)

526 
umem_ˇche_t
 
c
;

528 i‡(!(
Êags
 & 
DCMD_ADDRSPEC
)) {

529 i‡(
	`mdb_wÆk_dcmd
("umem_ˇche", "umem_ˇche", 
ac
, 
¨gv
) == -1) {

530 
	`mdb_w¨n
("can't walk umem_cache");

531  (
DCMD_ERR
);

533  (
DCMD_OK
);

536 i‡(
	`DCMD_HDRSPEC
(
Êags
))

537 
	`mdb_¥ötf
("%-?s %-25s %4s %8s %8s %8s\n", "ADDR", "NAME",

540 i‡(
	`mdb_vªad
(&
c
,  (c), 
addr
) == -1) {

541 
	`mdb_w¨n
("couldn'àªad umem_ˇchê© %p", 
addr
);

542  (
DCMD_ERR
);

545 
	`mdb_¥ötf
("%0?∞%-25†%04x %08x %8ld %8Œd\n", 
addr
, 
c
.
ˇche_«me
,

546 
c
.
ˇche_Êags
, c.
ˇche_cÊags
, c.
ˇche_bufsize
, c.
ˇche_bu·ŸÆ
);

548  (
DCMD_OK
);

549 
	}
}

552 
	$addrcmp
(c⁄° *
lhs
, c⁄° *
rhs
)

554 
uöçå_t
 
p1
 = *((uöçå_à*)
lhs
);

555 
uöçå_t
 
p2
 = *((uöçå_à*)
rhs
);

557 i‡(
p1
 < 
p2
)

559 i‡(
p1
 > 
p2
)

562 
	}
}

565 
	$buf˘lcmp
(c⁄° 
umem_buf˘l_audô_t
 **
lhs
, c⁄° umem_buf˘l_audô_à**
rhs
)

567 c⁄° 
umem_buf˘l_audô_t
 *
b˝1
 = *
lhs
;

568 c⁄° 
umem_buf˘l_audô_t
 *
b˝2
 = *
rhs
;

570 i‡(
b˝1
->
bc_time°amp
 > 
b˝2
->bc_timestamp)

573 i‡(
b˝1
->
bc_time°amp
 < 
b˝2
->bc_timestamp)

577 
	}
}

579 
	sumem_hash_wÆk
 {

580 
uöçå_t
 *
	mumhw_èbÀ
;

581 
size_t
 
	mumhw_√Àms
;

582 
size_t
 
	mumhw_pos
;

583 
umem_buf˘l_t
 
	mumhw_cur
;

584 } 
	tumem_hash_wÆk_t
;

587 
	$umem_hash_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

589 
umem_hash_wÆk_t
 *
umhw
;

590 
uöçå_t
 *
hash
;

591 
umem_ˇche_t
 
c
;

592 
uöçå_t
 
haddr
, 
addr
 = 
w•
->
wÆk_addr
;

593 
size_t
 
√Àms
;

594 
size_t
 
hsize
;

596 i‡(
addr
 =
NULL
) {

597 
	`mdb_w¨n
("umem_hash doesn't support global walks\n");

598  (
WALK_ERR
);

601 i‡(
	`mdb_vªad
(&
c
,  (c), 
addr
) == -1) {

602 
	`mdb_w¨n
("couldn'àªad cachê©ádd∏%p", 
addr
);

603  (
WALK_ERR
);

606 i‡(!(
c
.
ˇche_Êags
 & 
UMF_HASH
)) {

607 
	`mdb_w¨n
("ˇchê%∞d€¢'àhavê®hashÅabÀ\n", 
addr
);

608  (
WALK_DONE
);

611 
umhw
 = 
	`mdb_zÆloc
( (
umem_hash_wÆk_t
), 
UM_SLEEP
);

612 
umhw
->
umhw_cur
.
bc_√xt
 = 
NULL
;

613 
umhw
->
umhw_pos
 = 0;

615 
umhw
->
umhw_√Àms
 = 
√Àms
 = 
c
.
ˇche_hash_mask
 + 1;

616 
hsize
 = 
√Àms
 *  (
uöçå_t
);

617 
haddr
 = (
uöçå_t
)
c
.
ˇche_hash_èbÀ
;

619 
umhw
->
umhw_èbÀ
 = 
hash
 = 
	`mdb_Æloc
(
hsize
, 
UM_SLEEP
);

620 i‡(
	`mdb_vªad
(
hash
, 
hsize
, 
haddr
) == -1) {

621 
	`mdb_w¨n
("ÁûedÅÿªad hashÅabÀáà%p", 
haddr
);

622 
	`mdb_‰ì
(
hash
, 
hsize
);

623 
	`mdb_‰ì
(
umhw
,  (
umem_hash_wÆk_t
));

624  (
WALK_ERR
);

627 
w•
->
wÆk_d©a
 = 
umhw
;

629  (
WALK_NEXT
);

630 
	}
}

633 
	$umem_hash_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

635 
umem_hash_wÆk_t
 *
umhw
 = 
w•
->
wÆk_d©a
;

636 
uöçå_t
 
addr
 = 
NULL
;

638 i‡((
addr
 = (
uöçå_t
)
umhw
->
umhw_cur
.
bc_√xt
Ë=
NULL
) {

639 
umhw
->
umhw_pos
 < umhw->
umhw_√Àms
) {

640 i‡((
addr
 = 
umhw
->
umhw_èbÀ
[umhw->
umhw_pos
++]Ë!
NULL
)

644 i‡(
addr
 =
NULL
)

645  (
WALK_DONE
);

647 i‡(
	`mdb_vªad
(&
umhw
->
umhw_cur
,  (
umem_buf˘l_t
), 
addr
) == -1) {

648 
	`mdb_w¨n
("couldn'àªad umem_buf˘l_à©ádd∏%p", 
addr
);

649  (
WALK_ERR
);

652  (
w•
->
	`wÆk_ˇŒback
(
addr
, &
umhw
->
umhw_cur
, w•->
wÆk_cbd©a
));

653 
	}
}

656 
	$umem_hash_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

658 
umem_hash_wÆk_t
 *
umhw
 = 
w•
->
wÆk_d©a
;

660 i‡(
umhw
 =
NULL
)

663 
	`mdb_‰ì
(
umhw
->
umhw_èbÀ
, umhw->
umhw_√Àms
 *  (
uöçå_t
));

664 
	`mdb_‰ì
(
umhw
,  (
umem_hash_wÆk_t
));

665 
	}
}

672 
	$umem_hash_lookup
(
umem_ˇche_t
 *
˝
, 
uöçå_t
 
ˇddr
, *
buf
, uöçå_à*
out
)

674 
uöçå_t
 
buckë
 = (uöçå_t)
	`UMEM_HASH
(
˝
, 
buf
);

675 
umem_buf˘l_t
 *
b˝
;

676 
umem_buf˘l_t
 
bc
;

678 i‡(
	`mdb_vªad
(&
b˝
,  (
umem_buf˘l_t
 *), 
buckë
) == -1) {

679 
	`mdb_w¨n
("unableÅoÑead hash bucket for %p in cache %p",

680 
buf
, 
ˇddr
);

684 
b˝
 !
NULL
) {

685 i‡(
	`mdb_vªad
(&
bc
,  (
umem_buf˘l_t
),

686 (
uöçå_t
)
b˝
) == -1) {

687 
	`mdb_w¨n
("u«bÀÅÿªad buf˘»© %p", 
b˝
);

690 i‡(
bc
.
bc_addr
 =
buf
) {

691 *
out
 = (
uöçå_t
)
b˝
;

694 
b˝
 = 
bc
.
bc_√xt
;

697 
	`mdb_w¨n
("u«bÀÅÿföd buf˘»f‹ %∞ö cachê%p\n", 
buf
, 
ˇddr
);

699 
	}
}

702 
	$umem_gë_magsize
(c⁄° 
umem_ˇche_t
 *
˝
)

704 
uöçå_t
 
addr
 = (uöçå_t)
˝
->
ˇche_magty≥
;

705 
GElf_Sym
 
mt_sym
;

706 
umem_magty≥_t
 
mt
;

707 
ªs
;

714 i‡((
ªs
 = 
˝
->
ˇche_˝u
[0].
cc_magsize
) != 0 ||

715 (
˝
->
ˇche_Êags
 & 
UMF_NOMAGAZINE
))

716  (
ªs
);

718 i‡(
	`umem_lookup_by_«me
("umem_magty≥", &
mt_sym
) == -1) {

719 
	`mdb_w¨n
("unableÅoÑead 'umem_magtype'");

720 } i‡(
addr
 < 
mt_sym
.
°_vÆue
 ||

721 
addr
 +  (
mt
Ë- 1 > 
mt_sym
.
°_vÆue
 + mt_sym.
°_size
 - 1 ||

722 ((
addr
 - 
mt_sym
.
°_vÆue
Ë%  (
mt
)) != 0) {

723 
	`mdb_w¨n
("cache '%s' has invalid magtypeÖointer (%p)\n",

724 
˝
->
ˇche_«me
, 
addr
);

727 i‡(
	`mdb_vªad
(&
mt
,  (mt), 
addr
) == -1) {

728 
	`mdb_w¨n
("u«bÀÅÿªad magty≥áà%a", 
addr
);

731  (
mt
.
mt_magsize
);

732 
	}
}

736 
	$umem_e°im©e_¶ab
(
uöçå_t
 
addr
, c⁄° 
umem_¶ab_t
 *
•
, 
size_t
 *
e°
)

738 *
e°
 -(
•
->
¶ab_chunks
 - sp->
¶ab_ªf˙t
);

740  (
WALK_NEXT
);

741 
	}
}

747 
size_t


748 
	$umem_e°im©e_Æloˇãd
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
˝
)

750 
magsize
;

751 
size_t
 
ˇche_e°
;

753 
ˇche_e°
 = 
˝
->
ˇche_bu·ŸÆ
;

755 (Ë
	`mdb_pwÆk
("umem_slab_partial",

756 (
mdb_wÆk_cb_t
)
umem_e°im©e_¶ab
, &
ˇche_e°
, 
addr
);

758 i‡((
magsize
 = 
	`umem_gë_magsize
(
˝
)) != 0) {

759 
size_t
 
mag_e°
 = 
˝
->
ˇche_fuŒ
.
ml_tŸÆ
 * 
magsize
;

761 i‡(
ˇche_e°
 >
mag_e°
) {

762 
ˇche_e°
 -
mag_e°
;

764 
	`mdb_w¨n
("cache %p's magazineÜayer holds more buffers "

765 "th™Åhê¶abÜayî.\n", 
addr
);

768  (
ˇche_e°
);

769 
	}
}

771 
	#READMAG_ROUNDS
(
rounds
) { \

772 i‡(
	`mdb_vªad
(
mp
, 
magbsize
, (
uöçå_t
)
ump
) == -1) { \

773 
	`mdb_w¨n
("couldn'àªad magazöê© %p", 
ump
); \

774 
Áû
; \

776 
i
 = 0; i < 
rounds
; i++) { \

777 
magli°
[
mag˙t
++] = 
mp
->
mag_round
[
i
]; \

778 i‡(
mag˙t
 =
magmax
) { \

779 
	`mdb_w¨n
("%d magazinesÉxceeds fudge factor\n", \

780 
mag˙t
); \

781 
Áû
; \

784 }

	)

787 
	$umem_ªad_magazöes
(
umem_ˇche_t
 *
˝
, 
uöçå_t
 
addr
,

788 ***
magli°p
, 
size_t
 *
mag˙ç
, size_à*
magmaxp
, 
Æloc_Êags
)

790 
umem_magazöe_t
 *
ump
, *
mp
;

791 **
magli°
 = 
NULL
;

792 
i
, 
˝u
;

793 
size_t
 
magsize
, 
magmax
, 
magbsize
;

794 
size_t
 
mag˙t
 = 0;

800 
magsize
 = 
	`umem_gë_magsize
(
˝
);

801 i‡(
magsize
 == 0) {

802 *
magli°p
 = 
NULL
;

803 *
mag˙ç
 = 0;

804 *
magmaxp
 = 0;

805  (
WALK_NEXT
);

820 
magmax
 = (
˝
->
ˇche_fuŒ
.
ml_tŸÆ
 + 2 * 
umem_max_n˝us
 + 100Ë* 
magsize
;

821 
magbsize
 = 
	`off£tof
(
umem_magazöe_t
, 
mag_round
[
magsize
]);

823 i‡(
magbsize
 >
PAGESIZE
 / 2) {

824 
	`mdb_w¨n
("magazine size for cache %p unreasonable (%x)\n",

825 
addr
, 
magbsize
);

826  (
WALK_ERR
);

829 
magli°
 = 
	`mdb_Æloc
(
magmax
 *  (*), 
Æloc_Êags
);

830 
mp
 = 
	`mdb_Æloc
(
magbsize
, 
Æloc_Êags
);

831 i‡(
mp
 =
NULL
 || 
magli°
 == NULL)

832 
Áû
;

837 
ump
 = 
˝
->
ˇche_fuŒ
.
ml_li°
; um∞!
NULL
; ) {

838 
	`READMAG_ROUNDS
(
magsize
);

839 
ump
 = 
mp
->
mag_√xt
;

841 i‡(
ump
 =
˝
->
ˇche_fuŒ
.
ml_li°
)

845 
	`d¥ötf
(("cache_fullÜist done\n"));

851 
˝u
 = 0; cpu < 
umem_max_n˝us
; cpu++) {

852 
umem_˝u_ˇche_t
 *
c˝
 = &
˝
->
ˇche_˝u
[
˝u
];

854 
	`d¥ötf
(("reading cpu cache %p\n",

855 (
uöçå_t
)
c˝
 - (uöçå_t)
˝
 + 
addr
));

857 i‡(
c˝
->
cc_rounds
 > 0 &&

858 (
ump
 = 
c˝
->
cc_lﬂded
Ë!
NULL
) {

859 
	`d¥ötf
(("ªadög %dÜﬂdedÑounds\n", 
c˝
->
cc_rounds
));

860 
	`READMAG_ROUNDS
(
c˝
->
cc_rounds
);

863 i‡(
c˝
->
cc_¥ounds
 > 0 &&

864 (
ump
 = 
c˝
->
cc_∂ﬂded
Ë!
NULL
) {

865 
	`d¥ötf
(("reading %dÖreviouslyÜoadedÑounds\n",

866 
c˝
->
cc_¥ounds
));

867 
	`READMAG_ROUNDS
(
c˝
->
cc_¥ounds
);

871 
	`d¥ötf
(("magazöêœyî: %d buf„rs\n", 
mag˙t
));

873 i‡(!(
Æloc_Êags
 & 
UM_GC
))

874 
	`mdb_‰ì
(
mp
, 
magbsize
);

876 *
magli°p
 = 
magli°
;

877 *
mag˙ç
 = 
mag˙t
;

878 *
magmaxp
 = 
magmax
;

880  (
WALK_NEXT
);

882 
Áû
:

883 i‡(!(
Æloc_Êags
 & 
UM_GC
)) {

884 i‡(
mp
)

885 
	`mdb_‰ì
(
mp
, 
magbsize
);

886 i‡(
magli°
)

887 
	`mdb_‰ì
(
magli°
, 
magmax
 *  (*));

889  (
WALK_ERR
);

890 
	}
}

893 
	$umem_wÆk_ˇŒback
(
mdb_wÆk_°©e_t
 *
w•
, 
uöçå_t
 
buf
)

895  (
w•
->
	`wÆk_ˇŒback
(
buf
, 
NULL
, w•->
wÆk_cbd©a
));

896 
	}
}

899 
	$buf˘l_wÆk_ˇŒback
(
umem_ˇche_t
 *
˝
, 
mdb_wÆk_°©e_t
 *
w•
, 
uöçå_t
 
buf
)

901 
umem_buf˘l_audô_t
 *
b
;

902 
	`UMEM_LOCAL_BUFCTL_AUDIT
(&
b
);

908 i‡(!(
˝
->
ˇche_Êags
 & 
UMF_AUDIT
) ||

909 
	`mdb_vªad
(
b
, 
UMEM_BUFCTL_AUDIT_SIZE
, 
buf
) == -1) {

910 (Ë
	`mem£t
(
b
, 0, 
UMEM_BUFCTL_AUDIT_SIZE
);

911 i‡(
	`mdb_vªad
(
b
,  (
umem_buf˘l_t
), 
buf
) == -1) {

912 
	`mdb_w¨n
("u«bÀÅÿªad buf˘»© %p", 
buf
);

913  (
WALK_ERR
);

917  (
w•
->
	`wÆk_ˇŒback
(
buf
, 
b
, w•->
wÆk_cbd©a
));

918 
	}
}

920 
	sumem_wÆk
 {

921 
	mumw_ty≥
;

923 
	mumw_addr
;

924 
umem_ˇche_t
 *
	mumw_˝
;

925 
size_t
 
	mumw_csize
;

930 **
	mumw_magli°
;

931 
size_t
 
	mumw_max
;

932 
size_t
 
	mumw_cou¡
;

933 
size_t
 
	mumw_pos
;

938 *
	mumw_vÆid
;

939 *
	mumw_uba£
;

940 } 
	tumem_wÆk_t
;

943 
	$umem_wÆk_öô_comm⁄
(
mdb_wÆk_°©e_t
 *
w•
, 
ty≥
)

945 
umem_wÆk_t
 *
umw
;

946 
csize
;

947 
umem_ˇche_t
 *
˝
;

948 
size_t
 
vm_qu™tum
;

950 
size_t
 
magmax
, 
mag˙t
;

951 **
magli°
 = 
NULL
;

952 
uöt_t
 
chunksize
, 
¶absize
;

953 
°©us
 = 
WALK_ERR
;

954 
uöçå_t
 
addr
 = 
w•
->
wÆk_addr
;

955 c⁄° *
œyîed
;

957 
ty≥
 &~
UM_HASH
;

959 i‡(
addr
 =
NULL
) {

960 
	`mdb_w¨n
("umem walk doesn't support global walks\n");

961  (
WALK_ERR
);

964 
	`d¥ötf
(("wÆkög %p\n", 
addr
));

969 
csize
 = 
	`UMEM_CACHE_SIZE
(
umem_max_n˝us
);

970 
˝
 = 
	`mdb_Æloc
(
csize
, 
UM_SLEEP
);

972 i‡(
	`mdb_vªad
(
˝
, 
csize
, 
addr
) == -1) {

973 
	`mdb_w¨n
("couldn'àªad cachê©ádd∏%p", 
addr
);

974 
out2
;

987 i‡(
	`mdb_vªad
(&
vm_qu™tum
,  (vm_quantum),

988 (
uöçå_t
)&
˝
->
ˇche_¨ía
->
vm_qu™tum
) == -1 ||

989 
vm_qu™tum
 == 0 ||

990 (
vm_qu™tum
 & (vm_quantum - 1)) != 0 ||

991 
˝
->
ˇche_¶absize
 < 
vm_qu™tum
 ||

992 
	`P2PHASE
(
˝
->
ˇche_¶absize
, 
vm_qu™tum
) != 0 ||

993 
˝
->
ˇche_chunksize
 == 0 ||

994 
˝
->
ˇche_chunksize
 > cp->
ˇche_¶absize
) {

995 
	`mdb_w¨n
("%∞i†nŸá vÆid umem_ˇche_t\n", 
addr
);

996 
out2
;

999 
	`d¥ötf
(("bu‡tŸÆ i†%d\n", 
˝
->
ˇche_bu·ŸÆ
));

1001 i‡(
˝
->
ˇche_bu·ŸÆ
 == 0) {

1002 
	`mdb_‰ì
(
˝
, 
csize
);

1003  (
WALK_DONE
);

1010 i‡((
ty≥
 & 
UM_BUFCTL
Ë&& !(
˝
->
ˇche_Êags
 & 
UMF_HASH
)) {

1011 
	`d¥ötf
(("bufctlÑequested,Çot UMF_HASH (flags: %p)\n",

1012 
˝
->
ˇche_Êags
));

1013 
	`mdb_‰ì
(
˝
, 
csize
);

1014  (
WALK_DONE
);

1020 i‡(
	`umem_ªad_magazöes
(
˝
, 
addr
, &
magli°
, &
mag˙t
, &
magmax
,

1021 
UM_SLEEP
Ë=
WALK_ERR
)

1022 
out2
;

1028 i‡(
ty≥
 & 
UM_ALLOCATED
)

1029 
	`qs‹t
(
magli°
, 
mag˙t
,  (*), 
addrcmp
);

1031 
w•
->
wÆk_d©a
 = 
umw
 = 
	`mdb_zÆloc
( (
umem_wÆk_t
), 
UM_SLEEP
);

1033 
umw
->
umw_ty≥
 = 
ty≥
;

1034 
umw
->
umw_addr
 = 
addr
;

1035 
umw
->
umw_˝
 = 
˝
;

1036 
umw
->
umw_csize
 = 
csize
;

1037 
umw
->
umw_magli°
 = 
magli°
;

1038 
umw
->
umw_max
 = 
magmax
;

1039 
umw
->
umw_cou¡
 = 
mag˙t
;

1040 
umw
->
umw_pos
 = 0;

1046 i‡((
˝
->
ˇche_Êags
 & 
UMF_HASH
Ë&& (
ty≥
 & 
UM_ALLOCATED
)) {

1047 
œyîed
 = "umem_hash";

1049 
umw
->
umw_ty≥
 |
UM_HASH
;

1056 i‡(
ty≥
 & 
UM_ALLOCATED
)

1057 
œyîed
 = "umem_slab";

1059 
œyîed
 = "umem_slab_partial";

1067 i‡(!(
˝
->
ˇche_Êags
 & 
UMF_HASH
)) {

1068 
chunksize
 = 
˝
->
ˇche_chunksize
;

1069 
¶absize
 = 
˝
->
ˇche_¶absize
;

1071 
umw
->
umw_uba£
 = 
	`mdb_Æloc
(
¶absize
 +

1072  (
umem_buf˘l_t
), 
UM_SLEEP
);

1074 i‡(
ty≥
 & 
UM_ALLOCATED
)

1075 
umw
->
umw_vÆid
 =

1076 
	`mdb_Æloc
(
¶absize
 / 
chunksize
, 
UM_SLEEP
);

1080 
°©us
 = 
WALK_NEXT
;

1082 i‡(
	`mdb_œyîed_wÆk
(
œyîed
, 
w•
) == -1) {

1083 
	`mdb_w¨n
("u«bÀÅÿ°¨àœyîed '%s' wÆk", 
œyîed
);

1084 
°©us
 = 
WALK_ERR
;

1087 
out1
:

1088 i‡(
°©us
 =
WALK_ERR
) {

1089 i‡(
umw
->
umw_vÆid
)

1090 
	`mdb_‰ì
(
umw
->
umw_vÆid
, 
¶absize
 / 
chunksize
);

1092 i‡(
umw
->
umw_uba£
)

1093 
	`mdb_‰ì
(
umw
->
umw_uba£
, 
¶absize
 +

1094  (
umem_buf˘l_t
));

1096 i‡(
umw
->
umw_magli°
)

1097 
	`mdb_‰ì
(
umw
->
umw_magli°
, umw->
umw_max
 *

1098  (
uöçå_t
));

1100 
	`mdb_‰ì
(
umw
,  (
umem_wÆk_t
));

1101 
w•
->
wÆk_d©a
 = 
NULL
;

1104 
out2
:

1105 i‡(
°©us
 =
WALK_ERR
)

1106 
	`mdb_‰ì
(
˝
, 
csize
);

1108  (
°©us
);

1109 
	}
}

1112 
	$umem_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

1114 
umem_wÆk_t
 *
umw
 = 
w•
->
wÆk_d©a
;

1115 
ty≥
 = 
umw
->
umw_ty≥
;

1116 
umem_ˇche_t
 *
˝
 = 
umw
->
umw_˝
;

1118 **
magli°
 = 
umw
->
umw_magli°
;

1119 
mag˙t
 = 
umw
->
umw_cou¡
;

1121 
uöçå_t
 
chunksize
, 
¶absize
;

1122 
uöçå_t
 
addr
;

1123 c⁄° 
umem_¶ab_t
 *
•
;

1124 c⁄° 
umem_buf˘l_t
 *
b˝
;

1125 
umem_buf˘l_t
 
bc
;

1127 
chunks
;

1128 *
kba£
;

1129 *
buf
;

1130 
i
, 
ªt
;

1132 *
vÆid
, *
uba£
;

1137 i‡(
ty≥
 & 
UM_HASH
) {

1144 
buf
 = ((c⁄° 
umem_buf˘l_t
 *)
w•
->
wÆk_œyî
)->
bc_addr
;

1146 i‡(
mag˙t
 > 0 &&

1147 
	`b£¨ch
(&
buf
, 
magli°
, 
mag˙t
,  (*),

1148 
addrcmp
Ë!
NULL
)

1149  (
WALK_NEXT
);

1151 i‡(
ty≥
 & 
UM_BUFCTL
)

1152  (
	`buf˘l_wÆk_ˇŒback
(
˝
, 
w•
, w•->
wÆk_addr
));

1154  (
	`umem_wÆk_ˇŒback
(
w•
, (
uöçå_t
)
buf
));

1157 
ªt
 = 
WALK_NEXT
;

1159 
addr
 = 
umw
->
umw_addr
;

1165 i‡((
ty≥
 & 
UM_FREE
Ë&& 
mag˙t
 != 0) {

1166 
umw
->
umw_cou¡
 = 0;

1167 
i
 = 0; i < 
mag˙t
; i++) {

1168 
buf
 = 
magli°
[
i
];

1170 i‡(
ty≥
 & 
UM_BUFCTL
) {

1171 
uöçå_t
 
out
;

1173 i‡(
˝
->
ˇche_Êags
 & 
UMF_BUFTAG
) {

1174 
umem_bu·ag_t
 *
bç
;

1175 
umem_bu·ag_t
 
èg
;

1178 
bç
 = 
	`UMEM_BUFTAG
(
˝
, 
buf
);

1179 i‡(
	`mdb_vªad
(&
èg
,  (tag),

1180 (
uöçå_t
)
bç
) == -1) {

1181 
	`mdb_w¨n
("reading buftag for "

1182 "%∞© %p", 
buf
, 
bç
);

1185 
out
 = (
uöçå_t
)
èg
.
bt_buf˘l
;

1187 i‡(
	`umem_hash_lookup
(
˝
, 
addr
, 
buf
,

1188 &
out
) == -1)

1191 
ªt
 = 
	`buf˘l_wÆk_ˇŒback
(
˝
, 
w•
, 
out
);

1193 
ªt
 = 
	`umem_wÆk_ˇŒback
(
w•
, (
uöçå_t
)
buf
);

1196 i‡(
ªt
 !
WALK_NEXT
)

1197  (
ªt
);

1204 
chunksize
 = 
˝
->
ˇche_chunksize
;

1205 
¶absize
 = 
˝
->
ˇche_¶absize
;

1207 
•
 = 
w•
->
wÆk_œyî
;

1208 
chunks
 = 
•
->
¶ab_chunks
;

1209 
kba£
 = 
•
->
¶ab_ba£
;

1211 
	`d¥ötf
(("kba£ i†%p\n", 
kba£
));

1213 i‡(!(
˝
->
ˇche_Êags
 & 
UMF_HASH
)) {

1214 
vÆid
 = 
umw
->
umw_vÆid
;

1215 
uba£
 = 
umw
->
umw_uba£
;

1217 i‡(
	`mdb_vªad
(
uba£
, 
chunks
 * 
chunksize
,

1218 (
uöçå_t
)
kba£
) == -1) {

1219 
	`mdb_w¨n
("ÁûedÅÿªad sœb c⁄ã¡†© %p", 
kba£
);

1220  (
WALK_ERR
);

1227 i‡(
ty≥
 & 
UM_ALLOCATED
)

1228 (Ë
	`mem£t
(
vÆid
, 1, 
chunks
);

1230 
vÆid
 = 
NULL
;

1231 
uba£
 = 
NULL
;

1237 
b˝
 = 
•
->
¶ab_hód
;

1239 
	`d¥ötf
(("ªf˙ài†%d; chunk†i†%d\n", 
•
->
¶ab_ªf˙t
, 
chunks
));

1246 
i
 = 
•
->
¶ab_ªf˙t
; i <
chunks
; i++) {

1247 
uöt_t
 
ndx
;

1249 
	`d¥ötf
(("b˝ i†%p\n", 
b˝
));

1251 i‡(
b˝
 =
NULL
) {

1252 i‡(
i
 =
chunks
)

1254 
	`mdb_w¨n
(

1256 
•
, 
addr
, 
chunks
 - 
i
);

1260 i‡(
˝
->
ˇche_Êags
 & 
UMF_HASH
) {

1261 i‡(
	`mdb_vªad
(&
bc
,  (bc), (
uöçå_t
)
b˝
) == -1) {

1262 
	`mdb_w¨n
("failedÅoÑead bufctlÖtrát %p",

1263 
b˝
);

1266 
buf
 = 
bc
.
bc_addr
;

1274 
bc
 = *((
umem_buf˘l_t
 *)

1275 ((
uöçå_t
)
b˝
 - (uöçå_t)
kba£
 +

1276 (
uöçå_t
)
uba£
));

1278 
buf
 = 
	`UMEM_BUF
(
˝
, 
b˝
);

1281 
ndx
 = ((
uöçå_t
)
buf
 - (uöçå_t)
kba£
Ë/ 
chunksize
;

1283 i‡(
ndx
 > 
¶absize
 / 
˝
->
ˇche_bufsize
) {

1290 
	`mdb_w¨n
("buf %p is out ofÑange for "

1291 "¶ab %p, cachê%p\n", 
buf
, 
•
, 
addr
);

1292 } i‡(
ty≥
 & 
UM_ALLOCATED
) {

1297 
vÆid
[
ndx
] = 0;

1302 i‡(
ty≥
 & 
UM_BUFCTL
) {

1303 
ªt
 = 
	`buf˘l_wÆk_ˇŒback
(
˝
, 
w•
,

1304 (
uöçå_t
)
b˝
);

1306 
ªt
 = 
	`umem_wÆk_ˇŒback
(
w•
, (
uöçå_t
)
buf
);

1308 i‡(
ªt
 !
WALK_NEXT
)

1309  (
ªt
);

1312 
b˝
 = 
bc
.
bc_√xt
;

1315 i‡(
b˝
 !
NULL
) {

1316 
	`d¥ötf
(("slab %p in cache %p freelistÅooÜong (%p)\n",

1317 
•
, 
addr
, 
b˝
));

1324 i‡(
ty≥
 & 
UM_FREE
)

1325  (
WALK_NEXT
);

1327 i‡(
ty≥
 & 
UM_BUFCTL
) {

1328 
	`mdb_w¨n
("impossible situation: small-slab UM_BUFCTL walk for "

1329 "ˇchê%p\n", 
addr
);

1330  (
WALK_ERR
);

1337 
i
 = 0; 
ªt
 =
WALK_NEXT
 && i < 
chunks
; i++) {

1338 
buf
 = (*)
kba£
 + 
i
 * 
chunksize
;

1340 i‡(!
vÆid
[
i
])

1343 i‡(
mag˙t
 > 0 &&

1344 
	`b£¨ch
(&
buf
, 
magli°
, 
mag˙t
,  (*),

1345 
addrcmp
Ë!
NULL
)

1348 
ªt
 = 
	`umem_wÆk_ˇŒback
(
w•
, (
uöçå_t
)
buf
);

1350  (
ªt
);

1351 
	}
}

1354 
	$umem_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

1356 
umem_wÆk_t
 *
umw
 = 
w•
->
wÆk_d©a
;

1357 
uöçå_t
 
chunksize
;

1358 
uöçå_t
 
¶absize
;

1360 i‡(
umw
 =
NULL
)

1363 i‡(
umw
->
umw_magli°
 !
NULL
)

1364 
	`mdb_‰ì
(
umw
->
umw_magli°
, umw->
umw_max
 *  (*));

1366 
chunksize
 = 
umw
->
umw_˝
->
ˇche_chunksize
;

1367 
¶absize
 = 
umw
->
umw_˝
->
ˇche_¶absize
;

1369 i‡(
umw
->
umw_vÆid
 !
NULL
)

1370 
	`mdb_‰ì
(
umw
->
umw_vÆid
, 
¶absize
 / 
chunksize
);

1371 i‡(
umw
->
umw_uba£
 !
NULL
)

1372 
	`mdb_‰ì
(
umw
->
umw_uba£
, 
¶absize
 +  (
umem_buf˘l_t
));

1374 
	`mdb_‰ì
(
umw
->
umw_˝
, umw->
umw_csize
);

1375 
	`mdb_‰ì
(
umw
,  (
umem_wÆk_t
));

1376 
	}
}

1380 
	$umem_wÆk_Æl
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
mdb_wÆk_°©e_t
 *
w•
)

1388 i‡(
c
->
ˇche_cÊags
 & 
UMC_NOTOUCH
)

1389  (
WALK_NEXT
);

1391 i‡(
	`mdb_pwÆk
(
w•
->
wÆk_d©a
, w•->
wÆk_ˇŒback
,

1392 
w•
->
wÆk_cbd©a
, 
addr
) == -1)

1393  (
WALK_DONE
);

1395  (
WALK_NEXT
);

1396 
	}
}

1398 
	#UMEM_WALK_ALL
(
«me
, 
w•
) { \

1399 
w•
->
wÆk_d©a
 = (
«me
); \

1400 i‡(
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
umem_wÆk_Æl
, 
w•
) == -1) \

1401  (
WALK_ERR
); \

1402  (
WALK_DONE
); \

1403 }

	)

1406 
	$umem_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1408 i‡(
w•
->
wÆk_¨g
 !
NULL
)

1409 
w•
->
wÆk_addr
 = (
uöçå_t
)w•->
wÆk_¨g
;

1411 i‡(
w•
->
wÆk_addr
 =
NULL
)

1412 
	`UMEM_WALK_ALL
("umem", 
w•
);

1413  (
	`umem_wÆk_öô_comm⁄
(
w•
, 
UM_ALLOCATED
));

1414 
	}
}

1417 
	$buf˘l_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1419 i‡(
w•
->
wÆk_addr
 =
NULL
)

1420 
	`UMEM_WALK_ALL
("buf˘l", 
w•
);

1421  (
	`umem_wÆk_öô_comm⁄
(
w•
, 
UM_ALLOCATED
 | 
UM_BUFCTL
));

1422 
	}
}

1425 
	$‰ìmem_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1427 i‡(
w•
->
wÆk_addr
 =
NULL
)

1428 
	`UMEM_WALK_ALL
("‰ìmem", 
w•
);

1429  (
	`umem_wÆk_öô_comm⁄
(
w•
, 
UM_FREE
));

1430 
	}
}

1433 
	$‰ì˘l_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1435 i‡(
w•
->
wÆk_addr
 =
NULL
)

1436 
	`UMEM_WALK_ALL
("‰ì˘l", 
w•
);

1437  (
	`umem_wÆk_öô_comm⁄
(
w•
, 
UM_FREE
 | 
UM_BUFCTL
));

1438 
	}
}

1440 
	sbuf˘l_hi°‹y_wÆk
 {

1441 *
	mbhw_√xt
;

1442 
umem_ˇche_t
 *
	mbhw_ˇche
;

1443 
umem_¶ab_t
 *
	mbhw_¶ab
;

1444 
hπime_t
 
	mbhw_time°amp
;

1445 } 
	tbuf˘l_hi°‹y_wÆk_t
;

1448 
	$buf˘l_hi°‹y_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1450 
buf˘l_hi°‹y_wÆk_t
 *
bhw
;

1451 
umem_buf˘l_audô_t
 
bc
;

1452 
umem_buf˘l_audô_t
 
b˙
;

1454 i‡(
w•
->
wÆk_addr
 =
NULL
) {

1455 
	`mdb_w¨n
("bufctl_history walk doesn't support global walks\n");

1456  (
WALK_ERR
);

1459 i‡(
	`mdb_vªad
(&
bc
,  (bc), 
w•
->
wÆk_addr
) == -1) {

1460 
	`mdb_w¨n
("u«bÀÅÿªad buf˘»© %p", 
w•
->
wÆk_addr
);

1461  (
WALK_ERR
);

1464 
bhw
 = 
	`mdb_zÆloc
( (*bhw), 
UM_SLEEP
);

1465 
bhw
->
bhw_time°amp
 = 0;

1466 
bhw
->
bhw_ˇche
 = 
bc
.
bc_ˇche
;

1467 
bhw
->
bhw_¶ab
 = 
bc
.
bc_¶ab
;

1473 i‡(
bc
.
bc_œ°log
 !
NULL
 &&

1474 
	`mdb_vªad
(&
b˙
,  (b˙), (
uöçå_t
)
bc
.
bc_œ°log
) != -1 &&

1475 
bc
.
bc_addr
 =
b˙
.bc_addr &&

1476 
bc
.
bc_ˇche
 =
b˙
.bc_cache &&

1477 
bc
.
bc_¶ab
 =
b˙
.bc_slab &&

1478 
bc
.
bc_time°amp
 =
b˙
.bc_timestamp &&

1479 
bc
.
bc_thªad
 =
b˙
.bc_thread)

1480 
bhw
->
bhw_√xt
 = 
bc
.
bc_œ°log
;

1482 
bhw
->
bhw_√xt
 = (*)
w•
->
wÆk_addr
;

1484 
w•
->
wÆk_addr
 = (
uöçå_t
)
bc
.
bc_addr
;

1485 
w•
->
wÆk_d©a
 = 
bhw
;

1487  (
WALK_NEXT
);

1488 
	}
}

1491 
	$buf˘l_hi°‹y_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

1493 
buf˘l_hi°‹y_wÆk_t
 *
bhw
 = 
w•
->
wÆk_d©a
;

1494 
uöçå_t
 
addr
 = (uöçå_t)
bhw
->
bhw_√xt
;

1495 
uöçå_t
 
ba£addr
 = 
w•
->
wÆk_addr
;

1496 
umem_buf˘l_audô_t
 *
b
;

1497 
	`UMEM_LOCAL_BUFCTL_AUDIT
(&
b
);

1499 i‡(
addr
 =
NULL
)

1500  (
WALK_DONE
);

1502 i‡(
	`mdb_vªad
(
b
, 
UMEM_BUFCTL_AUDIT_SIZE
, 
addr
) == -1) {

1503 
	`mdb_w¨n
("u«bÀÅÿªad buf˘»© %p", 
bhw
->
bhw_√xt
);

1504  (
WALK_ERR
);

1512 i‡((
uöçå_t
)
b
->
bc_addr
 !
ba£addr
 ||

1513 
b
->
bc_ˇche
 !
bhw
->
bhw_ˇche
 ||

1514 
b
->
bc_¶ab
 !
bhw
->
bhw_¶ab
 ||

1515 (
bhw
->
bhw_time°amp
 !0 && 
b
->
bc_time°amp
 >= bhw->bhw_timestamp))

1516  (
WALK_DONE
);

1518 
bhw
->
bhw_√xt
 = 
b
->
bc_œ°log
;

1519 
bhw
->
bhw_time°amp
 = 
b
->
bc_time°amp
;

1521  (
w•
->
	`wÆk_ˇŒback
(
addr
, 
b
, w•->
wÆk_cbd©a
));

1522 
	}
}

1525 
	$buf˘l_hi°‹y_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

1527 
buf˘l_hi°‹y_wÆk_t
 *
bhw
 = 
w•
->
wÆk_d©a
;

1529 
	`mdb_‰ì
(
bhw
,  (*bhw));

1530 
	}
}

1532 
	sumem_log_wÆk
 {

1533 
umem_buf˘l_audô_t
 *
	mulw_ba£
;

1534 
umem_buf˘l_audô_t
 **
	mulw_s‹ãd
;

1535 
umem_log_hódî_t
 
	mulw_lh
;

1536 
size_t
 
	mulw_size
;

1537 
size_t
 
	mulw_maxndx
;

1538 
size_t
 
	mulw_ndx
;

1539 } 
	tumem_log_wÆk_t
;

1542 
	$umem_log_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1544 
uöçå_t
 
Õ
 = 
w•
->
wÆk_addr
;

1545 
umem_log_wÆk_t
 *
ulw
;

1546 
umem_log_hódî_t
 *
lhp
;

1547 
maxndx
, 
i
, 
j
, 
k
;

1553 i‡(
Õ
 =
NULL
 && 
	`umem_ªadv¨
(&lp, "umem_transaction_log") == -1) {

1554 
	`mdb_w¨n
("failedÅoÑead 'umem_transaction_log'");

1555  (
WALK_ERR
);

1558 i‡(
Õ
 =
NULL
) {

1559 
	`mdb_w¨n
("log is disabled\n");

1560  (
WALK_ERR
);

1563 
ulw
 = 
	`mdb_zÆloc
( (
umem_log_wÆk_t
), 
UM_SLEEP
);

1564 
lhp
 = &
ulw
->
ulw_lh
;

1566 i‡(
	`mdb_vªad
(
lhp
,  (
umem_log_hódî_t
), 
Õ
) == -1) {

1567 
	`mdb_w¨n
("ÁûedÅÿªadÜog hódîáà%p", 
Õ
);

1568 
	`mdb_‰ì
(
ulw
,  (
umem_log_wÆk_t
));

1569  (
WALK_ERR
);

1572 
ulw
->
ulw_size
 = 
lhp
->
lh_chunksize
 *Ühp->
lh_nchunks
;

1573 
ulw
->
ulw_ba£
 = 
	`mdb_Æloc
(ulw->
ulw_size
, 
UM_SLEEP
);

1574 
maxndx
 = 
lhp
->
lh_chunksize
 / 
UMEM_BUFCTL_AUDIT_SIZE
 - 1;

1576 i‡(
	`mdb_vªad
(
ulw
->
ulw_ba£
, ulw->
ulw_size
,

1577 (
uöçå_t
)
lhp
->
lh_ba£
) == -1) {

1578 
	`mdb_w¨n
("ÁûedÅÿªadÜogáàba£ %p", 
lhp
->
lh_ba£
);

1579 
	`mdb_‰ì
(
ulw
->
ulw_ba£
, ulw->
ulw_size
);

1580 
	`mdb_‰ì
(
ulw
,  (
umem_log_wÆk_t
));

1581  (
WALK_ERR
);

1584 
ulw
->
ulw_s‹ãd
 = 
	`mdb_Æloc
(
maxndx
 * 
lhp
->
lh_nchunks
 *

1585  (
umem_buf˘l_audô_t
 *), 
UM_SLEEP
);

1587 
i
 = 0, 
k
 = 0; i < 
lhp
->
lh_nchunks
; i++) {

1588 
ˇddr_t
 
chunk
 = (caddr_t)

1589 ((
uöçå_t
)
ulw
->
ulw_ba£
 + 
i
 * 
lhp
->
lh_chunksize
);

1591 
j
 = 0; j < 
maxndx
; j++) {

1593 
ulw
->
ulw_s‹ãd
[
k
++] = (
umem_buf˘l_audô_t
 *)
chunk
;

1594 
chunk
 +
UMEM_BUFCTL_AUDIT_SIZE
;

1598 
	`qs‹t
(
ulw
->
ulw_s‹ãd
, 
k
,  (
umem_buf˘l_audô_t
 *),

1599 ((*)(c⁄° *, c⁄° *))
buf˘lcmp
);

1601 
ulw
->
ulw_maxndx
 = 
k
;

1602 
w•
->
wÆk_d©a
 = 
ulw
;

1604  (
WALK_NEXT
);

1605 
	}
}

1608 
	$umem_log_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

1610 
umem_log_wÆk_t
 *
ulw
 = 
w•
->
wÆk_d©a
;

1611 
umem_buf˘l_audô_t
 *
b˝
;

1613 i‡(
ulw
->
ulw_ndx
 =ulw->
ulw_maxndx
)

1614  (
WALK_DONE
);

1616 
b˝
 = 
ulw
->
ulw_s‹ãd
[ulw->
ulw_ndx
++];

1618  (
w•
->
	`wÆk_ˇŒback
((
uöçå_t
)
b˝
 - (uöçå_t)
ulw
->
ulw_ba£
 +

1619 (
uöçå_t
)
ulw
->
ulw_lh
.
lh_ba£
, 
b˝
, 
w•
->
wÆk_cbd©a
));

1620 
	}
}

1623 
	$umem_log_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

1625 
umem_log_wÆk_t
 *
ulw
 = 
w•
->
wÆk_d©a
;

1627 
	`mdb_‰ì
(
ulw
->
ulw_ba£
, ulw->
ulw_size
);

1628 
	`mdb_‰ì
(
ulw
->
ulw_s‹ãd
, ulw->
ulw_maxndx
 *

1629  (
umem_buf˘l_audô_t
 *));

1630 
	`mdb_‰ì
(
ulw
,  (
umem_log_wÆk_t
));

1631 
	}
}

1633 
	sÆlocdby_buf˘l
 {

1634 
uöçå_t
 
	mabb_addr
;

1635 
hπime_t
 
	mabb_ts
;

1636 } 
	tÆlocdby_buf˘l_t
;

1638 
	sÆlocdby_wÆk
 {

1639 c⁄° *
	mabw_wÆk
;

1640 
uöçå_t
 
	mabw_thªad
;

1641 
size_t
 
	mabw_nbufs
;

1642 
size_t
 
	mabw_size
;

1643 
Ælocdby_buf˘l_t
 *
	mabw_buf
;

1644 
size_t
 
	mabw_ndx
;

1645 } 
	tÆlocdby_wÆk_t
;

1648 
	$Ælocdby_wÆk_buf˘l
(
uöçå_t
 
addr
, c⁄° 
umem_buf˘l_audô_t
 *
b˝
,

1649 
Ælocdby_wÆk_t
 *
abw
)

1651 i‡((
uöçå_t
)
b˝
->
bc_thªad
 !
abw
->
abw_thªad
)

1652  (
WALK_NEXT
);

1654 i‡(
abw
->
abw_nbufs
 =abw->
abw_size
) {

1655 
Ælocdby_buf˘l_t
 *
buf
;

1656 
size_t
 
ﬁdsize
 =  (
Ælocdby_buf˘l_t
Ë* 
abw
->
abw_size
;

1658 
buf
 = 
	`mdb_zÆloc
(
ﬁdsize
 << 1, 
UM_SLEEP
);

1660 
	`bc›y
(
abw
->
abw_buf
, 
buf
, 
ﬁdsize
);

1661 
	`mdb_‰ì
(
abw
->
abw_buf
, 
ﬁdsize
);

1663 
abw
->
abw_size
 <<= 1;

1664 
abw
->
abw_buf
 = 
buf
;

1667 
abw
->
abw_buf
[abw->
abw_nbufs
].
abb_addr
 = 
addr
;

1668 
abw
->
abw_buf
[abw->
abw_nbufs
].
abb_ts
 = 
b˝
->
bc_time°amp
;

1669 
abw
->
abw_nbufs
++;

1671  (
WALK_NEXT
);

1672 
	}
}

1676 
	$Ælocdby_wÆk_ˇche
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
Ælocdby_wÆk_t
 *
abw
)

1678 i‡(
	`mdb_pwÆk
(
abw
->
abw_wÆk
, (
mdb_wÆk_cb_t
)
Ælocdby_wÆk_buf˘l
,

1679 
abw
, 
addr
) == -1) {

1680 
	`mdb_w¨n
("couldn'àwÆk buf˘»f‹ cachê%p", 
addr
);

1681  (
WALK_DONE
);

1684  (
WALK_NEXT
);

1685 
	}
}

1688 
	$Ælocdby_cmp
(c⁄° 
Ælocdby_buf˘l_t
 *
lhs
, c⁄°áŒocdby_buf˘l_à*
rhs
)

1690 i‡(
lhs
->
abb_ts
 < 
rhs
->abb_ts)

1692 i‡(
lhs
->
abb_ts
 > 
rhs
->abb_ts)

1695 
	}
}

1698 
	$Ælocdby_wÆk_öô_comm⁄
(
mdb_wÆk_°©e_t
 *
w•
, c⁄° *
wÆk
)

1700 
Ælocdby_wÆk_t
 *
abw
;

1702 i‡(
w•
->
wÆk_addr
 =
NULL
) {

1703 
	`mdb_w¨n
("allocdby walk doesn't support global walks\n");

1704  (
WALK_ERR
);

1707 
abw
 = 
	`mdb_zÆloc
( (
Ælocdby_wÆk_t
), 
UM_SLEEP
);

1709 
abw
->
abw_thªad
 = 
w•
->
wÆk_addr
;

1710 
abw
->
abw_wÆk
 = 
wÆk
;

1711 
abw
->
abw_size
 = 128;

1712 
abw
->
abw_buf
 =

1713 
	`mdb_zÆloc
(
abw
->
abw_size
 *  (
Ælocdby_buf˘l_t
), 
UM_SLEEP
);

1715 
w•
->
wÆk_d©a
 = 
abw
;

1717 i‡(
	`mdb_wÆk
("umem_cache",

1718 (
mdb_wÆk_cb_t
)
Ælocdby_wÆk_ˇche
, 
abw
) == -1) {

1719 
	`mdb_w¨n
("couldn't walk umem_cache");

1720 
	`Ælocdby_wÆk_föi
(
w•
);

1721  (
WALK_ERR
);

1724 
	`qs‹t
(
abw
->
abw_buf
,ábw->
abw_nbufs
,  (
Ælocdby_buf˘l_t
),

1725 ((*)(c⁄° *, c⁄° *))
Ælocdby_cmp
);

1727  (
WALK_NEXT
);

1728 
	}
}

1731 
	$Ælocdby_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1733  (
	`Ælocdby_wÆk_öô_comm⁄
(
w•
, "bufctl"));

1734 
	}
}

1737 
	$‰ìdby_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

1739  (
	`Ælocdby_wÆk_öô_comm⁄
(
w•
, "freectl"));

1740 
	}
}

1743 
	$Ælocdby_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

1745 
Ælocdby_wÆk_t
 *
abw
 = 
w•
->
wÆk_d©a
;

1746 
uöçå_t
 
addr
;

1747 
umem_buf˘l_audô_t
 *
b˝
;

1748 
	`UMEM_LOCAL_BUFCTL_AUDIT
(&
b˝
);

1750 i‡(
abw
->
abw_ndx
 =abw->
abw_nbufs
)

1751  (
WALK_DONE
);

1753 
addr
 = 
abw
->
abw_buf
[abw->
abw_ndx
++].
abb_addr
;

1755 i‡(
	`mdb_vªad
(
b˝
, 
UMEM_BUFCTL_AUDIT_SIZE
, 
addr
) == -1) {

1756 
	`mdb_w¨n
("couldn'àªad buf˘»© %p", 
addr
);

1757  (
WALK_DONE
);

1760  (
w•
->
	`wÆk_ˇŒback
(
addr
, 
b˝
, w•->
wÆk_cbd©a
));

1761 
	}
}

1764 
	$Ælocdby_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

1766 
Ælocdby_wÆk_t
 *
abw
 = 
w•
->
wÆk_d©a
;

1768 
	`mdb_‰ì
(
abw
->
abw_buf
,  (
Ælocdby_buf˘l_t
Ë*ábw->
abw_size
);

1769 
	`mdb_‰ì
(
abw
,  (
Ælocdby_wÆk_t
));

1770 
	}
}

1774 
	$Ælocdby_wÆk
(
uöçå_t
 
addr
, c⁄° 
umem_buf˘l_audô_t
 *
b˝
, *
ign‹ed
)

1776 
c
[
MDB_SYM_NAMLEN
];

1777 
GElf_Sym
 
sym
;

1778 
i
;

1780 
	`mdb_¥ötf
("%0?∞%12Œx ", 
addr
, 
b˝
->
bc_time°amp
);

1781 
i
 = 0; i < 
b˝
->
bc_dïth
; i++) {

1782 i‡(
	`mdb_lookup_by_addr
(
b˝
->
bc_°ack
[
i
],

1783 
MDB_SYM_FUZZY
, 
c
,  (c), &
sym
) == -1)

1785 i‡(
	`is_umem_sym
(
c
, "umem_"))

1787 
	`mdb_¥ötf
("%s+0x%lx",

1788 
c
, 
b˝
->
bc_°ack
[
i
] - (
uöçå_t
)
sym
.
°_vÆue
);

1791 
	`mdb_¥ötf
("\n");

1793  (
WALK_NEXT
);

1794 
	}
}

1797 
	$Ælocdby_comm⁄
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, c⁄° *
w
)

1799 i‡(!(
Êags
 & 
DCMD_ADDRSPEC
))

1800  (
DCMD_USAGE
);

1802 
	`mdb_¥ötf
("%-?s %12s %s\n", "BUFCTL", "TIMESTAMP", "CALLER");

1804 i‡(
	`mdb_pwÆk
(
w
, (
mdb_wÆk_cb_t
)
Ælocdby_wÆk
, 
NULL
, 
addr
) == -1) {

1805 
	`mdb_w¨n
("ˇn'àwÆk '%s' f‹ %p", 
w
, 
addr
);

1806  (
DCMD_ERR
);

1809  (
DCMD_OK
);

1810 
	}
}

1814 
	$Ælocdby
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

1816  (
	`Ælocdby_comm⁄
(
addr
, 
Êags
, "allocdby"));

1817 
	}
}

1821 
	$‰ìdby
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

1823  (
	`Ælocdby_comm⁄
(
addr
, 
Êags
, "freedby"));

1824 
	}
}

1826 
	swh©is_öfo
 {

1827 
mdb_wh©is_t
 *
	mwi_w
;

1828 c⁄° 
umem_ˇche_t
 *
	mwi_ˇche
;

1829 c⁄° 
vmem_t
 *
	mwi_vmem
;

1830 
vmem_t
 *
	mwi_msb_¨ía
;

1831 
size_t
 
	mwi_¶ab_size
;

1832 
	mwi_¶ab_found
;

1833 
uöt_t
 
	mwi_‰ìmem
;

1834 } 
	twh©is_öfo_t
;

1838 
	$wh©is_ˇŒ_¥öãr
(
mdb_dcmd_f
 *
dcmd
, 
uöçå_t
 
addr
)

1840 
mdb_¨g_t
 
a
;

1841 
a
.
a_ty≥
 = 
MDB_TYPE_STRING
;

1842 
a
.
a_un
.
a_°r
 = "-v";

1844 
	`mdb_¥ötf
(":\n");

1845 (Ë(*
dcmd
)(
addr
, 
DCMD_ADDRSPEC
, 1, &
a
);

1846 
	}
}

1849 
	$wh©is_¥öt_umem
(
wh©is_öfo_t
 *
wi
, 
uöçå_t
 
maddr
, uöçå_à
addr
,

1850 
uöçå_t
 
baddr
)

1852 
mdb_wh©is_t
 *
w
 = 
wi
->
wi_w
;

1853 c⁄° 
umem_ˇche_t
 *
˝
 = 
wi
->
wi_ˇche
;

1854 
quõt
 = (
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_QUIET
);

1856 
ˇŒ_¥öãr
 = (!
quõt
 && (
˝
->
ˇche_Êags
 & 
UMF_AUDIT
));

1858 
	`mdb_wh©is_ªp‹t_obje˘
(
w
, 
maddr
, 
addr
, "");

1860 i‡(
baddr
 !0 && !
ˇŒ_¥öãr
)

1861 
	`mdb_¥ötf
("buf˘»%∞", 
baddr
);

1863 
	`mdb_¥ötf
("%s from %s",

1864 (
wi
->
wi_‰ìmem
 =
FALSE
Ë? "Æloˇãd" : "‰ìd", 
˝
->
ˇche_«me
);

1866 i‡(
ˇŒ_¥öãr
 && 
baddr
 != 0) {

1867 
	`wh©is_ˇŒ_¥öãr
(
buf˘l
, 
baddr
);

1870 
	`mdb_¥ötf
("\n");

1871 
	}
}

1875 
	$wh©is_wÆk_umem
(
uöçå_t
 
addr
, *
ign‹ed
, 
wh©is_öfo_t
 *
wi
)

1877 
mdb_wh©is_t
 *
w
 = 
wi
->
wi_w
;

1879 
uöçå_t
 
cur
;

1880 
size_t
 
size
 = 
wi
->
wi_ˇche
->
ˇche_bufsize
;

1882 
	`mdb_wh©is_m©ch
(
w
, 
addr
, 
size
, &
cur
))

1883 
	`wh©is_¥öt_umem
(
wi
, 
cur
, 
addr
, 
NULL
);

1885  (
	`WHATIS_WALKRET
(
w
));

1886 
	}
}

1890 
	$wh©is_wÆk_buf˘l
(
uöçå_t
 
baddr
, c⁄° 
umem_buf˘l_t
 *
b˝
, 
wh©is_öfo_t
 *
wi
)

1892 
mdb_wh©is_t
 *
w
 = 
wi
->
wi_w
;

1894 
uöçå_t
 
cur
;

1895 
uöçå_t
 
addr
 = (uöçå_t)
b˝
->
bc_addr
;

1896 
size_t
 
size
 = 
wi
->
wi_ˇche
->
ˇche_bufsize
;

1898 
	`mdb_wh©is_m©ch
(
w
, 
addr
, 
size
, &
cur
))

1899 
	`wh©is_¥öt_umem
(
wi
, 
cur
, 
addr
, 
baddr
);

1901  (
	`WHATIS_WALKRET
(
w
));

1902 
	}
}

1906 
	$wh©is_wÆk_£g
(
uöçå_t
 
addr
, c⁄° 
vmem_£g_t
 *
vs
, 
wh©is_öfo_t
 *
wi
)

1908 
mdb_wh©is_t
 *
w
 = 
wi
->
wi_w
;

1910 
size_t
 
size
 = 
vs
->
vs_íd
 - vs->
vs_°¨t
;

1911 
uöçå_t
 
cur
;

1914 i‡(
vs
->
vs_ty≥
 !
VMEM_ALLOC
 && vs->vs_ty≥ !
VMEM_FREE
)

1915  (
WALK_NEXT
);

1917 
	`mdb_wh©is_m©ch
(
w
, 
vs
->
vs_°¨t
, 
size
, &
cur
)) {

1918 
	`mdb_wh©is_ªp‹t_obje˘
(
w
, 
cur
, 
vs
->
vs_°¨t
, "");

1924 i‡((
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_QUIET
) &&

1925 ((
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_BUFCTL
) != 0 ||

1926 (
vs
->
vs_ty≥
 =
VMEM_ALLOC
 && vs->
vs_dïth
 != 0))) {

1927 
	`mdb_¥ötf
("vmem_£g %∞", 
addr
);

1930 
	`mdb_¥ötf
("%s from %s vmemárena",

1931 (
vs
->
vs_ty≥
 =
VMEM_ALLOC
) ? "allocated" : "freed",

1932 
wi
->
wi_vmem
->
vm_«me
);

1934 i‡(!
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_QUIET
)

1935 
	`wh©is_ˇŒ_¥öãr
(
vmem_£g
, 
addr
);

1937 
	`mdb_¥ötf
("\n");

1940  (
	`WHATIS_WALKRET
(
w
));

1941 
	}
}

1944 
	$wh©is_wÆk_vmem
(
uöçå_t
 
addr
, c⁄° 
vmem_t
 *
vmem
, 
wh©is_öfo_t
 *
wi
)

1946 
mdb_wh©is_t
 *
w
 = 
wi
->
wi_w
;

1947 c⁄° *
nm
 = 
vmem
->
vm_«me
;

1948 
wi
->
wi_vmem
 = 
vmem
;

1950 i‡(
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_VERBOSE
)

1951 
	`mdb_¥ötf
("Sórchög vmemáª« %s...\n", 
nm
);

1953 i‡(
	`mdb_pwÆk
("vmem_seg",

1954 (
mdb_wÆk_cb_t
)
wh©is_wÆk_£g
, 
wi
, 
addr
) == -1) {

1955 
	`mdb_w¨n
("ˇn'àwÆk vmem seg f‹ %p", 
addr
);

1956  (
WALK_NEXT
);

1959  (
	`WHATIS_WALKRET
(
w
));

1960 
	}
}

1964 
	$wh©is_wÆk_¶ab
(
uöçå_t
 
ßddr
, c⁄° 
umem_¶ab_t
 *
•
, 
wh©is_öfo_t
 *
wi
)

1966 
mdb_wh©is_t
 *
w
 = 
wi
->
wi_w
;

1969 i‡(
	`mdb_wh©is_ovîœps
(
w
,

1970 (
uöçå_t
)
•
->
¶ab_ba£
, 
wi
->
wi_¶ab_size
)) {

1971 
wi
->
wi_¶ab_found
++;

1972  (
WALK_DONE
);

1974  (
WALK_NEXT
);

1975 
	}
}

1978 
	$wh©is_wÆk_ˇche
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
wh©is_öfo_t
 *
wi
)

1980 
mdb_wh©is_t
 *
w
 = 
wi
->
wi_w
;

1981 *
wÆk
, *
‰ìwÆk
;

1982 
mdb_wÆk_cb_t
 
func
;

1983 
do_buf˘l
;

1986 i‡(!(
c
->
ˇche_Êags
 & 
UMF_HASH
))

1987 
do_buf˘l
 = 
FALSE
;

1988 i‡(
c
->
ˇche_Êags
 & 
UMF_AUDIT
)

1989 
do_buf˘l
 = 
TRUE
;

1991 
do_buf˘l
 = ((
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_BUFCTL
) != 0);

1993 i‡(
do_buf˘l
) {

1994 
wÆk
 = "bufctl";

1995 
‰ìwÆk
 = "freectl";

1996 
func
 = (
mdb_wÆk_cb_t
)
wh©is_wÆk_buf˘l
;

1998 
wÆk
 = "umem";

1999 
‰ìwÆk
 = "freemem";

2000 
func
 = (
mdb_wÆk_cb_t
)
wh©is_wÆk_umem
;

2003 
wi
->
wi_ˇche
 = 
c
;

2005 i‡(
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_VERBOSE
)

2006 
	`mdb_¥ötf
("Sórchög %s...\n", 
c
->
ˇche_«me
);

2013 
wi
->
wi_¶ab_size
 = 
c
->
ˇche_¶absize
 - c->
ˇche_maxcﬁ‹
;

2014 i‡(!(
c
->
ˇche_Êags
 & 
UMF_HASH
))

2015 
wi
->
wi_¶ab_size
 - (
umem_¶ab_t
);

2017 i‡((
wi
->
wi_¶ab_size
 / 
c
->
ˇche_chunksize
) > 2) {

2018 
wi
->
wi_¶ab_found
 = 0;

2019 i‡(
	`mdb_pwÆk
("umem_¶ab", (
mdb_wÆk_cb_t
)
wh©is_wÆk_¶ab
, 
wi
,

2020 
addr
) == -1) {

2021 
	`mdb_w¨n
("can't find umem_slab walker");

2022  (
WALK_DONE
);

2024 i‡(
wi
->
wi_¶ab_found
 == 0)

2025  (
WALK_NEXT
);

2028 
wi
->
wi_‰ìmem
 = 
FALSE
;

2029 i‡(
	`mdb_pwÆk
(
wÆk
, 
func
, 
wi
, 
addr
) == -1) {

2030 
	`mdb_w¨n
("ˇn'àföd %†wÆkî", 
wÆk
);

2031  (
WALK_DONE
);

2034 i‡(
	`mdb_wh©is_d⁄e
(
w
))

2035  (
WALK_DONE
);

2040 i‡(
	`mdb_wh©is_Êags
(
w
Ë& 
WHATIS_VERBOSE
)

2041 
	`mdb_¥ötf
("Sórchög %†f‹ fªêmem‹y...\n", 
c
->
ˇche_«me
);

2043 
wi
->
wi_‰ìmem
 = 
TRUE
;

2045 i‡(
	`mdb_pwÆk
(
‰ìwÆk
, 
func
, 
wi
, 
addr
) == -1) {

2046 
	`mdb_w¨n
("ˇn'àföd %†wÆkî", 
‰ìwÆk
);

2047  (
WALK_DONE
);

2050  (
	`WHATIS_WALKRET
(
w
));

2051 
	}
}

2054 
	$wh©is_wÆk_touch
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
wh©is_öfo_t
 *
wi
)

2056 i‡(
c
->
ˇche_¨ía
 =
wi
->
wi_msb_¨ía
 ||

2057 (
c
->
ˇche_cÊags
 & 
UMC_NOTOUCH
))

2058  (
WALK_NEXT
);

2060  (
	`wh©is_wÆk_ˇche
(
addr
, 
c
, 
wi
));

2061 
	}
}

2064 
	$wh©is_wÆk_mëad©a
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
wh©is_öfo_t
 *
wi
)

2066 i‡(
c
->
ˇche_¨ía
 !
wi
->
wi_msb_¨ía
)

2067  (
WALK_NEXT
);

2069  (
	`wh©is_wÆk_ˇche
(
addr
, 
c
, 
wi
));

2070 
	}
}

2073 
	$wh©is_wÆk_nŸouch
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
c
, 
wh©is_öfo_t
 *
wi
)

2075 i‡(
c
->
ˇche_¨ía
 =
wi
->
wi_msb_¨ía
 ||

2076 !(
c
->
ˇche_cÊags
 & 
UMC_NOTOUCH
))

2077  (
WALK_NEXT
);

2079  (
	`wh©is_wÆk_ˇche
(
addr
, 
c
, 
wi
));

2080 
	}
}

2084 
	$wh©is_run_umem
(
mdb_wh©is_t
 *
w
, *
ign‹ed
)

2086 
wh©is_öfo_t
 
wi
;

2088 
	`bzîo
(&
wi
,  (wi));

2089 
wi
.
wi_w
 = 
w
;

2092 i‡(
	`mdb_ªadv¨
(&
wi
.
wi_msb_¨ía
, "umem_internal_arena") == -1)

2093 
	`mdb_w¨n
("unableÅoÑeadvar \"umem_internal_arena\"");

2102 i‡(
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
wh©is_wÆk_touch
,

2103 &
wi
) == -1 ||

2104 
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
wh©is_wÆk_mëad©a
,

2105 &
wi
) == -1 ||

2106 
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
wh©is_wÆk_nŸouch
,

2107 &
wi
) == -1) {

2108 
	`mdb_w¨n
("couldn't find umem_cache walker");

2112 
	}
}

2116 
	$wh©is_run_vmem
(
mdb_wh©is_t
 *
w
, *
ign‹ed
)

2118 
wh©is_öfo_t
 
wi
;

2120 
	`bzîo
(&
wi
,  (wi));

2121 
wi
.
wi_w
 = 
w
;

2123 i‡(
	`mdb_wÆk
("vmem_postfix",

2124 (
mdb_wÆk_cb_t
)
wh©is_wÆk_vmem
, &
wi
) == -1) {

2125 
	`mdb_w¨n
("couldn't find vmem_postfix walker");

2129 
	}
}

2132 
	$umem_öô
()

2134 
mdb_wÆkî_t
 
w
 = {

2135 "umem_ˇche", "wÆkÜi° o‡umem caches", 
umem_ˇche_wÆk_öô
,

2136 
umem_ˇche_wÆk_°ï
, 
umem_ˇche_wÆk_föi


2139 i‡(
	`mdb_add_wÆkî
(&
w
) == -1) {

2140 
	`mdb_w¨n
("failedÅoádd umem_cache walker");

2144 i‡(
	`umem_upd©e_v¨übÀs
() == -1)

2148 (Ë
	`mdb_ˇŒback_add
(
MDB_CALLBACK_STCHG
, 
umem_°©ech™ge_cb
, 
NULL
);

2149 
	`umem_°©ech™ge_cb
(
NULL
);

2154 
	`mdb_wh©is_ªgi°î
("umem", 
wh©is_run_umem
, 
NULL
,

2155 
WHATIS_PRIO_ALLOCATOR
, 
WHATIS_REG_NO_ID
);

2156 
	`mdb_wh©is_ªgi°î
("vmem", 
wh©is_run_vmem
, 
NULL
,

2157 
WHATIS_PRIO_ALLOCATOR
, 
WHATIS_REG_NO_ID
);

2160 
	}
}

2162 
	sumem_log_˝u
 {

2163 
uöçå_t
 
	mumc_low
;

2164 
uöçå_t
 
	mumc_high
;

2165 } 
	tumem_log_˝u_t
;

2168 
	$umem_log_wÆk
(
uöçå_t
 
addr
, c⁄° 
umem_buf˘l_audô_t
 *
b
, 
umem_log_˝u_t
 *
umc
)

2170 
i
;

2172 
i
 = 0; i < 
umem_max_n˝us
; i++) {

2173 i‡(
addr
 >
umc
[
i
].
umc_low
 &&ádd∏< umc[i].
umc_high
)

2177 i‡(
i
 =
umem_max_n˝us
)

2178 
	`mdb_¥ötf
(" ");

2180 
	`mdb_¥ötf
("%3d", 
i
);

2182 
	`mdb_¥ötf
(" %0?∞%0?∞%16Œx %0?p\n", 
addr
, 
b
->
bc_addr
,

2183 
b
->
bc_time°amp
, b->
bc_thªad
);

2185  (
WALK_NEXT
);

2186 
	}
}

2190 
	$umem_log
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

2192 
umem_log_hódî_t
 
lh
;

2193 
umem_˝u_log_hódî_t
 
˛h
;

2194 
uöçå_t
 
lhp
, 
˛hp
;

2195 
umem_log_˝u_t
 *
umc
;

2196 
i
;

2198 i‡(
	`umem_ªadv¨
(&
lhp
, "umem_transaction_log") == -1) {

2199 
	`mdb_w¨n
("failedÅoÑead 'umem_transaction_log'");

2200  (
DCMD_ERR
);

2203 i‡(
lhp
 =
NULL
) {

2204 
	`mdb_w¨n
("no umemÅransactionÜog\n");

2205  (
DCMD_ERR
);

2208 i‡(
	`mdb_vªad
(&
lh
,  (
umem_log_hódî_t
), 
lhp
) == -1) {

2209 
	`mdb_w¨n
("ÁûedÅÿªadÜog hódîáà%p", 
lhp
);

2210  (
DCMD_ERR
);

2213 
˛hp
 = 
lhp
 + ((
uöçå_t
)&
lh
.
lh_˝u
[0] - (uintptr_t)&lh);

2215 
umc
 = 
	`mdb_zÆloc
( (
umem_log_˝u_t
Ë* 
umem_max_n˝us
,

2216 
UM_SLEEP
 | 
UM_GC
);

2218 
i
 = 0; i < 
umem_max_n˝us
; i++) {

2219 i‡(
	`mdb_vªad
(&
˛h
,  (˛h), 
˛hp
) == -1) {

2220 
	`mdb_w¨n
("cannotÑead cpu %d'sÜog headerát %p",

2221 
i
, 
˛hp
);

2222  (
DCMD_ERR
);

2225 
umc
[
i
].
umc_low
 = 
˛h
.
˛h_chunk
 * 
lh
.
lh_chunksize
 +

2226 (
uöçå_t
)
lh
.
lh_ba£
;

2227 
umc
[
i
].
umc_high
 = (
uöçå_t
)
˛h
.
˛h_cuºít
;

2229 
˛hp
 + (
umem_˝u_log_hódî_t
);

2232 i‡(
	`DCMD_HDRSPEC
(
Êags
)) {

2233 
	`mdb_¥ötf
("%3s %-?s %-?s %16s %-?s\n", "CPU", "ADDR",

2241 i‡(
Êags
 & 
DCMD_ADDRSPEC
) {

2242 
umem_buf˘l_audô_t
 *
bp
;

2243 
	`UMEM_LOCAL_BUFCTL_AUDIT
(&
bp
);

2245 i‡(
	`mdb_vªad
(
bp
, 
UMEM_BUFCTL_AUDIT_SIZE
, 
addr
) == -1) {

2246 
	`mdb_w¨n
("ÁûedÅÿªad buf˘»© %p", 
addr
);

2247  (
DCMD_ERR
);

2250 (Ë
	`umem_log_wÆk
(
addr
, 
bp
, 
umc
);

2252  (
DCMD_OK
);

2255 i‡(
	`mdb_wÆk
("umem_log", (
mdb_wÆk_cb_t
)
umem_log_wÆk
, 
umc
) == -1) {

2256 
	`mdb_w¨n
("can't find umemÜog walker");

2257  (
DCMD_ERR
);

2260  (
DCMD_OK
);

2261 
	}
}

2263 
	sbuf˘l_hi°‹y_cb
 {

2264 
	mbhc_Êags
;

2265 
	mbhc_¨gc
;

2266 c⁄° 
mdb_¨g_t
 *
	mbhc_¨gv
;

2267 
	mbhc_ªt
;

2268 } 
	tbuf˘l_hi°‹y_cb_t
;

2272 
	$buf˘l_hi°‹y_ˇŒback
(
uöçå_t
 
addr
, c⁄° *
ign
, *
¨g
)

2274 
buf˘l_hi°‹y_cb_t
 *
bhc
 = 
¨g
;

2276 
bhc
->
bhc_ªt
 =

2277 
	`buf˘l
(
addr
, 
bhc
->
bhc_Êags
, bhc->
bhc_¨gc
, bhc->
bhc_¨gv
);

2279 
bhc
->
bhc_Êags
 &~
DCMD_LOOPFIRST
;

2281  ((
bhc
->
bhc_ªt
 =
DCMD_OK
)? 
WALK_NEXT
 : 
WALK_DONE
);

2282 
	}
}

2285 
	$buf˘l_hñp
()

2287 
	`mdb_¥ötf
("%s\n",

2289 
	`mdb_dec_ödít
(2);

2290 
	`mdb_¥ötf
("%<b>OPTIONS%</b>\n");

2291 
	`mdb_öc_ödít
(2);

2292 
	`mdb_¥ötf
("%s",

2305 
	}
}

2308 
	$buf˘l
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

2310 
uöt_t
 
vîbo£
 = 
FALSE
;

2311 
uöt_t
 
hi°‹y
 = 
FALSE
;

2312 
uöt_t
 
ö_hi°‹y
 = 
FALSE
;

2313 
uöçå_t
 
ˇŒî
 = 
NULL
, 
thªad
 = NULL;

2314 
uöçå_t
 
œddr
, 
haddr
, 
baddr
 = 
NULL
;

2315 
hπime_t
 
óæõ°
 = 0, 
œã°
 = 0;

2316 
i
, 
dïth
;

2317 
c
[
MDB_SYM_NAMLEN
];

2318 
GElf_Sym
 
sym
;

2319 
umem_buf˘l_audô_t
 *
b˝
;

2320 
	`UMEM_LOCAL_BUFCTL_AUDIT
(&
b˝
);

2322 i‡(
	`mdb_gë›ts
(
¨gc
, 
¨gv
,

2323 'v', 
MDB_OPT_SETBITS
, 
TRUE
, &
vîbo£
,

2324 'h', 
MDB_OPT_SETBITS
, 
TRUE
, &
hi°‹y
,

2325 'H', 
MDB_OPT_SETBITS
, 
TRUE
, &
ö_hi°‹y
,

2326 'c', 
MDB_OPT_UINTPTR
, &
ˇŒî
,

2327 't', 
MDB_OPT_UINTPTR
, &
thªad
,

2328 'e', 
MDB_OPT_UINT64
, &
óæõ°
,

2329 'l', 
MDB_OPT_UINT64
, &
œã°
,

2330 'a', 
MDB_OPT_UINTPTR
, &
baddr
, 
NULL
Ë!
¨gc
)

2331  (
DCMD_USAGE
);

2333 i‡(!(
Êags
 & 
DCMD_ADDRSPEC
))

2334  (
DCMD_USAGE
);

2336 i‡(
ö_hi°‹y
 && !
hi°‹y
)

2337  (
DCMD_USAGE
);

2339 i‡(
hi°‹y
 && !
ö_hi°‹y
) {

2340 
mdb_¨g_t
 *
«rgv
 = 
	`mdb_zÆloc
( (*«rgvË* (
¨gc
 + 1),

2341 
UM_SLEEP
 | 
UM_GC
);

2342 
buf˘l_hi°‹y_cb_t
 
bhc
;

2344 
«rgv
[0].
a_ty≥
 = 
MDB_TYPE_STRING
;

2345 
«rgv
[0].
a_un
.
a_°r
 = "-H";

2347 
i
 = 0; i < 
¨gc
; i++)

2348 
«rgv
[
i
 + 1] = 
¨gv
[i];

2355 
bhc
.
bhc_Êags
 = 
Êags
 | 
DCMD_LOOP
 | 
DCMD_LOOPFIRST
;

2356 
bhc
.
bhc_¨gc
 = 
¨gc
 + 1;

2357 
bhc
.
bhc_¨gv
 = 
«rgv
;

2358 
bhc
.
bhc_ªt
 = 
DCMD_OK
;

2360 i‡(
	`mdb_pwÆk
("buf˘l_hi°‹y", 
buf˘l_hi°‹y_ˇŒback
, &
bhc
,

2361 
addr
) == -1) {

2362 
	`mdb_w¨n
("unableÅo walk bufctl_history");

2363  (
DCMD_ERR
);

2366 i‡(
bhc
.
bhc_ªt
 =
DCMD_OK
 && !(
Êags
 & 
DCMD_PIPE_OUT
))

2367 
	`mdb_¥ötf
("\n");

2369  (
bhc
.
bhc_ªt
);

2372 i‡(
	`DCMD_HDRSPEC
(
Êags
Ë&& !(Êag†& 
DCMD_PIPE_OUT
)) {

2373 i‡(
vîbo£
) {

2374 
	`mdb_¥ötf
("%16s %16s %16s %16s\n"

2379 
	`mdb_¥ötf
("%<u>%-?s %-?s %-12s %5s %s%</u>\n",

2384 i‡(
	`mdb_vªad
(
b˝
, 
UMEM_BUFCTL_AUDIT_SIZE
, 
addr
) == -1) {

2385 
	`mdb_w¨n
("couldn'àªad buf˘»© %p", 
addr
);

2386  (
DCMD_ERR
);

2393 
dïth
 = 
	`MIN
(
b˝
->
bc_dïth
, 
umem_°ack_dïth
);

2395 i‡(
ˇŒî
 !
NULL
) {

2396 
œddr
 = 
ˇŒî
;

2397 
haddr
 = 
ˇŒî
 +  (caller);

2399 i‡(
	`mdb_lookup_by_addr
(
ˇŒî
, 
MDB_SYM_FUZZY
, 
c
,  (c),

2400 &
sym
Ë!-1 && 
ˇŒî
 =(
uöçå_t
)sym.
°_vÆue
) {

2405 
œddr
 = (
uöçå_t
)
sym
.
°_vÆue
;

2406 
haddr
 = (
uöçå_t
)
sym
.
°_vÆue
 + sym.
°_size
;

2409 
i
 = 0; i < 
dïth
; i++)

2410 i‡(
b˝
->
bc_°ack
[
i
] >
œddr
 &&

2411 
b˝
->
bc_°ack
[
i
] < 
haddr
)

2414 i‡(
i
 =
dïth
)

2415  (
DCMD_OK
);

2418 i‡(
thªad
 !
NULL
 && (
uöçå_t
)
b˝
->
bc_thªad
 !=Åhread)

2419  (
DCMD_OK
);

2421 i‡(
óæõ°
 !0 && 
b˝
->
bc_time°amp
 <Éarliest)

2422  (
DCMD_OK
);

2424 i‡(
œã°
 !0 && 
b˝
->
bc_time°amp
 >Üatest)

2425  (
DCMD_OK
);

2427 i‡(
baddr
 !0 && (
uöçå_t
)
b˝
->
bc_addr
 != baddr)

2428  (
DCMD_OK
);

2430 i‡(
Êags
 & 
DCMD_PIPE_OUT
) {

2431 
	`mdb_¥ötf
("%#r\n", 
addr
);

2432  (
DCMD_OK
);

2435 i‡(
vîbo£
) {

2436 
	`mdb_¥ötf
(

2439 
addr
, 
b˝
->
bc_addr
, b˝->
bc_time°amp
, b˝->
bc_thªad
,

2440 "", 
b˝
->
bc_ˇche
, b˝->
bc_œ°log
, b˝->
bc_c⁄ã¡s
);

2442 
	`mdb_öc_ödít
(17);

2443 
i
 = 0; i < 
dïth
; i++)

2444 
	`mdb_¥ötf
("%a\n", 
b˝
->
bc_°ack
[
i
]);

2445 
	`mdb_dec_ödít
(17);

2446 
	`mdb_¥ötf
("\n");

2448 
	`mdb_¥ötf
("%0?∞%0?∞%12Œx %5d", 
addr
, 
b˝
->
bc_addr
,

2449 
b˝
->
bc_time°amp
, b˝->
bc_thªad
);

2451 
i
 = 0; i < 
dïth
; i++) {

2452 i‡(
	`mdb_lookup_by_addr
(
b˝
->
bc_°ack
[
i
],

2453 
MDB_SYM_FUZZY
, 
c
,  (c), &
sym
) == -1)

2455 i‡(
	`is_umem_sym
(
c
, "umem_"))

2457 
	`mdb_¥ötf
(" %a\n", 
b˝
->
bc_°ack
[
i
]);

2461 i‡(
i
 >
dïth
)

2462 
	`mdb_¥ötf
("\n");

2465  (
DCMD_OK
);

2466 
	}
}

2470 
	$buf˘l_audô
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

2472 
mdb_¨g_t
 
a
;

2474 i‡(!(
Êags
 & 
DCMD_ADDRSPEC
))

2475  (
DCMD_USAGE
);

2477 i‡(
¨gc
 != 0)

2478  (
DCMD_USAGE
);

2480 
a
.
a_ty≥
 = 
MDB_TYPE_STRING
;

2481 
a
.
a_un
.
a_°r
 = "-v";

2483  (
	`buf˘l
(
addr
, 
Êags
, 1, &
a
));

2484 
	}
}

2486 
	sumem_vîify
 {

2487 
uöt64_t
 *
	mumv_buf
;

2488 
size_t
 
	mumv_size
;

2489 
	mumv_c‹ru±i⁄
;

2490 
	mumv_besûít
;

2491 
umem_ˇche
 
	mumv_ˇche
;

2492 } 
	tumem_vîify_t
;

2498 
öt64_t


2499 
	$vîify_∑âîn
(
uöt64_t
 *
buf_¨g
, 
size_t
 
size
, uöt64_à
∑t
)

2502 
uöt64_t
 *
bu„nd
 = (uöt64_à*)((*)
buf_¨g
 + 
size
);

2503 
uöt64_t
 *
buf
;

2505 
buf
 = 
buf_¨g
; bu‡< 
bu„nd
; buf++)

2506 i‡(*
buf
 !
∑t
)

2507  ((
uöçå_t
)
buf
 - (uöçå_t)
buf_¨g
);

2509 
	}
}

2516 
	$vîify_bu·ag
(
umem_bu·ag_t
 *
bç
, 
uöçå_t
 
∑t
)

2518  (
bç
->
bt_bx°©
 =((
öçå_t
)bç->
bt_buf˘l
 ^ 
∑t
) ? 0 : -1);

2519 
	}
}

2528 
	$vîify_‰ì
(
uöçå_t
 
addr
, c⁄° *
d©a
, *
¥iv©e
)

2530 
umem_vîify_t
 *
umv
 = (umem_vîify_à*)
¥iv©e
;

2531 
uöt64_t
 *
buf
 = 
umv
->
umv_buf
;

2532 
öt64_t
 
c‹ru±
;

2533 
umem_bu·ag_t
 *
bu·agp
;

2534 
umem_ˇche_t
 *
˝
 = &
umv
->
umv_ˇche
;

2535 
besûít
 = 
umv
->
umv_besûít
;

2538 
bu·agp
 = 
	`UMEM_BUFTAG
(
˝
, 
buf
);

2543 i‡(
	`mdb_vªad
(
buf
, 
umv
->
umv_size
, 
addr
) == -1) {

2544 i‡(!
besûít
)

2545 
	`mdb_w¨n
("couldn'àªad %p", 
addr
);

2546  (
WALK_NEXT
);

2549 i‡((
c‹ru±
 = 
	`vîify_∑âîn
(
buf
, 
˝
->
ˇche_vîify
,

2550 
UMEM_FREE_PATTERN
)) >= 0) {

2551 i‡(!
besûít
)

2552 
	`mdb_¥ötf
("buffer %p (free) seems corrupted,át %p\n",

2553 
addr
, (
uöçå_t
Ôdd∏+ 
c‹ru±
);

2554 
c‹ru±
;

2557 i‡((
˝
->
ˇche_Êags
 & 
UMF_HASH
) &&

2558 
bu·agp
->
bt_ªdz⁄e
 !
UMEM_REDZONE_PATTERN
) {

2559 i‡(!
besûít
)

2560 
	`mdb_¥ötf
("buffer %p (free) seemsÅo "

2561 "havê®c‹ru±Ñedz⁄ê∑âîn\n", 
addr
);

2562 
c‹ru±
;

2568 i‡(
	`vîify_bu·ag
(
bu·agp
, 
UMEM_BUFTAG_FREE
) == -1) {

2569 i‡(!
besûít
)

2570 
	`mdb_¥ötf
("buffer %p (free) hasá corrupt "

2571 "bu·ag\n", 
addr
);

2572 
c‹ru±
;

2575  (
WALK_NEXT
);

2576 
c‹ru±
:

2577 
umv
->
umv_c‹ru±i⁄
++;

2578  (
WALK_NEXT
);

2579 
	}
}

2588 
	$vîify_Æloc
(
uöçå_t
 
addr
, c⁄° *
d©a
, *
¥iv©e
)

2590 
umem_vîify_t
 *
umv
 = (umem_vîify_à*)
¥iv©e
;

2591 
umem_ˇche_t
 *
˝
 = &
umv
->
umv_ˇche
;

2592 
uöt64_t
 *
buf
 = 
umv
->
umv_buf
;

2594 
umem_bu·ag_t
 *
bu·agp
 = 
	`UMEM_BUFTAG
(
˝
, 
buf
);

2595 
uöt32_t
 *
ù
 = (uöt32_à*)
bu·agp
;

2596 
uöt8_t
 *
bp
 = (uöt8_à*)
buf
;

2597 
looks_ok
 = 0, 
size_ok
 = 1;

2598 
besûít
 = 
umv
->
umv_besûít
;

2603 i‡(
	`mdb_vªad
(
buf
, 
umv
->
umv_size
, 
addr
) == -1) {

2604 i‡(!
besûít
)

2605 
	`mdb_w¨n
("couldn'àªad %p", 
addr
);

2606  (
WALK_NEXT
);

2624 i‡(
bu·agp
->
bt_ªdz⁄e
 =
UMEM_REDZONE_PATTERN
)

2625 
looks_ok
 = 1;

2626 i‡(!
	`UMEM_SIZE_VALID
(
ù
[1]))

2627 
size_ok
 = 0;

2628 i‡(
bp
[
	`UMEM_SIZE_DECODE
(
ù
[1])] =
UMEM_REDZONE_BYTE
)

2629 
looks_ok
 = 1;

2631 
size_ok
 = 0;

2633 i‡(!
size_ok
) {

2634 i‡(!
besûít
)

2635 
	`mdb_¥ötf
("buffer %p (allocated) hasá corrupt "

2636 "ªdz⁄êsizêícodög\n", 
addr
);

2637 
c‹ru±
;

2640 i‡(!
looks_ok
) {

2641 i‡(!
besûít
)

2642 
	`mdb_¥ötf
("buffer %p (allocated) hasá corrupt "

2643 "ªdz⁄êsig«tuª\n", 
addr
);

2644 
c‹ru±
;

2647 i‡(
	`vîify_bu·ag
(
bu·agp
, 
UMEM_BUFTAG_ALLOC
) == -1) {

2648 i‡(!
besûít
)

2649 
	`mdb_¥ötf
("buffer %p (allocated) hasá "

2650 "c‹ru± bu·ag\n", 
addr
);

2651 
c‹ru±
;

2654  (
WALK_NEXT
);

2655 
c‹ru±
:

2656 
umv
->
umv_c‹ru±i⁄
++;

2657  (
WALK_NEXT
);

2658 
	}
}

2662 
	$umem_vîify
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

2664 i‡(
Êags
 & 
DCMD_ADDRSPEC
) {

2665 
check_Æloc
 = 0, 
check_‰ì
 = 0;

2666 
umem_vîify_t
 
umv
;

2668 i‡(
	`mdb_vªad
(&
umv
.
umv_ˇche
,  (umv.umv_cache),

2669 
addr
) == -1) {

2670 
	`mdb_w¨n
("couldn'àªad umem_ˇchê%p", 
addr
);

2671  (
DCMD_ERR
);

2674 
umv
.
umv_size
 = umv.
umv_ˇche
.
ˇche_bu·ag
 +

2675  (
umem_bu·ag_t
);

2676 
umv
.
umv_buf
 = 
	`mdb_Æloc
(umv.
umv_size
, 
UM_SLEEP
 | 
UM_GC
);

2677 
umv
.
umv_c‹ru±i⁄
 = 0;

2679 i‡((
umv
.
umv_ˇche
.
ˇche_Êags
 & 
UMF_REDZONE
)) {

2680 
check_Æloc
 = 1;

2681 i‡(
umv
.
umv_ˇche
.
ˇche_Êags
 & 
UMF_DEADBEEF
)

2682 
check_‰ì
 = 1;

2684 i‡(!(
Êags
 & 
DCMD_LOOP
)) {

2685 
	`mdb_w¨n
("cache %p (%s) doesÇot have "

2686 "ªdz⁄êcheckögÉ«bÀd\n", 
addr
,

2687 
umv
.
umv_ˇche
.
ˇche_«me
);

2689  (
DCMD_ERR
);

2692 i‡(
Êags
 & 
DCMD_LOOP
) {

2696 
umv
.
umv_besûít
 = 1;

2698 
	`mdb_¥ötf
("Summary for cache '%s'\n",

2699 
umv
.
umv_ˇche
.
ˇche_«me
);

2700 
	`mdb_öc_ödít
(2);

2701 
umv
.
umv_besûít
 = 0;

2704 i‡(
check_Æloc
)

2705 (Ë
	`mdb_pwÆk
("umem", 
vîify_Æloc
, &
umv
, 
addr
);

2706 i‡(
check_‰ì
)

2707 (Ë
	`mdb_pwÆk
("‰ìmem", 
vîify_‰ì
, &
umv
, 
addr
);

2709 i‡(
Êags
 & 
DCMD_LOOP
) {

2710 i‡(
umv
.
umv_c‹ru±i⁄
 == 0) {

2711 
	`mdb_¥ötf
("%-*s %?p clean\n",

2712 
UMEM_CACHE_NAMELEN
,

2713 
umv
.
umv_ˇche
.
ˇche_«me
, 
addr
);

2715 *
s
 = "";

2716 i‡(
umv
.
umv_c‹ru±i⁄
 > 1)

2717 
s
 = "s";

2719 
	`mdb_¥ötf
("%-*s %?p %d corrupt buffer%s\n",

2720 
UMEM_CACHE_NAMELEN
,

2721 
umv
.
umv_ˇche
.
ˇche_«me
, 
addr
,

2722 
umv
.
umv_c‹ru±i⁄
, 
s
);

2730 i‡(
umv
.
umv_c‹ru±i⁄
 == 0)

2731 
	`mdb_¥ötf
("clean\n");

2733 
	`mdb_dec_ödít
(2);

2741 
	`mdb_¥ötf
("%<u>%-*†%-?†%-20s%</b>\n", 
UMEM_CACHE_NAMELEN
,

2743 (Ë(
	`mdb_wÆk_dcmd
("umem_ˇche", "umem_vîify", 0, 
NULL
));

2746  (
DCMD_OK
);

2747 
	}
}

2749 
	svmem_node
 {

2750 
vmem_node
 *
	mvn_√xt
;

2751 
vmem_node
 *
	mvn_∑ª¡
;

2752 
vmem_node
 *
	mvn_siblög
;

2753 
vmem_node
 *
	mvn_chûdªn
;

2754 
uöçå_t
 
	mvn_addr
;

2755 
	mvn_m¨ked
;

2756 
vmem_t
 
	mvn_vmem
;

2757 } 
	tvmem_node_t
;

2759 
	svmem_wÆk
 {

2760 
vmem_node_t
 *
	mvw_roŸ
;

2761 
vmem_node_t
 *
	mvw_cuºít
;

2762 } 
	tvmem_wÆk_t
;

2765 
	$vmem_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

2767 
uöçå_t
 
vaddr
, 
∑ddr
;

2768 
vmem_node_t
 *
hód
 = 
NULL
, *
roŸ
 = NULL, *
cuºít
 = NULL, *
∑ª¡
, *
vp
;

2769 
vmem_wÆk_t
 *
vw
;

2771 i‡(
	`umem_ªadv¨
(&
vaddr
, "vmem_list") == -1) {

2772 
	`mdb_w¨n
("couldn'tÑead 'vmem_list'");

2773  (
WALK_ERR
);

2776 
vaddr
 !
NULL
) {

2777 
vp
 = 
	`mdb_zÆloc
( (
vmem_node_t
), 
UM_SLEEP
);

2778 
vp
->
vn_addr
 = 
vaddr
;

2779 
vp
->
vn_√xt
 = 
hód
;

2780 
hód
 = 
vp
;

2782 i‡(
vaddr
 =
w•
->
wÆk_addr
)

2783 
cuºít
 = 
vp
;

2785 i‡(
	`mdb_vªad
(&
vp
->
vn_vmem
,  (
vmem_t
), 
vaddr
) == -1) {

2786 
	`mdb_w¨n
("couldn'àªad vmem_à© %p", 
vaddr
);

2787 
îr
;

2790 
vaddr
 = (
uöçå_t
)
vp
->
vn_vmem
.
vm_√xt
;

2793 
vp
 = 
hód
; v∞!
NULL
; v∞vp->
vn_√xt
) {

2795 i‡((
∑ddr
 = (
uöçå_t
)
vp
->
vn_vmem
.
vm_sour˚
Ë=
NULL
) {

2796 
vp
->
vn_siblög
 = 
roŸ
;

2797 
roŸ
 = 
vp
;

2801 
∑ª¡
 = 
hód
;Ö¨íà!
NULL
;Ö¨íà∑ª¡->
vn_√xt
) {

2802 i‡(
∑ª¡
->
vn_addr
 !
∑ddr
)

2804 
vp
->
vn_siblög
 = 
∑ª¡
->
vn_chûdªn
;

2805 
∑ª¡
->
vn_chûdªn
 = 
vp
;

2806 
vp
->
vn_∑ª¡
 = 
∑ª¡
;

2810 i‡(
∑ª¡
 =
NULL
) {

2811 
	`mdb_w¨n
("couldn't find %p'sÖarent (%p)\n",

2812 
vp
->
vn_addr
, 
∑ddr
);

2813 
îr
;

2817 
vw
 = 
	`mdb_zÆloc
( (
vmem_wÆk_t
), 
UM_SLEEP
);

2818 
vw
->
vw_roŸ
 = 
roŸ
;

2820 i‡(
cuºít
 !
NULL
)

2821 
vw
->
vw_cuºít
 = 
cuºít
;

2823 
vw
->
vw_cuºít
 = 
roŸ
;

2825 
w•
->
wÆk_d©a
 = 
vw
;

2826  (
WALK_NEXT
);

2827 
îr
:

2828 
vp
 = 
hód
; hód !
NULL
; vp = head) {

2829 
hód
 = 
vp
->
vn_√xt
;

2830 
	`mdb_‰ì
(
vp
,  (
vmem_node_t
));

2833  (
WALK_ERR
);

2834 
	}
}

2837 
	$vmem_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

2839 
vmem_wÆk_t
 *
vw
 = 
w•
->
wÆk_d©a
;

2840 
vmem_node_t
 *
vp
;

2841 
rvÆ
;

2843 i‡((
vp
 = 
vw
->
vw_cuºít
Ë=
NULL
)

2844  (
WALK_DONE
);

2846 
rvÆ
 = 
w•
->
	`wÆk_ˇŒback
(
vp
->
vn_addr
, &vp->
vn_vmem
, w•->
wÆk_cbd©a
);

2848 i‡(
vp
->
vn_chûdªn
 !
NULL
) {

2849 
vw
->
vw_cuºít
 = 
vp
->
vn_chûdªn
;

2850  (
rvÆ
);

2854 
vw
->
vw_cuºít
 = 
vp
->
vn_siblög
;

2855 
vp
 = vp->
vn_∑ª¡
;

2856 } 
vw
->
vw_cuºít
 =
NULL
 && 
vp
 != NULL);

2858  (
rvÆ
);

2859 
	}
}

2868 
	$vmem_po°fix_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

2870 
vmem_wÆk_t
 *
vw
 = 
w•
->
wÆk_d©a
;

2871 
vmem_node_t
 *
vp
 = 
vw
->
vw_cuºít
;

2872 
rvÆ
;

2881 i‡(
vp
->
vn_m¨ked
) {

2882 i‡(
vp
->
vn_siblög
 !
NULL
)

2883 
vp
 = vp->
vn_siblög
;

2884 i‡(
vp
->
vn_∑ª¡
 !
NULL
)

2885 
vp
 = vp->
vn_∑ª¡
;

2891  (
WALK_DONE
);

2898 
vp
->
vn_chûdªn
 !
NULL
 && !vp->vn_chûdªn->
vn_m¨ked
)

2899 
vp
 = vp->
vn_chûdªn
;

2901 
vp
->
vn_m¨ked
 = 1;

2902 
vw
->
vw_cuºít
 = 
vp
;

2903 
rvÆ
 = 
w•
->
	`wÆk_ˇŒback
(
vp
->
vn_addr
, &vp->
vn_vmem
, w•->
wÆk_cbd©a
);

2905  (
rvÆ
);

2906 
	}
}

2909 
	$vmem_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

2911 
vmem_wÆk_t
 *
vw
 = 
w•
->
wÆk_d©a
;

2912 
vmem_node_t
 *
roŸ
 = 
vw
->
vw_roŸ
;

2913 
d⁄e
;

2915 i‡(
roŸ
 =
NULL
)

2918 i‡((
vw
->
vw_roŸ
 = 
roŸ
->
vn_chûdªn
Ë!
NULL
)

2919 
	`vmem_wÆk_föi
(
w•
);

2921 
vw
->
vw_roŸ
 = 
roŸ
->
vn_siblög
;

2922 
d⁄e
 = (
roŸ
->
vn_siblög
 =
NULL
 &&ÑoŸ->
vn_∑ª¡
 == NULL);

2923 
	`mdb_‰ì
(
roŸ
,  (
vmem_node_t
));

2925 i‡(
d⁄e
) {

2926 
	`mdb_‰ì
(
vw
,  (
vmem_wÆk_t
));

2928 
	`vmem_wÆk_föi
(
w•
);

2930 
	}
}

2932 
	svmem_£g_wÆk
 {

2933 
uöt8_t
 
	mvsw_ty≥
;

2934 
uöçå_t
 
	mvsw_°¨t
;

2935 
uöçå_t
 
	mvsw_cuºít
;

2936 } 
	tvmem_£g_wÆk_t
;

2940 
	$vmem_£g_wÆk_comm⁄_öô
(
mdb_wÆk_°©e_t
 *
w•
, 
uöt8_t
 
ty≥
, *
«me
)

2942 
vmem_£g_wÆk_t
 *
vsw
;

2944 i‡(
w•
->
wÆk_addr
 =
NULL
) {

2945 
	`mdb_w¨n
("vmem_%†d€†nŸ suµ‹àglobÆ wÆks\n", 
«me
);

2946  (
WALK_ERR
);

2949 
w•
->
wÆk_d©a
 = 
vsw
 = 
	`mdb_Æloc
( (
vmem_£g_wÆk_t
), 
UM_SLEEP
);

2951 
vsw
->
vsw_ty≥
 = 
ty≥
;

2952 
vsw
->
vsw_°¨t
 = 
w•
->
wÆk_addr
 + 
	`OFFSETOF
(
vmem_t
, 
vm_£g0
);

2953 
vsw
->
vsw_cuºít
 = vsw->
vsw_°¨t
;

2955  (
WALK_NEXT
);

2956 
	}
}

2961 
	#VMEM_NONE
 0

	)

2964 
	$vmem_Æloc_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

2966  (
	`vmem_£g_wÆk_comm⁄_öô
(
w•
, 
VMEM_ALLOC
, "alloc"));

2967 
	}
}

2970 
	$vmem_‰ì_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

2972  (
	`vmem_£g_wÆk_comm⁄_öô
(
w•
, 
VMEM_FREE
, "free"));

2973 
	}
}

2976 
	$vmem_•™_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

2978  (
	`vmem_£g_wÆk_comm⁄_öô
(
w•
, 
VMEM_SPAN
, "span"));

2979 
	}
}

2982 
	$vmem_£g_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
)

2984  (
	`vmem_£g_wÆk_comm⁄_öô
(
w•
, 
VMEM_NONE
, "seg"));

2985 
	}
}

2988 
	$vmem_£g_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
)

2990 
vmem_£g_t
 
£g
;

2991 
vmem_£g_wÆk_t
 *
vsw
 = 
w•
->
wÆk_d©a
;

2992 
uöçå_t
 
addr
 = 
vsw
->
vsw_cuºít
;

2993 
size_t
 
£g_size
 = 0;

2994 
rvÆ
;

2996 i‡(!
£g_size
) {

2997 i‡(
	`umem_ªadv¨
(&
£g_size
, "vmem_seg_size") == -1) {

2998 
	`mdb_w¨n
("failedÅoÑead 'vmem_seg_size'");

2999 
£g_size
 =  (
vmem_£g_t
);

3003 i‡(
£g_size
 <  (
£g
))

3004 
	`bzîo
((
ˇddr_t
)&
£g
 + 
£g_size
,  (seg) - seg_size);

3006 i‡(
	`mdb_vªad
(&
£g
, 
£g_size
, 
addr
) == -1) {

3007 
	`mdb_w¨n
("couldn'àªad vmem_£gáà%p", 
addr
);

3008  (
WALK_ERR
);

3011 
vsw
->
vsw_cuºít
 = (
uöçå_t
)
£g
.
vs_™ext
;

3012 i‡(
vsw
->
vsw_ty≥
 !
VMEM_NONE
 && 
£g
.
vs_ty≥
 != vsw->vsw_type) {

3013 
rvÆ
 = 
WALK_NEXT
;

3015 
rvÆ
 = 
w•
->
	`wÆk_ˇŒback
(
addr
, &
£g
, w•->
wÆk_cbd©a
);

3018 i‡(
vsw
->
vsw_cuºít
 =vsw->
vsw_°¨t
)

3019  (
WALK_DONE
);

3021  (
rvÆ
);

3022 
	}
}

3025 
	$vmem_£g_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
)

3027 
vmem_£g_wÆk_t
 *
vsw
 = 
w•
->
wÆk_d©a
;

3029 
	`mdb_‰ì
(
vsw
,  (
vmem_£g_wÆk_t
));

3030 
	}
}

3032 
	#VMEM_NAMEWIDTH
 22

	)

3035 
	$vmem
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

3037 
vmem_t
 
v
, 
∑ª¡
;

3038 
uöçå_t
 
∑ddr
;

3039 
idít
 = 0;

3040 
c
[
VMEM_NAMEWIDTH
];

3042 i‡(!(
Êags
 & 
DCMD_ADDRSPEC
)) {

3043 i‡(
	`mdb_wÆk_dcmd
("vmem", "vmem", 
¨gc
, 
¨gv
) == -1) {

3044 
	`mdb_w¨n
("can't walk vmem");

3045  (
DCMD_ERR
);

3047  (
DCMD_OK
);

3050 i‡(
	`DCMD_HDRSPEC
(
Êags
))

3051 
	`mdb_¥ötf
("%-?s %-*s %10s %12s %9s %5s\n",

3052 "ADDR", 
VMEM_NAMEWIDTH
, "NAME", "INUSE",

3055 i‡(
	`mdb_vªad
(&
v
,  (v), 
addr
) == -1) {

3056 
	`mdb_w¨n
("couldn'àªad vmemáà%p", 
addr
);

3057  (
DCMD_ERR
);

3060 
∑ddr
 = (
uöçå_t
)
v
.
vm_sour˚
;Öadd∏!
NULL
; 
idít
 += 2) {

3061 i‡(
	`mdb_vªad
(&
∑ª¡
,  (∑ª¡), 
∑ddr
) == -1) {

3062 
	`mdb_w¨n
("couldn'àåa˚ %p'†™˚°ry", 
addr
);

3063 
idít
 = 0;

3066 
∑ddr
 = (
uöçå_t
)
∑ª¡
.
vm_sour˚
;

3069 (Ë
	`mdb_¢¥ötf
(
c
, 
VMEM_NAMEWIDTH
, "%*s%s", 
idít
, "", 
v
.
vm_«me
);

3071 
	`mdb_¥ötf
("%0?p %-*s %10llu %12llu %9llu %5llu\n",

3072 
addr
, 
VMEM_NAMEWIDTH
, 
c
,

3073 
v
.
vm_k°©
.
vk_mem_öu£
, v.vm_k°©.
vk_mem_tŸÆ
,

3074 
v
.
vm_k°©
.
vk_Æloc
, v.vm_k°©.
vk_Áû
);

3076  (
DCMD_OK
);

3077 
	}
}

3080 
	$vmem_£g_hñp
()

3082 
	`mdb_¥ötf
("%s\n",

3088 
	`mdb_dec_ödít
(2);

3089 
	`mdb_¥ötf
("%<b>OPTIONS%</b>\n");

3090 
	`mdb_öc_ödít
(2);

3091 
	`mdb_¥ötf
("%s",

3109 
	}
}

3114 
	$vmem_£g
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

3116 
vmem_£g_t
 
vs
;

3117 
uöçå_t
 *
°k
 = 
vs
.
vs_°ack
;

3118 
uöçå_t
 
sz
;

3119 
uöt8_t
 
t
;

3120 c⁄° *
ty≥
 = 
NULL
;

3121 
GElf_Sym
 
sym
;

3122 
c
[
MDB_SYM_NAMLEN
];

3123 
no_debug
;

3124 
i
;

3125 
dïth
;

3126 
uöçå_t
 
œddr
, 
haddr
;

3128 
uöçå_t
 
ˇŒî
 = 
NULL
, 
thªad
 = NULL;

3129 
uöçå_t
 
mösize
 = 0, 
maxsize
 = 0;

3131 
hπime_t
 
óæõ°
 = 0, 
œã°
 = 0;

3133 
uöt_t
 
size
 = 0;

3134 
uöt_t
 
vîbo£
 = 0;

3136 i‡(!(
Êags
 & 
DCMD_ADDRSPEC
))

3137  (
DCMD_USAGE
);

3139 i‡(
	`mdb_gë›ts
(
¨gc
, 
¨gv
,

3140 'c', 
MDB_OPT_UINTPTR
, &
ˇŒî
,

3141 'e', 
MDB_OPT_UINT64
, &
óæõ°
,

3142 'l', 
MDB_OPT_UINT64
, &
œã°
,

3143 's', 
MDB_OPT_SETBITS
, 
TRUE
, &
size
,

3144 'm', 
MDB_OPT_UINTPTR
, &
mösize
,

3145 'M', 
MDB_OPT_UINTPTR
, &
maxsize
,

3146 't', 
MDB_OPT_UINTPTR
, &
thªad
,

3147 'T', 
MDB_OPT_STR
, &
ty≥
,

3148 'v', 
MDB_OPT_SETBITS
, 
TRUE
, &
vîbo£
,

3149 
NULL
Ë!
¨gc
)

3150  (
DCMD_USAGE
);

3152 i‡(
	`DCMD_HDRSPEC
(
Êags
Ë&& !(Êag†& 
DCMD_PIPE_OUT
)) {

3153 i‡(
vîbo£
) {

3154 
	`mdb_¥ötf
("%16s %4s %16s %16s %16s\n"

3159 
	`mdb_¥ötf
("%?s %4s %?s %?s %s\n", "ADDR", "TYPE",

3160 "START", 
size
? "SIZE" : "END", "WHO");

3164 i‡(
	`mdb_vªad
(&
vs
,  (vs), 
addr
) == -1) {

3165 
	`mdb_w¨n
("couldn'àªad vmem_£gáà%p", 
addr
);

3166  (
DCMD_ERR
);

3169 i‡(
ty≥
 !
NULL
) {

3170 i‡(
	`°rcmp
(
ty≥
, "ALLC") == 0 || strcmp(type, "ALLOC") == 0)

3171 
t
 = 
VMEM_ALLOC
;

3172 i‡(
	`°rcmp
(
ty≥
, "FREE") == 0)

3173 
t
 = 
VMEM_FREE
;

3174 i‡(
	`°rcmp
(
ty≥
, "SPAN") == 0)

3175 
t
 = 
VMEM_SPAN
;

3176 i‡(
	`°rcmp
(
ty≥
, "ROTR") == 0 ||

3177 
	`°rcmp
(
ty≥
, "ROTOR") == 0)

3178 
t
 = 
VMEM_ROTOR
;

3179 i‡(
	`°rcmp
(
ty≥
, "WLKR") == 0 ||

3180 
	`°rcmp
(
ty≥
, "WALKER") == 0)

3181 
t
 = 
VMEM_WALKER
;

3183 
	`mdb_w¨n
("\"%s\" isÇotáÑecognized vmem_segÅype\n",

3184 
ty≥
);

3185  (
DCMD_ERR
);

3188 i‡(
vs
.
vs_ty≥
 !
t
)

3189  (
DCMD_OK
);

3192 
sz
 = 
vs
.
vs_íd
 - vs.
vs_°¨t
;

3194 i‡(
mösize
 !0 && 
sz
 < minsize)

3195  (
DCMD_OK
);

3197 i‡(
maxsize
 !0 && 
sz
 > maxsize)

3198  (
DCMD_OK
);

3200 
t
 = 
vs
.
vs_ty≥
;

3201 
dïth
 = 
vs
.
vs_dïth
;

3206 
no_debug
 = (
t
 !
VMEM_ALLOC
) ||

3207 (
dïth
 =0 || dïth > 
VMEM_STACK_DEPTH
);

3209 i‡(
no_debug
) {

3210 i‡(
ˇŒî
 !
NULL
 || 
thªad
 !NULL || 
óæõ°
 != 0 ||

3211 
œã°
 != 0)

3212  (
DCMD_OK
);

3214 i‡(
ˇŒî
 !
NULL
) {

3215 
œddr
 = 
ˇŒî
;

3216 
haddr
 = 
ˇŒî
 +  (caller);

3218 i‡(
	`mdb_lookup_by_addr
(
ˇŒî
, 
MDB_SYM_FUZZY
, 
c
,

3219  (
c
), &
sym
) != -1 &&

3220 
ˇŒî
 =(
uöçå_t
)
sym
.
°_vÆue
) {

3225 
œddr
 = (
uöçå_t
)
sym
.
°_vÆue
;

3226 
haddr
 = (
uöçå_t
)
sym
.
°_vÆue
 + sym.
°_size
;

3229 
i
 = 0; i < 
dïth
; i++)

3230 i‡(
vs
.
vs_°ack
[
i
] >
œddr
 &&

3231 
vs
.
vs_°ack
[
i
] < 
haddr
)

3234 i‡(
i
 =
dïth
)

3235  (
DCMD_OK
);

3238 i‡(
thªad
 !
NULL
 && (
uöçå_t
)
vs
.
vs_thªad
 !=Åhread)

3239  (
DCMD_OK
);

3241 i‡(
óæõ°
 !0 && 
vs
.
vs_time°amp
 <Éarliest)

3242  (
DCMD_OK
);

3244 i‡(
œã°
 !0 && 
vs
.
vs_time°amp
 >Üatest)

3245  (
DCMD_OK
);

3248 
ty≥
 = (
t
 =
VMEM_ALLOC
 ? "ALLC" :

3249 
t
 =
VMEM_FREE
 ? "FREE" :

3250 
t
 =
VMEM_SPAN
 ? "SPAN" :

3251 
t
 =
VMEM_ROTOR
 ? "ROTR" :

3252 
t
 =
VMEM_WALKER
 ? "WLKR" :

3255 i‡(
Êags
 & 
DCMD_PIPE_OUT
) {

3256 
	`mdb_¥ötf
("%#r\n", 
addr
);

3257  (
DCMD_OK
);

3260 i‡(
vîbo£
) {

3261 
	`mdb_¥ötf
("%<b>%16p%</b> %4s %16p %16p %16d\n",

3262 
addr
, 
ty≥
, 
vs
.
vs_°¨t
, vs.
vs_íd
, 
sz
);

3264 i‡(
no_debug
)

3265  (
DCMD_OK
);

3267 
	`mdb_¥ötf
("%16s %4s %16d %16llx\n",

3268 "", "", 
vs
.
vs_thªad
, vs.
vs_time°amp
);

3270 
	`mdb_öc_ödít
(17);

3271 
i
 = 0; i < 
dïth
; i++) {

3272 
	`mdb_¥ötf
("%a\n", 
°k
[
i
]);

3274 
	`mdb_dec_ödít
(17);

3275 
	`mdb_¥ötf
("\n");

3277 
	`mdb_¥ötf
("%0?∞%4†%0?∞%0?p", 
addr
, 
ty≥
,

3278 
vs
.
vs_°¨t
, 
size
? 
sz
 : vs.
vs_íd
);

3280 i‡(
no_debug
) {

3281 
	`mdb_¥ötf
("\n");

3282  (
DCMD_OK
);

3285 
i
 = 0; i < 
dïth
; i++) {

3286 i‡(
	`mdb_lookup_by_addr
(
°k
[
i
], 
MDB_SYM_FUZZY
,

3287 
c
,  (c), &
sym
) == -1)

3289 i‡(
	`is_umem_sym
(
c
, "vmem_"))

3293 
	`mdb_¥ötf
(" %a\n", 
°k
[
i
]);

3295  (
DCMD_OK
);

3296 
	}
}

3300 
	$showbc
(
uöçå_t
 
addr
, c⁄° 
umem_buf˘l_audô_t
 *
b˝
, 
hπime_t
 *
√we°
)

3302 
«me
[
UMEM_CACHE_NAMELEN
 + 1];

3303 
hπime_t
 
dñè
;

3304 
i
, 
dïth
;

3306 i‡(
b˝
->
bc_time°amp
 == 0)

3307  (
WALK_DONE
);

3309 i‡(*
√we°
 == 0)

3310 *
√we°
 = 
b˝
->
bc_time°amp
;

3312 
dñè
 = *
√we°
 - 
b˝
->
bc_time°amp
;

3313 
dïth
 = 
	`MIN
(
b˝
->
bc_dïth
, 
umem_°ack_dïth
);

3315 i‡(
	`mdb_ªad°r
(
«me
,  («me), (
uöçå_t
)

3316 &
b˝
->
bc_ˇche
->
ˇche_«me
) <= 0)

3317 (Ë
	`mdb_¢¥ötf
(
«me
,  («me), "%a", 
b˝
->
bc_ˇche
);

3319 
	`mdb_¥ötf
("\nT-%lld.%09lldáddr=%p %s\n",

3320 
dñè
 / 
NANOSEC
, dñè % NANOSEC, 
b˝
->
bc_addr
, 
«me
);

3322 
i
 = 0; i < 
dïth
; i++)

3323 
	`mdb_¥ötf
("\à%a\n", 
b˝
->
bc_°ack
[
i
]);

3325  (
WALK_NEXT
);

3326 
	}
}

3329 
	$umÆog
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

3331 c⁄° *
log«me
 = "umem_transaction_log";

3332 
hπime_t
 
√we°
 = 0;

3334 i‡((
Êags
 & 
DCMD_ADDRSPEC
Ë|| 
¨gc
 > 1)

3335  (
DCMD_USAGE
);

3337 i‡(
¨gc
 > 0) {

3338 i‡(
¨gv
->
a_ty≥
 !
MDB_TYPE_STRING
)

3339  (
DCMD_USAGE
);

3340 i‡(
	`°rcmp
(
¨gv
->
a_un
.
a_°r
, "fail") == 0)

3341 
log«me
 = "umem_failure_log";

3342 i‡(
	`°rcmp
(
¨gv
->
a_un
.
a_°r
, "slab") == 0)

3343 
log«me
 = "umem_slab_log";

3345  (
DCMD_USAGE
);

3348 i‡(
	`umem_ªadv¨
(&
addr
, 
log«me
) == -1) {

3349 
	`mdb_w¨n
("failedÅoÑead %sÜog headerÖointer");

3350  (
DCMD_ERR
);

3353 i‡(
	`mdb_pwÆk
("umem_log", (
mdb_wÆk_cb_t
)
showbc
, &
√we°
, 
addr
) == -1) {

3354 
	`mdb_w¨n
("failedÅo walk umemÜog");

3355  (
DCMD_ERR
);

3358  (
DCMD_OK
);

3359 
	}
}

3368 
	sum˛i°
 {

3369 c⁄° *
	mumc_«me
;

3370 
uöçå_t
 *
	mumc_ˇches
;

3371 
	mumc_√Àms
;

3372 
	mumc_size
;

3373 } 
	tum˛i°_t
;

3376 
	$umc_add
(
uöçå_t
 
addr
, c⁄° 
umem_ˇche_t
 *
˝
, 
um˛i°_t
 *
umc
)

3378 *
p
;

3379 
s
;

3381 i‡(
umc
->
umc_«me
 =
NULL
 ||

3382 
	`°rcmp
(
˝
->
ˇche_«me
, 
umc
->
umc_«me
) == 0) {

3387 i‡(
umc
->
umc_√Àms
 >umc->
umc_size
) {

3388 
s
 = 
umc
->
umc_size
 ? umc->umc_size * 2 : 256;

3389 
p
 = 
	`mdb_Æloc
( (
uöçå_t
Ë* 
s
, 
UM_SLEEP
 | 
UM_GC
);

3391 
	`bc›y
(
umc
->
umc_ˇches
, 
p
,

3392  (
uöçå_t
Ë* 
umc
->
umc_size
);

3394 
umc
->
umc_ˇches
 = 
p
;

3395 
umc
->
umc_size
 = 
s
;

3398 
umc
->
umc_ˇches
[umc->
umc_√Àms
++] = 
addr
;

3399  (
umc
->
umc_«me
 ? 
WALK_DONE
 : 
WALK_NEXT
);

3402  (
WALK_NEXT
);

3403 
	}
}

3413 
	sumow√r
 {

3414 
umow√r
 *
	mumo_hód
;

3415 
umow√r
 *
	mumo_√xt
;

3416 
size_t
 
	mumo_sig«tuª
;

3417 
uöt_t
 
	mumo_num
;

3418 
size_t
 
	mumo_d©a_size
;

3419 
size_t
 
	mumo_tŸÆ_size
;

3420 
	mumo_dïth
;

3421 
uöçå_t
 *
	mumo_°ack
;

3422 } 
	tumow√r_t
;

3424 
	sumu£rs
 {

3425 c⁄° 
umem_ˇche_t
 *
	mumu_ˇche
;

3426 
umow√r_t
 *
	mumu_hash
;

3427 
uöçå_t
 *
	mumu_°acks
;

3428 
	mumu_√Àms
;

3429 
	mumu_size
;

3430 } 
	tumu£rs_t
;

3433 
	$umu_add
(
umu£rs_t
 *
umu
, c⁄° 
umem_buf˘l_audô_t
 *
b˝
,

3434 
size_t
 
size
, size_à
d©a_size
)

3436 
i
, 
dïth
 = 
	`MIN
(
b˝
->
bc_dïth
, 
umem_°ack_dïth
);

3437 
size_t
 
buckë
, 
sig«tuª
 = 
d©a_size
;

3438 
umow√r_t
 *
umo
, *
um€nd
;

3443 i‡(
umu
->
umu_√Àms
 >umu->
umu_size
) {

3444 
s
 = 
umu
->
umu_size
 ? umu->umu_size * 2 : 1024;

3445 
size_t
 
umow√r_size
 =  (
umow√r_t
);

3446 
size_t
 
åa˚_size
 = 
umem_°ack_dïth
 *  (
uöçå_t
);

3447 
uöçå_t
 *
√w_°acks
;

3449 
umo
 = 
	`mdb_Æloc
(
umow√r_size
 * 
s
, 
UM_SLEEP
 | 
UM_GC
);

3450 
√w_°acks
 = 
	`mdb_Æloc
(
åa˚_size
 * 
s
, 
UM_SLEEP
 | 
UM_GC
);

3452 
	`bc›y
(
umu
->
umu_hash
, 
umo
, 
umow√r_size
 * umu->
umu_size
);

3453 
	`bc›y
(
umu
->
umu_°acks
, 
√w_°acks
, 
åa˚_size
 * umu->
umu_size
);

3454 
umu
->
umu_hash
 = 
umo
;

3455 
umu
->
umu_°acks
 = 
√w_°acks
;

3456 
umu
->
umu_size
 = 
s
;

3458 
um€nd
 = 
umu
->
umu_hash
 + umu->
umu_size
;

3459 
umo
 = 
umu
->
umu_hash
; umÿ< 
um€nd
; umo++) {

3460 
umo
->
umo_hód
 = 
NULL
;

3461 
umo
->
umo_°ack
 = &
umu
->
umu_°acks
[

3462 
umem_°ack_dïth
 * (
umo
 - 
umu
->
umu_hash
)];

3465 
um€nd
 = 
umu
->
umu_hash
 + umu->
umu_√Àms
;

3466 
umo
 = 
umu
->
umu_hash
; umÿ< 
um€nd
; umo++) {

3467 
buckë
 = 
umo
->
umo_sig«tuª
 & (
umu
->
umu_size
 - 1);

3468 
umo
->
umo_√xt
 = 
umu
->
umu_hash
[
buckë
].
umo_hód
;

3469 
umu
->
umu_hash
[
buckë
].
umo_hód
 = 
umo
;

3477 
i
 = 0; i < 
dïth
; i++)

3478 
sig«tuª
 +
b˝
->
bc_°ack
[
i
];

3480 
buckë
 = 
sig«tuª
 & (
umu
->
umu_size
 - 1);

3482 
umo
 = 
umu
->
umu_hash
[
buckë
].
umo_hód
; umo; umÿumo->
umo_√xt
) {

3483 i‡(
umo
->
umo_sig«tuª
 =
sig«tuª
) {

3484 
size_t
 
dif„ªn˚
 = 0;

3486 
dif„ªn˚
 |
umo
->
umo_d©a_size
 - 
d©a_size
;

3487 
dif„ªn˚
 |
umo
->
umo_dïth
 - 
dïth
;

3489 
i
 = 0; i < 
dïth
; i++) {

3490 
dif„ªn˚
 |
umo
->
umo_°ack
[
i
] -

3491 
b˝
->
bc_°ack
[
i
];

3494 i‡(
dif„ªn˚
 == 0) {

3495 
umo
->
umo_tŸÆ_size
 +
size
;

3496 
umo
->
umo_num
++;

3506 
umo
 = &
umu
->
umu_hash
[umu->
umu_√Àms
++];

3507 
umo
->
umo_√xt
 = 
umu
->
umu_hash
[
buckë
].
umo_hód
;

3508 
umu
->
umu_hash
[
buckë
].
umo_hód
 = 
umo
;

3510 
umo
->
umo_sig«tuª
 = 
sig«tuª
;

3511 
umo
->
umo_num
 = 1;

3512 
umo
->
umo_d©a_size
 = 
d©a_size
;

3513 
umo
->
umo_tŸÆ_size
 = 
size
;

3514 
umo
->
umo_dïth
 = 
dïth
;

3516 
i
 = 0; i < 
dïth
; i++)

3517 
umo
->
umo_°ack
[
i
] = 
b˝
->
bc_°ack
[i];

3518 
	}
}

3526 
	$umau£1
(
uöçå_t
 
addr
, c⁄° 
umem_buf˘l_audô_t
 *
b˝
, 
umu£rs_t
 *
umu
)

3528 c⁄° 
umem_ˇche_t
 *
˝
 = 
umu
->
umu_ˇche
;

3530 
	`umu_add
(
umu
, 
b˝
, 
˝
->
ˇche_bufsize
, cp->cache_bufsize);

3531  (
WALK_NEXT
);

3532 
	}
}

3539 
	$umau£2
(
uöçå_t
 
addr
, c⁄° 
umem_buf˘l_audô_t
 *
b˝
, 
umu£rs_t
 *
umu
)

3541 
i
, 
dïth
 = 
	`MIN
(
b˝
->
bc_dïth
, 
umem_°ack_dïth
);

3542 c⁄° 
umem_ˇche_t
 *
˝
 = 
umu
->
umu_ˇche
;

3544 
	`mdb_¥ötf
("size %d,áddr %p,Åhread %p, cache %s\n",

3545 
˝
->
ˇche_bufsize
, 
addr
, 
b˝
->
bc_thªad
, cp->
ˇche_«me
);

3547 
i
 = 0; i < 
dïth
; i++)

3548 
	`mdb_¥ötf
("\à%a\n", 
b˝
->
bc_°ack
[
i
]);

3550 
	`umu_add
(
umu
, 
b˝
, 
˝
->
ˇche_bufsize
, cp->cache_bufsize);

3551  (
WALK_NEXT
);

3552 
	}
}

3558 
	$umow√rcmp
(c⁄° *
Õ
, c⁄° *
Ω
)

3560 c⁄° 
umow√r_t
 *
lhs
 = 
Õ
;

3561 c⁄° 
umow√r_t
 *
rhs
 = 
Ω
;

3563  (
rhs
->
umo_tŸÆ_size
 - 
lhs
->umo_total_size);

3564 
	}
}

3574 
	$umau£rs
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

3576 
mem_thªshﬁd
 = 8192;

3577 
˙t_thªshﬁd
 = 100;

3578 
audôed_ˇches
 = 0;

3579 
do_Æl_ˇches
 = 1;

3580 
›t_e
 = 
FALSE
;

3581 
›t_f
 = 
FALSE
;

3583 
mdb_wÆk_cb_t
 
ˇŒback
 = (mdb_wÆk_cb_t)
umau£1
;

3584 
umow√r_t
 *
umo
, *
um€nd
;

3585 
i
, 
€Àms
;

3587 
um˛i°_t
 
umc
;

3588 
umu£rs_t
 
umu
;

3590 i‡(
Êags
 & 
DCMD_ADDRSPEC
)

3591  (
DCMD_USAGE
);

3593 
	`bzîo
(&
umc
,  (umc));

3594 
	`bzîo
(&
umu
,  (umu));

3596 (
i
 = 
	`mdb_gë›ts
(
¨gc
, 
¨gv
,

3597 'e', 
MDB_OPT_SETBITS
, 
TRUE
, &
›t_e
,

3598 'f', 
MDB_OPT_SETBITS
, 
TRUE
, &
›t_f
, 
NULL
)Ë!
¨gc
) {

3600 
¨gv
 +
i
;

3601 
¨gc
 -
i
;

3603 i‡(
¨gv
->
a_ty≥
 !
MDB_TYPE_STRING
 || *¨gv->
a_un
.
a_°r
 == '-')

3604  (
DCMD_USAGE
);

3606 
€Àms
 = 
umc
.
umc_√Àms
;

3607 
umc
.
umc_«me
 = 
¨gv
->
a_un
.
a_°r
;

3608 (Ë
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
umc_add
, &
umc
);

3610 i‡(
umc
.
umc_√Àms
 =
€Àms
) {

3611 
	`mdb_w¨n
("unknow¿umem cache: %s\n", 
umc
.
umc_«me
);

3612  (
DCMD_ERR
);

3615 
do_Æl_ˇches
 = 0;

3616 
¨gv
++;

3617 
¨gc
--;

3620 i‡(
›t_e
)

3621 
mem_thªshﬁd
 = 
˙t_thªshﬁd
 = 0;

3623 i‡(
›t_f
)

3624 
ˇŒback
 = (
mdb_wÆk_cb_t
)
umau£2
;

3626 i‡(
do_Æl_ˇches
) {

3627 
umc
.
umc_«me
 = 
NULL
;

3628 (Ë
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
umc_add
, &
umc
);

3631 
i
 = 0; i < 
umc
.
umc_√Àms
; i++) {

3632 
uöçå_t
 
˝
 = 
umc
.
umc_ˇches
[
i
];

3633 
umem_ˇche_t
 
c
;

3635 i‡(
	`mdb_vªad
(&
c
,  (c), 
˝
) == -1) {

3636 
	`mdb_w¨n
("ÁûedÅÿªad cachê© %p", 
˝
);

3640 i‡(!(
c
.
ˇche_Êags
 & 
UMF_AUDIT
)) {

3641 i‡(!
do_Æl_ˇches
) {

3642 
	`mdb_w¨n
("UMF_AUDIT isÇotÉnabled for %s\n",

3643 
c
.
ˇche_«me
);

3648 
umu
.
umu_ˇche
 = &
c
;

3649 (Ë
	`mdb_pwÆk
("buf˘l", 
ˇŒback
, &
umu
, 
˝
);

3650 
audôed_ˇches
++;

3653 i‡(
audôed_ˇches
 =0 && 
do_Æl_ˇches
) {

3654 
	`mdb_w¨n
("UMF_AUDIT isÇotÉnabled forány caches\n");

3655  (
DCMD_ERR
);

3658 
	`qs‹t
(
umu
.
umu_hash
, umu.
umu_√Àms
,  (
umow√r_t
), 
umow√rcmp
);

3659 
um€nd
 = 
umu
.
umu_hash
 + umu.
umu_√Àms
;

3661 
umo
 = 
umu
.
umu_hash
; umÿ< 
um€nd
; umo++) {

3662 i‡(
umo
->
umo_tŸÆ_size
 < 
mem_thªshﬁd
 &&

3663 
umo
->
umo_num
 < 
˙t_thªshﬁd
)

3665 
	`mdb_¥ötf
("%lu bytes for %uállocations with data size %lu:\n",

3666 
umo
->
umo_tŸÆ_size
, umo->
umo_num
, umo->
umo_d©a_size
);

3667 
i
 = 0; i < 
umo
->
umo_dïth
; i++)

3668 
	`mdb_¥ötf
("\à%a\n", 
umo
->
umo_°ack
[
i
]);

3671  (
DCMD_OK
);

3672 
	}
}

3674 
	smÆloc_d©a
 {

3675 
uöt32_t
 
	mmÆloc_size
;

3676 
uöt32_t
 
	mmÆloc_°©
;

3679 #ifde‡
_LP64


3680 
	#UMI_MAX_BUCKET
 (
UMEM_MAXBUF
 - 2* (
mÆloc_d©a
))

	)

3682 
	#UMI_MAX_BUCKET
 (
UMEM_MAXBUF
 -  (
mÆloc_d©a
))

	)

3685 
	sumem_mÆloc_öfo
 {

3686 
size_t
 
	mum_tŸÆ
;

3687 
size_t
 
	mum_mÆloc
;

3688 
size_t
 
	mum_mÆloc_size
;

3689 
size_t
 
	mum_mÆloc_ovîhód
;

3691 
umem_ˇche_t
 *
	mum_˝
;

3693 
uöt_t
 *
	mum_buckë
;

3694 } 
	tumem_mÆloc_öfo_t
;

3697 
	$umem_mÆloc_¥öt_di°
(
uöt_t
 *
um_buckë
, 
size_t
 
mömÆloc
, size_à
maxmÆloc
,

3698 
size_t
 
maxbuckës
, size_à
möbuckësize
, 
geomëric
)

3700 
uöt64_t
 
um_mÆloc
;

3701 
möb
 = -1;

3702 
maxb
 = -1;

3703 
buckës
;

3704 
nbucks
;

3705 
i
;

3706 
b
;

3707 c⁄° *
di°¨øy
;

3709 
möb
 = ()
mömÆloc
;

3710 
maxb
 = ()
maxmÆloc
;

3712 
nbucks
 = 
buckës
 = 
maxb
 - 
möb
 + 1;

3714 
um_mÆloc
 = 0;

3715 
b
 = 
möb
; b <
maxb
; b++)

3716 
um_mÆloc
 +
um_buckë
[
b
];

3718 i‡(
maxbuckës
 != 0)

3719 
buckës
 = 
	`MIN
(buckës, 
maxbuckës
);

3721 i‡(
möbuckësize
 > 1) {

3722 
buckës
 = 
	`MIN
(buckës, 
nbucks
/
möbuckësize
);

3723 i‡(
buckës
 == 0) {

3724 
buckës
 = 1;

3725 
möbuckësize
 = 
nbucks
;

3729 i‡(
geomëric
)

3730 
di°¨øy
 = 
	`di°_geomëric
(
buckës
, 
möb
, 
maxb
, 
möbuckësize
);

3732 
di°¨øy
 = 
	`di°_löór
(
buckës
, 
möb
, 
maxb
);

3734 
	`di°_¥öt_hódî
("malloc size", 11, "count");

3735 
i
 = 0; i < 
buckës
; i++) {

3736 
	`di°_¥öt_buckë
(
di°¨øy
, 
i
, 
um_buckë
, 
um_mÆloc
, 11);

3738 
	`mdb_¥ötf
("\n");

3739 
	}
}

3783 
	$um_umem_buf„r_cb
(
uöçå_t
 
addr
, *
buf
, 
umem_mÆloc_öfo_t
 *
ump
)

3785 
mÆloc_d©a
 
md
;

3786 
size_t
 
m_addr
 = 
addr
;

3787 
size_t
 
ovîhód
 =  (
md
);

3788 
size_t
 
mÆlocsz
;

3790 
ump
->
um_tŸÆ
++;

3792 #ifde‡
_LP64


3793 i‡(
ump
->
um_˝
->
ˇche_bufsize
 > 
UMEM_SECOND_ALIGN
) {

3794 
m_addr
 +
ovîhód
;

3795 
ovîhód
 + (
md
);

3799 i‡(
	`mdb_vªad
(&
md
,  (md), 
m_addr
) == -1) {

3800 
	`mdb_w¨n
("u«bÀÅÿªad mÆlo¯hódîáà%p", 
m_addr
);

3801  (
WALK_NEXT
);

3804 
	`UMEM_MALLOC_DECODE
(
md
.
mÆloc_°©
, md.
mÆloc_size
)) {

3805 
MALLOC_MAGIC
:

3806 #ifde‡
_LP64


3807 
MALLOC_SECOND_MAGIC
:

3809 
mÆlocsz
 = 
md
.
mÆloc_size
 - 
ovîhód
;

3811 
ump
->
um_mÆloc
++;

3812 
ump
->
um_mÆloc_size
 +
mÆlocsz
;

3813 
ump
->
um_mÆloc_ovîhód
 +
ovîhód
;

3816 
ump
->
um_mÆloc_ovîhód
 +=

3817 
ump
->
um_˝
->
ˇche_chunksize
 - 
md
.
mÆloc_size
;

3819 i‡(
ump
->
um_buckë
 !
NULL
 && 
mÆlocsz
 <
UMI_MAX_BUCKET
)

3820 
ump
->
um_buckë
[
mÆlocsz
]++;

3827  (
WALK_NEXT
);

3828 
	}
}

3831 
	$gë_umem_Æloc_sizes
(**
out
, 
size_t
 *
out_num
)

3833 
GElf_Sym
 
sym
;

3835 i‡(
	`umem_lookup_by_«me
("umem_Æloc_sizes", &
sym
) == -1) {

3836 
	`mdb_w¨n
("unableÅoÜook up umem_alloc_sizes");

3840 *
out
 = 
	`mdb_Æloc
(
sym
.
°_size
, 
UM_SLEEP
 | 
UM_GC
);

3841 *
out_num
 = 
sym
.
°_size
 /  ();

3843 i‡(
	`mdb_vªad
(*
out
, 
sym
.
°_size
, sym.
°_vÆue
) == -1) {

3844 
	`mdb_w¨n
("u«bÀÅÿªad umem_Æloc_size†(%p)", 
sym
.
°_vÆue
);

3845 *
out
 = 
NULL
;

3850 
	}
}

3854 
	$um_umem_ˇche_cb
(
uöçå_t
 
addr
, 
umem_ˇche_t
 *
˝
, 
umem_mÆloc_öfo_t
 *
ump
)

3856 i‡(
	`°∫cmp
(
˝
->
ˇche_«me
, "umem_Æloc_", 
	`°æí
("umem_alloc_")) != 0)

3857  (
WALK_NEXT
);

3859 
ump
->
um_˝
 = 
˝
;

3861 i‡(
	`mdb_pwÆk
("umem", (
mdb_wÆk_cb_t
)
um_umem_buf„r_cb
, 
ump
, 
addr
) ==

3863 
	`mdb_w¨n
("ˇn'àwÆk 'umem' f‹ cachê%p", 
addr
);

3864  (
WALK_ERR
);

3867  (
WALK_NEXT
);

3868 
	}
}

3871 
	$umem_mÆloc_di°_hñp
()

3873 
	`mdb_¥ötf
("%s\n",

3875 
	`mdb_dec_ödít
(2);

3876 
	`mdb_¥ötf
("%<b>OPTIONS%</b>\n");

3877 
	`mdb_öc_ödít
(2);

3878 
	`mdb_¥ötf
("%s",

3885 
	}
}

3889 
	$umem_mÆloc_di°
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

3891 
umem_mÆloc_öfo_t
 
mi
;

3892 
uöt_t
 
geomëric
 = 0;

3893 
uöt_t
 
dump
 = 0;

3894 
size_t
 
maxbuckës
 = 0;

3895 
size_t
 
möbuckësize
 = 0;

3897 
size_t
 
möÆloc
 = 0;

3898 
size_t
 
maxÆloc
 = 
UMI_MAX_BUCKET
;

3900 i‡(
Êags
 & 
DCMD_ADDRSPEC
)

3901  (
DCMD_USAGE
);

3903 i‡(
	`mdb_gë›ts
(
¨gc
, 
¨gv
,

3904 'd', 
MDB_OPT_SETBITS
, 
TRUE
, &
dump
,

3905 'g', 
MDB_OPT_SETBITS
, 
TRUE
, &
geomëric
,

3906 'b', 
MDB_OPT_UINTPTR
, &
maxbuckës
,

3907 'B', 
MDB_OPT_UINTPTR
, &
möbuckësize
,

3908 0Ë!
¨gc
)

3909  (
DCMD_USAGE
);

3911 
	`bzîo
(&
mi
,  (mi));

3912 
mi
.
um_buckë
 = 
	`mdb_zÆloc
((
UMI_MAX_BUCKET
 + 1) *  (*mi.um_bucket),

3913 
UM_SLEEP
 | 
UM_GC
);

3915 i‡(
	`mdb_wÆk
("umem_ˇche", (
mdb_wÆk_cb_t
)
um_umem_ˇche_cb
,

3916 &
mi
) == -1) {

3917 
	`mdb_w¨n
("unableÅo walk 'umem_cache'");

3918  (
DCMD_ERR
);

3921 i‡(
dump
) {

3922 
i
;

3923 
i
 = 
möÆloc
; i <
maxÆloc
; i++)

3924 
	`mdb_¥ötf
("%d\t%d\n", 
i
, 
mi
.
um_buckë
[i]);

3926  (
DCMD_OK
);

3929 
	`umem_mÆloc_¥öt_di°
(
mi
.
um_buckë
, 
möÆloc
, 
maxÆloc
,

3930 
maxbuckës
, 
möbuckësize
, 
geomëric
);

3932  (
DCMD_OK
);

3933 
	}
}

3936 
	$umem_mÆloc_öfo_hñp
()

3938 
	`mdb_¥ötf
("%s\n",

3940 
	`mdb_dec_ödít
(2);

3941 
	`mdb_¥ötf
("%<b>OPTIONS%</b>\n");

3942 
	`mdb_öc_ödít
(2);

3943 
	`mdb_¥ötf
("%s",

3949 #i‚de‡
_KMDB


3953 
	}
}

3955 
	$umem_mÆloc_öfo
(
uöçå_t
 
addr
, 
uöt_t
 
Êags
, 
¨gc
, c⁄° 
mdb_¨g_t
 *
¨gv
)

3957 
umem_ˇche_t
 
c
;

3958 
umem_mÆloc_öfo_t
 
mi
;

3960 
skù
 = 0;

3962 
size_t
 
maxmÆloc
;

3963 
size_t
 
ovîhód
;

3964 
size_t
 
Æloˇãd
;

3965 
size_t
 
avg_mÆloc
;

3966 
size_t
 
ovîhód_p˘
;

3968 
uöt_t
 
vîbo£
 = 0;

3969 
uöt_t
 
dump
 = 0;

3970 
uöt_t
 
geomëric
 = 0;

3971 
size_t
 
maxbuckës
 = 0;

3972 
size_t
 
möbuckësize
 = 0;

3974 *
Æloc_sizes
;

3975 
idx
;

3976 
size_t
 
num
;

3977 
size_t
 
mömÆloc
;

3979 i‡(
	`mdb_gë›ts
(
¨gc
, 
¨gv
,

3980 'd', 
MDB_OPT_SETBITS
, 
TRUE
, &
dump
,

3981 'g', 
MDB_OPT_SETBITS
, 
TRUE
, &
geomëric
,

3982 'b', 
MDB_OPT_UINTPTR
, &
maxbuckës
,

3983 'B', 
MDB_OPT_UINTPTR
, &
möbuckësize
,

3984 0Ë!
¨gc
)

3985  (
DCMD_USAGE
);

3987 i‡(
dump
 || 
geomëric
 || (
maxbuckës
 !0Ë|| (
möbuckësize
 != 0))

3988 
vîbo£
 = 1;

3990 i‡(!(
Êags
 & 
DCMD_ADDRSPEC
)) {

3991 i‡(
	`mdb_wÆk_dcmd
("umem_cache", "umem_malloc_info",

3992 
¨gc
, 
¨gv
) == -1) {

3993 
	`mdb_w¨n
("can't walk umem_cache");

3994  (
DCMD_ERR
);

3996  (
DCMD_OK
);

3999 i‡(!
	`mdb_vªad
(&
c
,  (c), 
addr
)) {

4000 
	`mdb_w¨n
("u«bÀÅÿªad cachê© %p", 
addr
);

4001  (
DCMD_ERR
);

4004 i‡(
	`°∫cmp
(
c
.
ˇche_«me
, "umem_Æloc_", 
	`°æí
("umem_alloc_")) != 0) {

4005 i‡(!(
Êags
 & 
DCMD_LOOP
))

4006 
	`mdb_w¨n
("umem_malloc_info: cache \"%s\" isÇot used "

4007 "by mÆloc()\n", 
c
.
ˇche_«me
);

4008 
skù
 = 1;

4015 i‡((!
vîbo£
 && 
	`DCMD_HDRSPEC
(
Êags
)Ë|| (vîbo£ && !
skù
))

4016 
	`mdb_¥ötf
("%<ul>%-?s %6s %6s %8s %8s %10s %10s %6s%</ul>\n",

4020 i‡(
skù
)

4021  (
DCMD_OK
);

4023 
maxmÆloc
 = 
c
.
ˇche_bufsize
 -  (
mÆloc_d©a
);

4024 #ifde‡
_LP64


4025 i‡(
c
.
ˇche_bufsize
 > 
UMEM_SECOND_ALIGN
)

4026 
maxmÆloc
 - (
mÆloc_d©a
);

4029 
	`bzîo
(&
mi
,  (mi));

4030 
mi
.
um_˝
 = &
c
;

4031 i‡(
vîbo£
)

4032 
mi
.
um_buckë
 =

4033 
	`mdb_zÆloc
((
UMI_MAX_BUCKET
 + 1Ë*  (*
mi
.
um_buckë
),

4034 
UM_SLEEP
 | 
UM_GC
);

4036 i‡(
	`mdb_pwÆk
("umem", (
mdb_wÆk_cb_t
)
um_umem_buf„r_cb
, &
mi
, 
addr
) ==

4038 
	`mdb_w¨n
("can't walk 'umem'");

4039  (
DCMD_ERR
);

4042 
ovîhód
 = 
mi
.
um_mÆloc_ovîhód
;

4043 
Æloˇãd
 = 
mi
.
um_mÆloc_size
;

4046 i‡(
mi
.
um_mÆloc
 != 0)

4047 
avg_mÆloc
 = (
Æloˇãd
 + (
mi
.
um_mÆloc
 - 1)/2) / mi.um_malloc;

4049 
avg_mÆloc
 = 0;

4081 i‡(
mi
.
um_mÆloc
 != 0) {

4082 
umem_¶ab_t
 
¶ab
;

4083 
uöçå_t
 
ßddr
 = (uöçå_t)
c
.
ˇche_nuŒ¶ab
.
¶ab_√xt
;

4085 i‡(
	`mdb_vªad
(&
¶ab
,  (¶ab), 
ßddr
) == -1) {

4086 
	`mdb_w¨n
("u«bÀÅÿªad sœbáà%p\n", 
ßddr
);

4088 
chunks
 = 
¶ab
.
¶ab_chunks
;

4089 i‡(
chunks
 !0 && 
c
.
ˇche_chunksize
 != 0 &&

4090 
chunks
 <
c
.
ˇche_¶absize
 / c.
ˇche_chunksize
) {

4091 
uötmax_t
 
≥r¶ab
 =

4092 
c
.
ˇche_¶absize
 -

4093 (
c
.
ˇche_chunksize
 * 
chunks
);

4095 i‡(
c
.
ˇche_Êags
 & 
UMF_HASH
) {

4096 
≥r¶ab
 + (
umem_¶ab_t
) +

4097 
chunks
 *

4098 ((
c
.
ˇche_Êags
 & 
UMF_AUDIT
) ?

4099  (
umem_buf˘l_audô_t
) :

4100  (
umem_buf˘l_t
));

4102 
ovîhód
 +=

4103 (
≥r¶ab
 * (
uötmax_t
)
mi
.
um_mÆloc
)/
chunks
;

4105 
	`mdb_w¨n
("invalid #chunks (%d) in slab %p\n",

4106 
chunks
, 
ßddr
);

4111 i‡(
Æloˇãd
 != 0)

4112 
ovîhód_p˘
 = (1000ULL * 
ovîhód
Ë/ 
Æloˇãd
;

4114 
ovîhód_p˘
 = 0;

4116 
	`mdb_¥ötf
("%0?p %6ld %6ld %8ld %8ld %10ld %10ld %3ld.%01ld%%\n",

4117 
addr
, 
c
.
ˇche_bufsize
, 
maxmÆloc
,

4118 
mi
.
um_mÆloc
, 
avg_mÆloc
, 
Æloˇãd
, 
ovîhód
,

4119 
ovîhód_p˘
 / 10, overhead_pct % 10);

4121 i‡(!
vîbo£
)

4122  (
DCMD_OK
);

4124 i‡(!
dump
)

4125 
	`mdb_¥ötf
("\n");

4127 i‡(
	`gë_umem_Æloc_sizes
(&
Æloc_sizes
, &
num
) == -1)

4128  (
DCMD_ERR
);

4130 
idx
 = 0; idx < 
num
; idx++) {

4131 i‡(
Æloc_sizes
[
idx
] =
c
.
ˇche_bufsize
)

4133 i‡(
Æloc_sizes
[
idx
] == 0) {

4134 
idx
 = 
num
;

4138 i‡(
idx
 =
num
) {

4139 
	`mdb_w¨n
(

4141 
addr
, 
c
.
ˇche_bufsize
);

4142  (
DCMD_ERR
);

4145 
mömÆloc
 = (
idx
 =0)? 0 : 
Æloc_sizes
[idx - 1];

4146 i‡(
mömÆloc
 > 0) {

4147 #ifde‡
_LP64


4148 i‡(
mömÆloc
 > 
UMEM_SECOND_ALIGN
)

4149 
mömÆloc
 - (
mÆloc_d©a
);

4151 
mömÆloc
 - (
mÆloc_d©a
);

4152 
mömÆloc
 += 1;

4155 i‡(
dump
) {

4156 
idx
 = 
mömÆloc
; idx <
maxmÆloc
; idx++)

4157 
	`mdb_¥ötf
("%d\t%d\n", 
idx
, 
mi
.
um_buckë
[idx]);

4158 
	`mdb_¥ötf
("\n");

4160 
	`umem_mÆloc_¥öt_di°
(
mi
.
um_buckë
, 
mömÆloc
, 
maxmÆloc
,

4161 
maxbuckës
, 
möbuckësize
, 
geomëric
);

4164  (
DCMD_OK
);

4165 
	}
}

	@umem.h

26 #i‚def 
_MDBMOD_UMEM_H


27 
	#_MDBMOD_UMEM_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~<mdb/mdb_mod≠i.h
>

32 
	~<umem_im∂.h
>

34 #ifde‡
__˝lu•lus


38 
umem_ªady
;

39 
uöt32_t
 
umem_°ack_dïth
;

41 
umem_ˇche_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

42 
umem_ˇche_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

43 
umem_ˇche_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

45 
umem_˝u_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

46 
umem_˝u_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

47 
umem_˝u_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

49 
umem_˝u_ˇche_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

50 
umem_˝u_ˇche_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

52 
umem_¶ab_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

53 
umem_¶ab_wÆk_∑πül_öô
(
mdb_wÆk_°©e_t
 *);

54 
umem_¶ab_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

56 
umem_hash_wÆk_öô
(
mdb_wÆk_°©e_t
 *
w•
);

57 
umem_hash_wÆk_°ï
(
mdb_wÆk_°©e_t
 *
w•
);

58 
umem_hash_wÆk_föi
(
mdb_wÆk_°©e_t
 *
w•
);

60 
umem_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

61 
buf˘l_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

62 
‰ìmem_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

63 
‰ì˘l_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

65 
umem_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

66 
umem_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

68 
buf˘l_hi°‹y_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

69 
buf˘l_hi°‹y_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

70 
buf˘l_hi°‹y_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

72 
Ælocdby_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

73 
Ælocdby_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

74 
Ælocdby_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

76 
‰ìdby_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

77 
‰ìdby_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

78 
‰ìdby_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

80 
umem_log_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

81 
umem_log_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

82 
umem_log_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

84 
Ælocdby_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

85 
Ælocdby_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

86 
Ælocdby_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

88 
‰ìdby_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

89 
‰ìdby_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

90 
‰ìdby_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

92 
vmem_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

93 
vmem_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

94 
vmem_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

96 
vmem_po°fix_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

98 
vmem_£g_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

99 
vmem_£g_wÆk_°ï
(
mdb_wÆk_°©e_t
 *);

100 
vmem_£g_wÆk_föi
(
mdb_wÆk_°©e_t
 *);

102 
vmem_•™_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

103 
vmem_Æloc_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

104 
vmem_‰ì_wÆk_öô
(
mdb_wÆk_°©e_t
 *);

106 
Ælocdby
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

107 
buf˘l
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

108 
buf˘l_audô
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

109 
‰ìdby
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

110 
umÆog
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

111 
umau£rs
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

112 
umem_ˇche
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

113 
umem_log
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

114 
umem_mÆloc_di°
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

115 
umem_mÆloc_öfo
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

116 
umem_°©us
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

117 
umem_vîify
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

118 
umem_vîify_Æloc
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

119 
umem_vîify_‰ì
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

120 
vmem
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

121 
vmem_£g
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

122 
wh©is
(
uöçå_t
, 
uöt_t
, , c⁄° 
mdb_¨g_t
 *);

124 
buf˘l_hñp
();

125 
umem_mÆloc_di°_hñp
();

126 
umem_mÆloc_öfo_hñp
();

127 
vmem_£g_hñp
();

132 
umem_öô
();

133 
umem_gë_magsize
(c⁄° 
umem_ˇche_t
 *);

134 
size_t
 
umem_e°im©e_Æloˇãd
(
uöçå_t
, c⁄° 
umem_ˇche_t
 *);

136 #ifde‡
__˝lu•lus


	@umem_pagesize.h

27 #i‚def 
_UMEM_PAGESIZE_H


28 
	#_UMEM_PAGESIZE_H


	)

30 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

32 #ifdef 
__˝lu•lus


36 
size_t
 
umem_∑gesize
;

37 #unde‡
PAGESIZE


38 
	#PAGESIZE
 (
umem_∑gesize
)

	)

40 #ifdef 
__˝lu•lus


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

146 
	#°dö
 
°dö


	)

147 
	#°dout
 
°dout


	)

148 
	#°dîr
 
°dîr


	)

150 
__BEGIN_NAMESPACE_STD


152 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

154 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_ATFILE


159 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

160 
__c⁄°
 *
__√w
Ë
__THROW
;

163 
__BEGIN_NAMESPACE_STD


168 #i‚de‡
__USE_FILE_OFFSET64


169 
FILE
 *
	`tmpfûe
 ();

171 #ifde‡
__REDIRECT


172 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

174 
	#tmpfûe
 
tmpfûe64


	)

178 #ifde‡
__USE_LARGEFILE64


179 
FILE
 *
	`tmpfûe64
 ();

183 *
	$tm≤am
 (*
__s
Ë
__THROW
;

184 
__END_NAMESPACE_STD


186 #ifde‡
__USE_MISC


189 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

193 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


201 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

202 
__THROW
 
__©åibuã_mÆloc__
;

206 
__BEGIN_NAMESPACE_STD


211 
	`f˛o£
 (
FILE
 *
__°ªam
);

216 
	`fÊush
 (
FILE
 *
__°ªam
);

217 
__END_NAMESPACE_STD


219 #ifde‡
__USE_MISC


226 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

229 #ifde‡
__USE_GNU


236 
	`f˛o£Æl
 ();

240 
__BEGIN_NAMESPACE_STD


241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

247 
__c⁄°
 *
__ª°ri˘
 
__modes
);

252 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

253 
__c⁄°
 *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
);

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

258 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

259 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

260 
__c⁄°
 *
__ª°ri˘
 
__modes
,

261 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

263 
	#f›í
 
f›í64


	)

264 
	#‰e›í
 
‰e›í64


	)

267 
__END_NAMESPACE_STD


268 #ifde‡
__USE_LARGEFILE64


269 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
);

271 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
,

273 
FILE
 *
__ª°ri˘
 
__°ªam
);

276 #ifdef 
__USE_POSIX


278 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

281 #ifdef 
__USE_GNU


284 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
,

286 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

289 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

294 
FILE
 *
	$›í_mem°ªam
 (**
__ª°ri˘
 
__buÊoc
,

295 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

299 
FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__ª°ri˘
 
__buÊoc
,

300 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

304 
__BEGIN_NAMESPACE_STD


307 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

311 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

312 
__modes
, 
size_t
 
__n
Ë
__THROW
;

313 
__END_NAMESPACE_STD


315 #ifdef 
__USE_BSD


318 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

319 
size_t
 
__size
Ë
__THROW
;

322 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
__BEGIN_NAMESPACE_STD


331 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

332 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

337 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	$•rötf
 (*
__ª°ri˘
 
__s
,

340 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

346 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

347 
_G_va_li°
 
__¨g
);

352 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

354 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

355 
_G_va_li°
 
__¨g
Ë
__THROW
;

356 
__END_NAMESPACE_STD


358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


359 
__BEGIN_NAMESPACE_C99


361 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

365 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

368 
__END_NAMESPACE_C99


371 #ifde‡
__USE_GNU


374 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

375 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

377 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

378 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

379 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

380 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

381 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

382 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

390 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

391 
_G_va_li°
 
__¨g
)

392 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

393 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

398 
__BEGIN_NAMESPACE_STD


403 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

404 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

409 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

412 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

413 
__END_NAMESPACE_STD


415 #ifdef 
__USE_ISOC99


416 
__BEGIN_NAMESPACE_C99


421 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

422 
_G_va_li°
 
__¨g
)

423 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

429 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

430 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

433 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

435 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

436 
__END_NAMESPACE_C99


440 
__BEGIN_NAMESPACE_STD


445 
	`fgëc
 (
FILE
 *
__°ªam
);

446 
	`gëc
 (
FILE
 *
__°ªam
);

452 
	`gëch¨
 ();

453 
__END_NAMESPACE_STD


457 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

459 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


464 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

465 
	`gëch¨_u∆ocked
 ();

468 #ifde‡
__USE_MISC


475 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

479 
__BEGIN_NAMESPACE_STD


487 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

488 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

494 
	`putch¨
 (
__c
);

495 
__END_NAMESPACE_STD


499 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

501 #ifde‡
__USE_MISC


508 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

511 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


516 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

517 
	`putch¨_u∆ocked
 (
__c
);

521 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

522 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

524 
	`gëw
 (
FILE
 *
__°ªam
);

527 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

531 
__BEGIN_NAMESPACE_STD


536 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

537 
__wur
;

544 *
	$gës
 (*
__s
Ë
__wur
;

545 
__END_NAMESPACE_STD


547 #ifde‡
__USE_GNU


554 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

555 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

559 #ifdef 
__USE_GNU


570 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

571 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

572 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

573 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

574 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

575 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

583 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

584 
size_t
 *
__ª°ri˘
 
__n
,

585 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

589 
__BEGIN_NAMESPACE_STD


594 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

600 
	`puts
 (
__c⁄°
 *
__s
);

607 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

614 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

615 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

620 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

621 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

622 
__END_NAMESPACE_STD


624 #ifde‡
__USE_GNU


631 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

632 
FILE
 *
__ª°ri˘
 
__°ªam
);

635 #ifde‡
__USE_MISC


642 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

643 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

644 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

645 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 
__BEGIN_NAMESPACE_STD


654 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

659 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

664 
	`ªwöd
 (
FILE
 *
__°ªam
);

665 
__END_NAMESPACE_STD


672 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


673 #i‚de‡
__USE_FILE_OFFSET64


678 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

683 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

685 #ifde‡
__REDIRECT


686 
	`__REDIRECT
 (
f£eko
,

687 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

688 
f£eko64
);

689 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

691 
	#f£eko
 
f£eko64


	)

692 
	#·ñlo
 
·ñlo64


	)

697 
__BEGIN_NAMESPACE_STD


698 #i‚de‡
__USE_FILE_OFFSET64


703 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

708 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

710 #ifde‡
__REDIRECT


711 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

712 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

713 
	`__REDIRECT
 (
f£ços
,

714 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

716 
	#fgëpos
 
fgëpos64


	)

717 
	#f£ços
 
f£ços64


	)

720 
__END_NAMESPACE_STD


722 #ifde‡
__USE_LARGEFILE64


723 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

724 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

725 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

726 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

729 
__BEGIN_NAMESPACE_STD


731 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

733 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

735 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

736 
__END_NAMESPACE_STD


738 #ifde‡
__USE_MISC


740 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

741 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

742 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

746 
__BEGIN_NAMESPACE_STD


751 
	`≥º‹
 (
__c⁄°
 *
__s
);

752 
__END_NAMESPACE_STD


758 
	~<bôs/sys_îæi°.h
>

761 #ifdef 
__USE_POSIX


763 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

766 #ifde‡
__USE_MISC


768 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

772 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

773 
deföed
 
__USE_MISC
)

778 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

784 
	`p˛o£
 (
FILE
 *
__°ªam
);

788 #ifdef 
__USE_POSIX


790 *
	$˘îmid
 (*
__s
Ë
__THROW
;

794 #ifde‡
__USE_XOPEN


796 *
	`cu£rid
 (*
__s
);

800 #ifdef 
__USE_GNU


801 
ob°ack
;

804 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

805 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

806 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

807 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

808 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

809 
_G_va_li°
 
__¨gs
)

810 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

814 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


818 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

822 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


832 
	#__√ed_gë›t


	)

833 
	~<gë›t.h
>

838 #ifde‡
__USE_EXTERN_INLINES


839 
	~<bôs/°dio.h
>

841 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


842 
	~<bôs/°dio2.h
>

844 #ifde‡
__LDBL_COMPAT


845 
	~<bôs/°dio-ldbl.h
>

848 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

288 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_BSD


292 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

296 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

300 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

307 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

312 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

316 #ifdef 
__USE_GNU


317 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

318 #ifde‡
__GNUC__


319 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

333 #ifdef 
__USE_GNU


336 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

337 
__loˇÀ_t
 
__loc
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

340 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

341 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

345 #ifdef 
__USE_BSD


348 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

349 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 #ifdef 
__USE_GNU


355 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

356 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

362 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

370 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

373 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

380 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

382 #i‚de‡
ba£«me


387 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

393 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

394 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


414 
	~<bôs/°rög.h
>

417 
	~<bôs/°rög2.h
>

420 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


422 
	~<bôs/°rög3.h
>

426 
__END_DECLS


	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

32 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

33 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

34 
__END_NAMESPACE_STD


36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


37 
__BEGIN_NAMESPACE_C99


38 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

39 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

40 
__END_NAMESPACE_C99


43 #ifdef 
__USE_ISOC99


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

46 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

47 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

48 
__END_NAMESPACE_C99


51 #ifde‡
__USE_GNU


52 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

53 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

54 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

55 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

56 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

57 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

61 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


62 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

63 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

64 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


65 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

66 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

56 
__STDIO_INLINE
 

57 
	$gëch¨_u∆ocked
 ()

59  
	`_IO_gëc_u∆ocked
 (
°dö
);

60 
	}
}

65 
__STDIO_INLINE
 

66 
	$putch¨
 (
__c
)

68  
	`_IO_putc
 (
__c
, 
°dout
);

69 
	}
}

72 #ifde‡
__USE_MISC


74 
__STDIO_INLINE
 

75 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

77  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

78 
	}
}

82 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

91 
__STDIO_INLINE
 

92 
	$putch¨_u∆ocked
 (
__c
)

94  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

95 
	}
}

99 #ifdef 
__USE_GNU


101 
__STDIO_INLINE
 
_IO_ssize_t


102 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

104  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

105 
	}
}

109 #ifde‡
__USE_MISC


111 
__STDIO_INLINE
 

112 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

114  
	`_IO_„of_u∆ocked
 (
__°ªam
);

115 
	}
}

118 
__STDIO_INLINE
 

119 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

121  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

122 
	}
}

128 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


130 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

131 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

132 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

133 && (
size_t
Ë(
size
) != 0) \

134 ? ({ *
__±r
 = (*Ë(
±r
); \

135 
FILE
 *
__°ªam
 = (
°ªam
); \

136 
size_t
 
__˙t
; \

137 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

138 
__˙t
 > 0; --__cnt) \

140 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

141 i‡(
__c
 =
EOF
) \

143 *
__±r
++ = 
__c
; \

145 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

146 / (
size_t
Ë(
size
); }) \

147 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

148 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

150 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

151 (Ë(
n
), (
size_t
) 0) \

152 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

154 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

155 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

156 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

157 && (
size_t
Ë(
size
) != 0) \

158 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

159 
FILE
 *
__°ªam
 = (
°ªam
); \

160 
size_t
 
__˙t
; \

161 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

162 
__˙t
 > 0; --__cnt) \

163 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

165 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

166 / (
size_t
Ë(
size
); }) \

167 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

168 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

170 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

171 (Ë(
n
), (
size_t
) 0) \

172 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

176 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 
	#•rötf
(
°r
, ...) \

31 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

32 
__VA_ARGS__
)

	)

33 
	#v•rötf
(
°r
, 
fmt
, 
≠
) \

34 
	`__buûtö___v•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (°r), 
fmt
, 
≠
)

	)

36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


38 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

39 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

40 ...Ë
__THROW
;

41 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

42 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

43 
_G_va_li°
 
__≠
Ë
__THROW
;

45 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

46 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

47 
__VA_ARGS__
)

	)

48 
	#v¢¥ötf
(
°r
, 
Àn
, 
fmt
, 
≠
) \

49 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

50 
fmt
, 
≠
)

	)

54 #i‡
__USE_FORTIFY_LEVEL
 > 1

56 
	`__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

57 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

58 
	`__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

59 
	`__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

60 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

61 
	`__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

62 
_G_va_li°
 
__≠
);

64 
	#¥ötf
(...) \

65 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

66 
	#Ârötf
(
°ªam
, ...) \

67 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

68 
	#v¥ötf
(
f‹m©
, 
≠
) \

69 
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

70 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

71 
	`__vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

75 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

76 *
	`__REDIRECT
 (
__gës_Æüs
, (*
__°r
), 
gës
Ë
__wur
;

78 
__Æways_ölöe
 
__wur
 *

79 
	$gës
 (*
__°r
)

81 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

82  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

83  
	`__gës_Æüs
 (
__°r
);

84 
	}
}

86 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

87 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

88 *
	`__REDIRECT
 (
__fgës_Æüs
,

89 (*
__ª°ri˘
 
__s
, 
__n
,

90 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

92 
__Æways_ölöe
 
__wur
 *

93 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

95 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

96 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

97  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

98  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

99 
	}
}

101 #ifde‡
__USE_GNU


102 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

103 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

104 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

105 (*
__ª°ri˘
 
__s
, 
__n
,

106 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

108 
__Æways_ölöe
 
__wur
 *

109 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

111 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

113  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

114  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

115 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #ifde‡
__˝lu•lus


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
__STRING_INLINE
 *

149 
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

151 
__d0
, 
__d1
, 
__d2
;

152 *
__tmp
 = 
__de°
;

153 i‡(
__de°
 < 
__§c
)

154 
__asm__
 
__vﬁ©ûe__


157 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

158 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

159 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

160 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

162 
__asm__
 
__vﬁ©ûe__


166 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

167 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

168 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

169 "2" (
__n
 - 1 + (*Ë
__tmp
),

170 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

171  
__de°
;

172 
	}
}

176 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

177 #i‚de‡
_FORCE_INLINES


178 #i‚de‡
__PIC__


180 
__STRING_INLINE
 

181 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

183 
__d0
, 
__d1
, 
__d2
;

184 
__ªs
;

185 
__asm__
 
__vﬁ©ûe__


193 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

194 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

195 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

196 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

198  
__ªs
;

199 
	}
}

204 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

205 
	#_USE_STRING_ARCH_mem£t
 1

	)

206 
	#mem£t
(
s
, 
c
, 
n
) \

207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

208 ? ((
n
) == 1 \

209 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

210 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

211 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

212 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

213 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

214 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

215 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

216 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

217 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

219 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

220 *((*Ë
__s
Ë(Ë(
c
); \

221 
__s
; })

	)

223 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

224 ({ *
__s
 = (
s
); \

226 
__ui
; \

227 
__usi
; \

228 
__uc
; \

229 } *
__u
 = 
__s
; \

230 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

236 i‡((
n
) == 3 || (n) >= 5) \

237 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

240 
n
) \

243 
__u
->
__ui
 = 
__c
; \

244 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

246 
__u
->
__ui
 = 
__c
; \

247 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

249 
__u
->
__ui
 = 
__c
; \

250 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

252 
__u
->
__usi
 = (Ë
__c
; \

253 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

254 
__u
->
__uc
 = (Ë
__c
; \

258 
__u
->
__ui
 = 
__c
; \

259 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

261 
__u
->
__ui
 = 
__c
; \

262 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__usi
 = (Ë
__c
; \

271 
__u
->
__ui
 = 
__c
; \

272 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

274 
__u
->
__ui
 = 
__c
; \

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

277 
__u
->
__ui
 = 
__c
; \

278 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

280 
__u
->
__uc
 = (Ë
__c
; \

284 
__u
->
__ui
 = 
__c
; \

285 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

287 
__u
->
__ui
 = 
__c
; \

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

290 
__u
->
__ui
 = 
__c
; \

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

293 
__u
->
__ui
 = 
__c
; \

298 
__s
; })

	)

300 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

301 (((
n
) % 4 == 0) \

302 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

303 
n
) \

304 : (((
n
) % 2 == 0) \

305 ? 
	`__mem£t_c˙_by2
 (
s
, \

306 ((Ë((Ë(
c
))) * 0x01010101,\

307 
n
) \

308 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

310 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

311 
size_t
 
__n
);

313 
__STRING_INLINE
 *

314 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

316 *
__tmp
 = 
__s
;

317 
__d0
;

318 #ifde‡
__i686__


319 
__asm__
 
__vﬁ©ûe__


322 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

323 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

324 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

327 
__asm__
 
__vﬁ©ûe__


333 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338  
__s
;

339 
	}
}

341 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

342 
size_t
 
__n
);

344 
__STRING_INLINE
 *

345 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

347 
__d0
, 
__d1
;

348 *
__tmp
 = 
__s
;

349 #ifde‡
__i686__


350 
__asm__
 
__vﬁ©ûe__


354 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359 
__asm__
 
__vﬁ©ûe__


365 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370  
__s
;

371 
	}
}

373 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

374 (((
n
) % 4 == 0) \

375 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

376 : (((
n
) % 2 == 0) \

377 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

378 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

380 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

382 
__STRING_INLINE
 *

383 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

385 *
__tmp
 = 
__s
;

386 
__d0
;

387 
__asm__
 
__vﬁ©ûe__


397 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

398 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

399 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

401  
__s
;

402 
	}
}

404 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

406 
__STRING_INLINE
 *

407 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

409 
__d0
, 
__d1
;

410 *
__tmp
 = 
__s
;

411 
__asm__
 
__vﬁ©ûe__


422 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

423 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

424 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

426  
__s
;

427 
	}
}

431 
	#_HAVE_STRING_ARCH_memchr
 1

	)

432 #i‚de‡
_FORCE_INLINES


433 
__STRING_INLINE
 *

434 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

436 
__d0
;

437 #ifde‡
__i686__


438 
__d1
;

440 *
__ªs
;

441 i‡(
__n
 == 0)

442  
NULL
;

443 #ifde‡
__i686__


444 
__asm__
 
__vﬁ©ûe__


448 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

449 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

450 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

453 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464  
__ªs
 - 1;

465 
	}
}

468 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

469 #i‚de‡
_FORCE_INLINES


470 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

472 
__STRING_INLINE
 *

473 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

475 
__d0
;

476 #ifde‡
__i686__


477 
__d1
;

479 *
__ªs
;

480 i‡(
__n
 == 0)

481  
NULL
;

482 #ifde‡
__i686__


483 
__asm__
 
__vﬁ©ûe__


489 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

490 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

491 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

494 
__asm__
 
__vﬁ©ûe__


501 : "=D" (
__ªs
), "=&c" (
__d0
)

502 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

503 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

506  
__ªs
;

507 
	}
}

508 #ifde‡
__USE_GNU


509 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

514 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

515 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

517 #i‚de‡
_FORCE_INLINES


518 
__STRING_INLINE
 *

519 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

521 
__d0
;

522 *
__ªs
;

523 
__asm__
 
__vﬁ©ûe__


526 : "=D" (
__ªs
), "=&c" (
__d0
)

527 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

528 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

530  
__ªs
 - 1;

531 
	}
}

532 #ifde‡
__USE_GNU


533 
__STRING_INLINE
 *

534 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

536  
	`__øwmemchr
 (
__s
, 
__c
);

537 
	}
}

543 
	#_HAVE_STRING_ARCH_°æí
 1

	)

544 
	#°æí
(
°r
) \

545 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

546 ? 
	`__buûtö_°æí
 (
°r
) \

547 : 
	`__°æí_g
 (
°r
)))

	)

548 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

550 
__STRING_INLINE
 
size_t


551 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

553 
__dummy
;

554 
__c⁄°
 *
__tmp
 = 
__°r
;

555 
__asm__
 
__vﬁ©ûe__


561 : "Ù" (
__tmp
), "=&q" (
__dummy
)

562 : "0" (
__°r
),

563 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

565  
__tmp
 - 
__°r
 - 1;

566 
	}
}

570 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

571 
	#°r˝y
(
de°
, 
§c
) \

572 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

573 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

574 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

575 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

576 (
__c⁄°
 *Ë(
§c
), \

577 
	`°æí
 (
§c
) + 1)) \

578 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

580 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

581 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

583 
__ui
; \

584 
__usi
; \

585 
__uc
; \

586 
__c
; \

587 } *
__u
 = (*Ë
__de°
; \

588 
§˛í
) \

591 
__u
->
__uc
 = '\0'; \

594 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

597 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

598 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

599 
__u
->
__uc
 = '\0'; \

602 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

605 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

606 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

607 
__u
->
__uc
 = '\0'; \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

618 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

619 
__u
->
__uc
 = '\0'; \

622 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

624 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

627 (*Ë
__de°
; }))

	)

629 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

631 
__STRING_INLINE
 *

632 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

634 *
__tmp
 = 
__de°
;

635 
__dummy
;

636 
__asm__
 
__vﬁ©ûe__


645 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

646 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

647 : "0" (
__§c
), "1" (
__tmp
),

648 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

650  
__de°
;

651 
	}
}

654 #ifde‡
__USE_GNU


655 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

657 
	#__°p˝y
(
de°
, 
§c
) \

658 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

659 ? (
	`°æí
 (
§c
) + 1 <= 8 \

660 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

661 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

662 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

663 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

664 ((
§˛í
) % 4 == 0 \

665 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

666 : ((
§˛í
) % 2 == 0 \

667 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

668 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

671 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

673 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

674 (
	`__exãnsi⁄__
 ({ union { \

675 
__ui
; \

676 
__usi
; \

677 
__uc
; \

678 
__c
; \

679 } *
__u
 = (*Ë(
de°
); \

680 
§˛í
) \

683 
__u
->
__uc
 = '\0'; \

686 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

687 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

690 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

691 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

692 
__u
->
__uc
 = '\0'; \

695 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

699 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

700 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

701 
__u
->
__uc
 = '\0'; \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

713 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

714 
__u
->
__uc
 = '\0'; \

717 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

719 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

720 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

723 (*Ë
__u
; }))

	)

725 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

726 
size_t
 
__§˛í
);

728 
__STRING_INLINE
 *

729 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

731 *
__tmp
 = 
__de°
;

732 
__d0
, 
__d1
;

733 
__asm__
 
__vﬁ©ûe__


741 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

742 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

744  
__tmp
;

745 
	}
}

747 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

748 
size_t
 
__§˛í
);

750 
__STRING_INLINE
 *

751 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

753 *
__tmp
 = 
__de°
;

754 
__d0
, 
__d1
;

755 
__asm__
 
__vﬁ©ûe__


768 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

769 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

770 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

771 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

773  
__tmp
 + 2;

774 
	}
}

776 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

777 
size_t
 
__§˛í
);

779 
__STRING_INLINE
 *

780 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

782 
__d0
, 
__d1
;

783 *
__tmp
 = 
__de°
;

784 
__asm__
 
__vﬁ©ûe__


795 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

796 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

797 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

798 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

800  
__tmp
;

801 
	}
}

803 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

805 
__STRING_INLINE
 *

806 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

808 *
__tmp
 = 
__de°
;

809 
__dummy
;

810 
__asm__
 
__vﬁ©ûe__


819 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

820 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

821 : "0" (
__§c
), "1" (
__tmp
),

822 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

824  
__tmp
 - 1;

825 
	}
}

830 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

831 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

832 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

833 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

834 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

835 (
__c⁄°
 *Ë(
§c
), 
n
) \

836 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

837 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

838 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

839 (((
§˛í
) % 4 == 0) \

840 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

841 : (((
§˛í
) % 2 == 0) \

842 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

843 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

845 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

846 
size_t
 
__§˛í
, size_à
__n
);

848 
__STRING_INLINE
 *

849 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

851 *
__tmp
 = 
__de°
;

852 
__dummy1
, 
__dummy2
;

853 
__asm__
 
__vﬁ©ûe__


861 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

862 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

863 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

864 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

866 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

867  
__de°
;

868 
	}
}

870 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

871 
size_t
 
__§˛í
, size_à
__n
);

873 
__STRING_INLINE
 *

874 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

876 *
__tmp
 = 
__de°
;

877 
__dummy1
, 
__dummy2
;

878 
__asm__
 
__vﬁ©ûe__


891 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

892 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

893 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

894 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

896 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

897  
__de°
;

898 
	}
}

900 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

901 
size_t
 
__§˛í
, size_à
__n
);

903 
__STRING_INLINE
 *

904 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

906 
__d0
, 
__d1
;

907 *
__tmp
 = 
__de°
;

908 
__asm__
 
__vﬁ©ûe__


919 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

920 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

921 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

922 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

924 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

925  
__de°
;

926 
	}
}

928 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

929 
size_t
 
__n
);

931 
__STRING_INLINE
 *

932 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

934 *
__tmp
 = 
__de°
;

935 
__dummy
;

936 i‡(
__n
 > 0)

937 
__asm__
 
__vﬁ©ûe__


953 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

954 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

957  
__de°
;

958 
	}
}

962 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

963 
	#°rˇt
(
de°
, 
§c
) \

964 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

965 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

966 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

968 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

969 
size_t
 
__§˛í
);

971 
__STRING_INLINE
 *

972 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

974 #ifde‡
__i686__


975 
__d0
;

976 *
__tmp
;

977 
__asm__
 
__vﬁ©ûe__


979 : "=D" (
__tmp
), "=&c" (
__d0
),

980 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

981 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

982 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

984 --
__tmp
;

986 *
__tmp
 = 
__de°
 - 1;

987 
__asm__
 
__vﬁ©ûe__


992 : "Ù" (
__tmp
),

993 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

994 : "0" (
__tmp
),

995 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

998 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

999  
__de°
;

1000 
	}
}

1002 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1004 
__STRING_INLINE
 *

1005 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1007 *
__tmp
 = 
__de°
 - 1;

1008 
__dummy
;

1009 
__asm__
 
__vﬁ©ûe__


1021 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1022 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1023 : "1" (
__tmp
), "2" (
__§c
),

1024 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1026  
__de°
;

1027 
	}
}

1031 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1032 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1033 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1034 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1035 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1036 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1037 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1038 (
__c⁄°
 *Ë(
§c
), \

1039 (
n
)Ë0, 
__de°
)) \

1040 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1042 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1043 
size_t
 
__n
);

1045 
__STRING_INLINE
 *

1046 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1048 *
__tmp
 = 
__de°
;

1049 
__dummy
;

1050 #ifde‡
__i686__


1051 
__asm__
 
__vﬁ©ûe__


1065 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1066 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1069 --
__tmp
;

1070 
__asm__
 
__vﬁ©ûe__


1087 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1088 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1091  
__de°
;

1092 
	}
}

1096 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1097 
	#°rcmp
(
s1
, 
s2
) \

1098 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1099 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1100 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1101 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1102 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1103 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1104 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1105 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1106 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1107 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1108 (
__c⁄°
 *Ë(
s2
), \

1109 
	`°æí
 (
s1
)) \

1110 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1111 (
__c⁄°
 *Ë(
s2
), \

1112 
	`°æí
 (
s1
))) \

1113 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1114 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1115 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1116 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1117 (
__c⁄°
 *Ë(
s2
), \

1118 
	`°æí
 (
s2
)) \

1119 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1120 (
__c⁄°
 *Ë(
s2
), \

1121 
	`°æí
 (
s2
))) \

1122 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1124 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1125 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1126 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1128 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1129 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1131 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1132 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1136 
__ªsu…
; }))

	)

1138 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1139 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1140 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1141 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1143 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1144 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1146 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1147 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1151 
__ªsu…
; }))

	)

1153 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1154 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1155 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1156 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1158 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1159 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1161 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1162 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1166 
__ªsu…
; }))

	)

1168 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1170 
__STRING_INLINE
 

1171 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1173 
__ªs
;

1174 
__asm__
 
__vﬁ©ûe__


1190 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1191 : "1" (
__s1
), "2" (
__s2
),

1192 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1193 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1195  
__ªs
;

1196 
	}
}

1200 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1201 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1202 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1203 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1204 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1205 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1206 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1208 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1209 
size_t
 
__n
);

1211 
__STRING_INLINE
 

1212 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1214 
__ªs
;

1215 
__asm__
 
__vﬁ©ûe__


1234 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1235 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1236 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1237 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1239  
__ªs
;

1240 
	}
}

1244 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1245 
	#_USE_STRING_ARCH_°rchr
 1

	)

1246 
	#°rchr
(
s
, 
c
) \

1247 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1248 ? ((
c
) == '\0' \

1249 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1250 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1251 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1253 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1255 
__STRING_INLINE
 *

1256 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1258 
__d0
;

1259 *
__ªs
;

1260 
__asm__
 
__vﬁ©ûe__


1270 : "Ù" (
__ªs
), "=&a" (
__d0
)

1271 : "0" (
__s
), "1" (
__c
),

1272 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1274  
__ªs
;

1275 
	}
}

1277 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1279 
__STRING_INLINE
 *

1280 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1282 
__d0
;

1283 *
__ªs
;

1284 
__asm__
 
__vﬁ©ûe__


1295 : "Ù" (
__ªs
), "=&a" (
__d0
)

1296 : "0" (
__s
), "1" (
__c
),

1297 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1299  
__ªs
;

1300 
	}
}

1304 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1305 
	#__°rch∫ul
(
s
, 
c
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1307 ? ((
c
) == '\0' \

1308 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1309 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1310 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1312 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1314 
__STRING_INLINE
 *

1315 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1317 
__d0
;

1318 *
__ªs
;

1319 
__asm__
 
__vﬁ©ûe__


1329 : "Ù" (
__ªs
), "=&a" (
__d0
)

1330 : "0" (
__s
), "1" (
__c
),

1331 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1333  
__ªs
;

1334 
	}
}

1336 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1338 
__STRING_INLINE
 *

1339 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1341 
__d0
;

1342 *
__ªs
;

1343 
__asm__
 
__vﬁ©ûe__


1354 : "Ù" (
__ªs
), "=&a" (
__d0
)

1355 : "0" (
__s
), "1" (
__c
),

1356 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1358  
__ªs
;

1359 
	}
}

1360 #ifde‡
__USE_GNU


1361 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1365 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1367 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1368 
	#ödex
(
s
, 
c
) \

1369 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1370 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1371 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1376 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1377 
	#°ºchr
(
s
, 
c
) \

1378 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1379 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1380 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1382 #ifde‡
__i686__


1383 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1385 
__STRING_INLINE
 *

1386 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1388 
__d0
, 
__d1
;

1389 *
__ªs
;

1390 
__asm__
 
__vﬁ©ûe__


1398 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1399 : "0" (1), "1" (
__s
), "2" (
__c
),

1400 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1402  
__ªs
 - 1;

1403 
	}
}

1405 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1445 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1446 : "0" (0), "1" (
__s
), "2" (
__c
),

1447 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1449  
__ªs
;

1450 
	}
}

1452 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1454 
__STRING_INLINE
 *

1455 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1457 
__d0
, 
__d1
;

1458 *
__ªs
;

1459 
__asm__
 
__vﬁ©ûe__


1470 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1471 : "0" (0), "1" (
__s
), "2" (
__c
),

1472 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1474  
__ªs
;

1475 
	}
}

1479 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1481 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1482 
	#rödex
(
s
, 
c
) \

1483 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1484 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1485 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1491 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1492 
	#°rc•n
(
s
, 
ªje˘
) \

1493 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1494 ? ((
ªje˘
)[0] == '\0' \

1495 ? 
	`°æí
 (
s
) \

1496 : ((
ªje˘
)[1] == '\0' \

1497 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1498 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1499 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1501 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1503 #i‚de‡
_FORCE_INLINES


1504 
__STRING_INLINE
 
size_t


1505 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1507 
__d0
;

1508 *
__ªs
;

1509 
__asm__
 
__vﬁ©ûe__


1518 : "Ù" (
__ªs
), "=&a" (
__d0
)

1519 : "0" (
__s
), "1" (
__ªje˘
),

1520 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1522  (
__ªs
 - 1Ë- 
__s
;

1523 
	}
}

1526 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1527 
size_t
 
__ªje˘_Àn
);

1529 
__STRING_INLINE
 
size_t


1530 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1532 
__d0
, 
__d1
, 
__d2
;

1533 
__c⁄°
 *
__ªs
;

1534 
__asm__
 
__vﬁ©ûe__


1545 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1546 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1548  (
__ªs
 - 1Ë- 
__s
;

1549 
	}
}

1551 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1552 #ifde‡
__PIC__


1554 
__STRING_INLINE
 
size_t


1555 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1557 
__d0
, 
__d1
, 
__d2
;

1558 
__c⁄°
 *
__ªs
;

1559 
__asm__
 
__vﬁ©ûe__


1576 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1577 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1579  (
__ªs
 - 1Ë- 
__s
;

1580 
	}
}

1582 
__STRING_INLINE
 
size_t


1583 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1585 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1586 
__c⁄°
 *
__ªs
;

1587 
__asm__
 
__vﬁ©ûe__


1601 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1602 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1605  (
__ªs
 - 1Ë- 
__s
;

1606 
	}
}

1612 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1613 
	#°r•n
(
s
, 
ac˚±
) \

1614 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1615 ? ((
ac˚±
)[0] == '\0' \

1616 ? ((Ë(
s
), 0) \

1617 : ((
ac˚±
)[1] == '\0' \

1618 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1619 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1620 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1622 #i‚de‡
_FORCE_INLINES


1623 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1625 
__STRING_INLINE
 
size_t


1626 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1628 
__d0
;

1629 *
__ªs
;

1631 
__asm__
 
__vﬁ©ûe__


1637 : "Ù" (
__ªs
), "=&q" (
__d0
)

1638 : "0" (
__s
), "1" (
__ac˚±
),

1639 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1641  (
__ªs
 - 1Ë- 
__s
;

1642 
	}
}

1645 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1646 
size_t
 
__ac˚±_Àn
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1651 
__d0
, 
__d1
, 
__d2
;

1652 
__c⁄°
 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1664 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1665 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1668 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1669 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1671  (
__ªs
 - 1Ë- 
__s
;

1672 
	}
}

1674 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1675 #ifde‡
__PIC__


1677 
__STRING_INLINE
 
size_t


1678 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1680 
__d0
, 
__d1
, 
__d2
;

1681 
__c⁄°
 *
__ªs
;

1682 
__asm__
 
__vﬁ©ûe__


1698 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1699 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1701  (
__ªs
 - 1Ë- 
__s
;

1702 
	}
}

1704 
__STRING_INLINE
 
size_t


1705 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1707 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1708 
__c⁄°
 *
__ªs
;

1709 
__asm__
 
__vﬁ©ûe__


1723 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1724 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1726  (
__ªs
 - 1Ë- 
__s
;

1727 
	}
}

1732 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1733 
	#°Ωbrk
(
s
, 
ac˚±
) \

1734 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1735 ? ((
ac˚±
)[0] == '\0' \

1736 ? ((Ë(
s
), (*) 0) \

1737 : ((
ac˚±
)[1] == '\0' \

1738 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1739 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1740 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1742 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1743 
size_t
 
__ac˚±_Àn
);

1745 
__STRING_INLINE
 *

1746 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1748 
__d0
, 
__d1
, 
__d2
;

1749 *
__ªs
;

1750 
__asm__
 
__vﬁ©ûe__


1765 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1766 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1768  
__ªs
;

1769 
	}
}

1771 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1772 #ifde‡
__PIC__


1774 
__STRING_INLINE
 *

1775 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1777 
__d0
, 
__d1
, 
__d2
;

1778 *
__ªs
;

1779 
__asm__
 
__vﬁ©ûe__


1800 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1801 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1803  
__ªs
;

1804 
	}
}

1806 
__STRING_INLINE
 *

1807 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1809 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1810 *
__ªs
;

1811 
__asm__
 
__vﬁ©ûe__


1830 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1831 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1833  
__ªs
;

1834 
	}
}

1839 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1840 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1841 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1842 ? ((
√edÀ
)[0] == '\0' \

1843 ? (
hay°ack
) \

1844 : ((
√edÀ
)[1] == '\0' \

1845 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1846 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1847 
	`°æí
 (
√edÀ
)))) \

1848 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1852 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1853 
size_t
 
__√edÀ_Àn
);

1855 
__STRING_INLINE
 *

1856 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1857 
size_t
 
__√edÀ_Àn
)

1859 
__d0
, 
__d1
, 
__d2
;

1860 *
__ªs
;

1861 
__asm__
 
__vﬁ©ûe__


1874 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1875 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1877  
__ªs
;

1878 
	}
}

1880 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1881 #ifde‡
__PIC__


1883 
__STRING_INLINE
 *

1884 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1886 
__d0
, 
__d1
, 
__d2
;

1887 *
__ªs
;

1888 
__asm__
 
__vﬁ©ûe__


1907 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1908 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1909 "d" (
__√edÀ
)

1911  
__ªs
;

1912 
	}
}

1914 
__STRING_INLINE
 *

1915 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1917 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1918 *
__ªs
;

1919 
__asm__
 
__vﬁ©ûe__


1936 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1937 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1938 "b" (
__√edÀ
)

1940  
__ªs
;

1941 
	}
}

1947 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1948 #ifde‡
__i686__


1949 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1950 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1951 ? 
	`__buûtö_ffs
 (
w‹d
) \

1952 : ({ 
__˙t
, 
__tmp
; \

1953 
__asm__
 
__vﬁ©ûe__
 \

1956 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1957 : "rm" (
w‹d
), "1" (-1)); \

1958 
__˙t
 + 1; }))

	)

1960 #i‚de‡
ff¶


1961 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1966 #i‚de‡
_FORCE_INLINES


1967 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË(
c
); __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 (1, 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 (1, 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


26 #unde‡
mem˝y


27 #unde‡
memmove


28 #unde‡
mem£t


29 #unde‡
°rˇt


30 #unde‡
°r˝y


31 #unde‡
°∫ˇt


32 #unde‡
°∫˝y


33 #ifde‡
__USE_GNU


34 #unde‡
memp˝y


35 #unde‡
°p˝y


37 #ifde‡
__USE_BSD


38 #unde‡
bc›y


39 #unde‡
bzîo


43 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

44 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

45 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

46 : 
	`__mem˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

47 
__Æways_ölöe
 *

48 
__NTH
 (
	$__mem˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

55 
	#memmove
(
de°
, 
§c
, 
Àn
) \

56 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

57 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

58 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
))

	)

59 
__Æways_ölöe
 *

60 
__NTH
 (
	$__memmove_ichk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

62  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

63 
	}
}

66 #ifde‡
__USE_GNU


67 
	#memp˝y
(
de°
, 
§c
, 
Àn
) \

68 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

69 ? 
	`__buûtö___memp˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

70 : 
	`__memp˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

71 
__Æways_ölöe
 *

72 
__NTH
 (
	$__memp˝y_ichk
 (*
__ª°ri˘
 
__de°
,

73 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
))

75  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

76 
	}
}

85 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

87 
	#mem£t
(
de°
, 
ch
, 
Àn
) \

88 (
	`__buûtö_c⁄°™t_p
 (
Àn
) && (len) == 0 \

89 ? (
	`__w¨n_mem£t_zîo_Àn
 (), (Ë(
ch
), (Ë(
Àn
), (*Ë(
de°
)) \

90 : ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

91 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
ch
, 
Àn
, 
	`__bos0
 (dest)) \

92 : 
	`__mem£t_ichk
 (
de°
, 
ch
, 
Àn
)))

	)

93 
__Æways_ölöe
 *

94 
__NTH
 (
	$__mem£t_ichk
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

96  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

97 
	}
}

99 #ifde‡
__USE_BSD


100 
	#bc›y
(
§c
, 
de°
, 
Àn
) (() \

101 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

102 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

103 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
)))

	)

104 
	#bzîo
(
de°
, 
Àn
) (() \

105 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

106 ? 
	`__buûtö___mem£t_chk
 (
de°
, '\0', 
Àn
, 
	`__bos0
 (dest)) \

107 : 
	`__mem£t_ichk
 (
de°
, '\0', 
Àn
)))

	)

111 
	#°r˝y
(
de°
, 
§c
) \

112 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

113 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

114 : 
	`__°r˝y_ichk
 (
de°
, 
§c
))

	)

115 
__Æways_ölöe
 *

116 
__NTH
 (
	$__°r˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

118  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

119 
	}
}

122 #ifde‡
__USE_GNU


123 
	#°p˝y
(
de°
, 
§c
) \

124 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

125 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

126 : 
	`__°p˝y_ichk
 (
de°
, 
§c
))

	)

127 
__Æways_ölöe
 *

128 
__NTH
 (
	$__°p˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

131 
	}
}

135 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

136 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

137 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

138 : 
	`__°∫˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

139 
__Æways_ölöe
 *

140 
__NTH
 (
	$__°∫˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

141 
size_t
 
__Àn
))

143  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

144 
	}
}

148 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

149 
size_t
 
__de°Àn
Ë
__THROW
;

150 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

151 
__c⁄°
 *
__§c
,

152 
size_t
 
__n
), 
°≤˝y
);

154 
__Æways_ölöe
 *

155 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

158 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

159  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

160  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

161 
	}
}

164 
	#°rˇt
(
de°
, 
§c
) \

165 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

166 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

167 : 
	`__°rˇt_ichk
 (
de°
, 
§c
))

	)

168 
__Æways_ölöe
 *

169 
__NTH
 (
	$__°rˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

171  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

172 
	}
}

175 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

176 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

177 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

178 : 
	`__°∫ˇt_ichk
 (
de°
, 
§c
, 
Àn
))

	)

179 
__Æways_ölöe
 *

180 
__NTH
 (
	$__°∫ˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

181 
size_t
 
__Àn
))

183  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

184 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

119 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

120 #ñi‡
__WORDSIZE
 == 64

121 
	t__SQUAD_TYPE
 

	)

122 
	t__UQUAD_TYPE
 

	)

123 
	t__SWORD_TYPE
 

	)

124 
	t__UWORD_TYPE
 

	)

125 
	t__SLONG32_TYPE
 

	)

126 
	t__ULONG32_TYPE
 

	)

127 
	t__S64_TYPE
 

	)

128 
	t__U64_TYPE
 

	)

130 
	t__STD_TYPE
 

	)

134 
	~<bôs/ty≥sizes.h
>

137 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

138 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

139 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

140 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

141 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

142 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

143 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

144 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

145 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

146 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

147 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

148 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

149 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

150 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

151 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

152 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

153 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

154 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

156 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

157 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

158 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

161 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

164 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

167 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

172 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

173 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

176 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

177 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

180 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

181 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

183 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

187 
__off64_t
 
	t__loff_t
;

188 
__quad_t
 *
	t__qaddr_t
;

189 *
	t__ˇddr_t
;

192 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

195 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

198 #unde‡
__STD_TYPE


	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_POSIX


95 #unde‡
__USE_POSIX2


96 #unde‡
__USE_POSIX199309


97 #unde‡
__USE_POSIX199506


98 #unde‡
__USE_XOPEN


99 #unde‡
__USE_XOPEN_EXTENDED


100 #unde‡
__USE_UNIX98


101 #unde‡
__USE_XOPEN2K


102 #unde‡
__USE_LARGEFILE


103 #unde‡
__USE_LARGEFILE64


104 #unde‡
__USE_FILE_OFFSET64


105 #unde‡
__USE_BSD


106 #unde‡
__USE_SVID


107 #unde‡
__USE_MISC


108 #unde‡
__USE_ATFILE


109 #unde‡
__USE_GNU


110 #unde‡
__USE_REENTRANT


111 #unde‡
__USE_FORTIFY_LEVEL


112 #unde‡
__FAVOR_BSD


113 #unde‡
__KERNEL_STRICT_NAMES


117 #i‚de‡
_LOOSE_KERNEL_NAMES


118 
	#__KERNEL_STRICT_NAMES


	)

122 
	#__USE_ANSI
 1

	)

131 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


132 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

133 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

135 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

140 #i‡
deföed
 
_BSD_SOURCE
 && \

141 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

142 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

143 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

144 
	#__FAVOR_BSD
 1

	)

148 #ifde‡
_GNU_SOURCE


149 #unde‡
_ISOC99_SOURCE


150 
	#_ISOC99_SOURCE
 1

	)

151 #unde‡
_POSIX_SOURCE


152 
	#_POSIX_SOURCE
 1

	)

153 #unde‡
_POSIX_C_SOURCE


154 
	#_POSIX_C_SOURCE
 199506L

	)

155 #unde‡
_XOPEN_SOURCE


156 
	#_XOPEN_SOURCE
 600

	)

157 #unde‡
_XOPEN_SOURCE_EXTENDED


158 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

159 #unde‡
_LARGEFILE64_SOURCE


160 
	#_LARGEFILE64_SOURCE
 1

	)

161 #unde‡
_BSD_SOURCE


162 
	#_BSD_SOURCE
 1

	)

163 #unde‡
_SVID_SOURCE


164 
	#_SVID_SOURCE
 1

	)

165 #unde‡
_ATFILE_SOURCE


166 
	#_ATFILE_SOURCE
 1

	)

171 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

172 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

173 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

174 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

175 
	#_BSD_SOURCE
 1

	)

176 
	#_SVID_SOURCE
 1

	)

183 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

184 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

185 
	#__USE_ISOC99
 1

	)

190 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

191 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

192 
	#_POSIX_SOURCE
 1

	)

193 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

194 
	#_POSIX_C_SOURCE
 2

	)

195 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

196 
	#_POSIX_C_SOURCE
 199506L

	)

198 
	#_POSIX_C_SOURCE
 200112L

	)

202 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


203 
	#__USE_POSIX
 1

	)

206 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


207 
	#__USE_POSIX2
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

211 
	#__USE_POSIX199309
 1

	)

214 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

215 
	#__USE_POSIX199506
 1

	)

218 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

219 
	#__USE_XOPEN2K
 1

	)

222 #ifdef 
_XOPEN_SOURCE


223 
	#__USE_XOPEN
 1

	)

224 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

225 
	#__USE_XOPEN_EXTENDED
 1

	)

226 
	#__USE_UNIX98
 1

	)

227 #unde‡
_LARGEFILE_SOURCE


228 
	#_LARGEFILE_SOURCE
 1

	)

229 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

230 
	#__USE_XOPEN2K
 1

	)

231 #unde‡
__USE_ISOC99


232 
	#__USE_ISOC99
 1

	)

235 #ifde‡
_XOPEN_SOURCE_EXTENDED


236 
	#__USE_XOPEN_EXTENDED
 1

	)

241 #ifde‡
_LARGEFILE_SOURCE


242 
	#__USE_LARGEFILE
 1

	)

245 #ifde‡
_LARGEFILE64_SOURCE


246 
	#__USE_LARGEFILE64
 1

	)

249 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

250 
	#__USE_FILE_OFFSET64
 1

	)

253 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


254 
	#__USE_MISC
 1

	)

257 #ifdef 
_BSD_SOURCE


258 
	#__USE_BSD
 1

	)

261 #ifdef 
_SVID_SOURCE


262 
	#__USE_SVID
 1

	)

265 #ifdef 
_ATFILE_SOURCE


266 
	#__USE_ATFILE
 1

	)

269 #ifdef 
_GNU_SOURCE


270 
	#__USE_GNU
 1

	)

273 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


274 
	#__USE_REENTRANT
 1

	)

277 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

278 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

279 #i‡
_FORTIFY_SOURCE
 > 1

280 
	#__USE_FORTIFY_LEVEL
 2

	)

282 
	#__USE_FORTIFY_LEVEL
 1

	)

285 
	#__USE_FORTIFY_LEVEL
 0

	)

289 
	#__STDC_IEC_559__
 1

	)

290 
	#__STDC_IEC_559_COMPLEX__
 1

	)

293 
	#__STDC_ISO_10646__
 200009L

	)

301 #unde‡
__GNU_LIBRARY__


302 
	#__GNU_LIBRARY__
 6

	)

306 
	#__GLIBC__
 2

	)

307 
	#__GLIBC_MINOR__
 4

	)

309 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

310 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

313 #i‡
deföed
 
__GNUC__
 \

314 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

315 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

316 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

317 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

321 #i‚de‡
__ASSEMBLER__


322 #i‚de‡
_SYS_CDEFS_H


323 
	~<sys/cdefs.h
>

328 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


329 
	#__USE_LARGEFILE
 1

	)

330 
	#__USE_LARGEFILE64
 1

	)

336 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

337 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


338 
	#__USE_EXTERN_INLINES
 1

	)

346 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

147 
	#_IO_SKIPWS
 01

	)

148 
	#_IO_LEFT
 02

	)

149 
	#_IO_RIGHT
 04

	)

150 
	#_IO_INTERNAL
 010

	)

151 
	#_IO_DEC
 020

	)

152 
	#_IO_OCT
 040

	)

153 
	#_IO_HEX
 0100

	)

154 
	#_IO_SHOWBASE
 0200

	)

155 
	#_IO_SHOWPOINT
 0400

	)

156 
	#_IO_UPPERCASE
 01000

	)

157 
	#_IO_SHOWPOS
 02000

	)

158 
	#_IO_SCIENTIFIC
 04000

	)

159 
	#_IO_FIXED
 010000

	)

160 
	#_IO_UNITBUF
 020000

	)

161 
	#_IO_STDIO
 040000

	)

162 
	#_IO_DONT_CLOSE
 0100000

	)

163 
	#_IO_BOOLALPHA
 0200000

	)

166 
_IO_jump_t
; 
	g_IO_FILE
;

169 #ifde‡
_IO_MTSAFE_IO


170 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

171 
	~<bôs/°dio-lock.h
>

176 
	t_IO_lock_t
;

182 
	s_IO_m¨kî
 {

183 
_IO_m¨kî
 *
	m_√xt
;

184 
_IO_FILE
 *
	m_sbuf
;

188 
	m_pos
;

190 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

191 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

192 
	mpublic
:

193 
°ªamm¨kî
(
°ªambuf
 *
sb
);

194 ~
°ªamm¨kî
();

195 
ßvög
(Ë{  
	m_•os
 == -2; }

196 
dñè
(
°ªamm¨kî
&);

197 
dñè
();

202 
	e__codecvt_ªsu…


204 
	m__codecvt_ok
,

205 
	m__codecvt_∑πül
,

206 
	m__codecvt_îr‹
,

207 
	m__codecvt_noc⁄v


210 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


213 
	s_IO_codecvt


215 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

216 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

217 
	m__mb°©e_t
 *,

218 c⁄° 
	mwch¨_t
 *,

219 c⁄° 
	mwch¨_t
 *,

220 c⁄° 
	mwch¨_t
 **, *,

222 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *, *,

225 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

226 
	m__mb°©e_t
 *,

228 c⁄° **, 
	mwch¨_t
 *,

229 
	mwch¨_t
 *, wchar_t **);

230 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

231 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

232 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

233 c⁄° *, c⁄° *, 
	m_IO_size_t
);

234 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

236 
_IO_ic⁄v_t
 
	m__cd_ö
;

237 
_IO_ic⁄v_t
 
	m__cd_out
;

241 
	s_IO_wide_d©a


243 
wch¨_t
 *
	m_IO_ªad_±r
;

244 
wch¨_t
 *
	m_IO_ªad_íd
;

245 
wch¨_t
 *
	m_IO_ªad_ba£
;

246 
wch¨_t
 *
	m_IO_wrôe_ba£
;

247 
wch¨_t
 *
	m_IO_wrôe_±r
;

248 
wch¨_t
 *
	m_IO_wrôe_íd
;

249 
wch¨_t
 *
	m_IO_buf_ba£
;

250 
wch¨_t
 *
	m_IO_buf_íd
;

252 
wch¨_t
 *
	m_IO_ßve_ba£
;

253 
wch¨_t
 *
	m_IO_backup_ba£
;

255 
wch¨_t
 *
	m_IO_ßve_íd
;

257 
__mb°©e_t
 
	m_IO_°©e
;

258 
__mb°©e_t
 
	m_IO_œ°_°©e
;

259 
_IO_codecvt
 
	m_codecvt
;

261 
wch¨_t
 
	m_sh‹tbuf
[1];

263 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

267 
	s_IO_FILE
 {

268 
	m_Êags
;

269 
	#_IO_fûe_Êags
 
_Êags


	)

273 * 
	m_IO_ªad_±r
;

274 * 
	m_IO_ªad_íd
;

275 * 
	m_IO_ªad_ba£
;

276 * 
	m_IO_wrôe_ba£
;

277 * 
	m_IO_wrôe_±r
;

278 * 
	m_IO_wrôe_íd
;

279 * 
	m_IO_buf_ba£
;

280 * 
	m_IO_buf_íd
;

282 *
	m_IO_ßve_ba£
;

283 *
	m_IO_backup_ba£
;

284 *
	m_IO_ßve_íd
;

286 
_IO_m¨kî
 *
	m_m¨kîs
;

288 
_IO_FILE
 *
	m_chaö
;

290 
	m_fûío
;

292 
	m_blksize
;

294 
	m_Êags2
;

296 
_IO_off_t
 
	m_ﬁd_off£t
;

298 
	#__HAVE_COLUMN


	)

300 
	m_cur_cﬁumn
;

301 sig√d 
	m_vèbÀ_off£t
;

302 
	m_sh‹tbuf
[1];

306 
_IO_lock_t
 *
	m_lock
;

307 #ifde‡
_IO_USE_OLD_IO_FILE


310 
	s_IO_FILE_com∂ëe


312 
_IO_FILE
 
	m_fûe
;

314 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

315 
_IO_off64_t
 
	m_off£t
;

316 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


318 
_IO_codecvt
 *
	m_codecvt
;

319 
_IO_wide_d©a
 *
	m_wide_d©a
;

320 
_IO_FILE
 *
	m_‰ìªs_li°
;

321 *
	m_‰ìªs_buf
;

322 
size_t
 
	m_‰ìªs_size
;

324 *
	m__∑d1
;

325 *
	m__∑d2
;

326 *
	m__∑d3
;

327 *
	m__∑d4
;

328 
size_t
 
	m__∑d5
;

330 
	m_mode
;

332 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

336 #i‚de‡
__˝lu•lus


337 
_IO_FILE
 
	t_IO_FILE
;

340 
	g_IO_FILE_∂us
;

342 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

343 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

344 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

345 #i‚de‡
_LIBC


346 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

347 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

348 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

350 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

351 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

352 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

360 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

368 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

369 
	tsize_t
 
	t__n
);

377 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

380 
	t__io_˛o£_‚
 (*
	t__cookõ
);

383 #ifde‡
_GNU_SOURCE


385 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

386 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

387 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

388 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

393 
__io_ªad_‚
 *
	mªad
;

394 
__io_wrôe_‚
 *
	mwrôe
;

395 
__io_£ek_‚
 *
	m£ek
;

396 
__io_˛o£_‚
 *
	m˛o£
;

397 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

398 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

400 
	g_IO_cookõ_fûe
;

403 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

404 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

408 #ifde‡
__˝lu•lus


412 
__undîÊow
 (
_IO_FILE
 *Ë
__THROW
;

413 
__uÊow
 (
_IO_FILE
 *Ë
__THROW
;

414 
__ovîÊow
 (
_IO_FILE
 *, Ë
__THROW
;

415 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *Ë
__THROW
;

416 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *Ë
__THROW
;

417 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wöt_tË
__THROW
;

419 #i‡ 
__GNUC__
 >= 3

420 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

422 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

425 
	#_IO_gëc_u∆ocked
(
_Â
) \

426 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

427 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

428 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

429 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

430 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

431 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

432 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

433 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

434 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

435 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

437 
	#_IO_gëwc_u∆ocked
(
_Â
) \

438 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

440 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

441 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

442 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

443 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

444 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

445 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

447 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

448 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

450 
_IO_gëc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

451 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

452 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

453 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

455 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

458 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

459 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

461 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

462 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

463 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

465 #ifde‡
_IO_MTSAFE_IO


466 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

467 
	#_IO_Êockfûe
(
_Â
) \

468 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

469 
	#_IO_fu∆ockfûe
(
_Â
) \

470 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

472 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

473 
	#_IO_Êockfûe
(
_Â
Ë

	)

474 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

475 
	#_IO_·rylockfûe
(
_Â
Ë

	)

476 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

477 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

480 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

481 
_IO_va_li°
, *
__ª°ri˘
);

482 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

483 
_IO_va_li°
);

484 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_tË
__THROW
;

485 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_tË
__THROW
;

487 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , Ë
__THROW
;

488 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, Ë
__THROW
;

490 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

492 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


493 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

494 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

495 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

496 #i‡
__GNUC__
 >= 2

499 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


500 
	~<shlib-com∑t.h
>

501 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

502 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

503 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

504 c⁄° 
_IO_°dö_u£d
;

505 
wók_exã∫
 (
_IO_°dö_u£d
);

508 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


509 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

513 
	#_IO_fwide
(
__Â
, 
__mode
) \

514 ({ 
__ªsu…
 = (
__mode
); \

515 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

517 i‡((
__Â
)->
_mode
 == 0) \

519 (
__Â
)->
_mode
 = -1; \

520 
__ªsu…
 = (
__Â
)->
_mode
; \

522 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

523 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

525 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

526 
__ªsu…
; })

	)

529 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

530 
_IO_va_li°
, *
__ª°ri˘
);

531 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

532 
_IO_va_li°
);

533 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_tË
__THROW
;

534 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

537 #ifde‡
__LDBL_COMPAT


538 
	~<bôs/libio-ldbl.h
>

541 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_MREMAP
 1

	)

73 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

74 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

75 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

77 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

79 
	#_G_OPEN64
 
__›í64


	)

80 
	#_G_LSEEK64
 
__l£ek64


	)

81 
	#_G_MMAP64
 
__mm≠64


	)

82 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

85 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

87 
	#_G_BUFSIZ
 8192

	)

90 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

91 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

92 
	#_G_USING_THUNKS
 1

	)

93 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

94 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

97 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


98 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

100 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

99 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

101 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

279 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
, 
__group
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

282 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

283 **
__ª°ri˘
 
__íd±r
, 
__group
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

285 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
,

287 
__group
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

289 #i‚de‡
__°πﬁ_öã∫Æ_deföed


290 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
__group
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

294 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

296 #i‚de‡
__°πoul_öã∫Æ_deföed


297 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
,

299 
__ba£
, 
__group
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

301 
	#__°πoul_öã∫Æ_deföed
 1

	)

303 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


304 #i‚de‡
__°πﬁl_öã∫Æ_deföed


305 
__exãnsi⁄__


306 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

307 **
__ª°ri˘
 
__íd±r
,

308 
__ba£
, 
__group
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

310 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

312 #i‚de‡
__°πouŒ_öã∫Æ_deföed


313 
__exãnsi⁄__


314 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

315 
__ª°ri˘
 
__≈å
,

316 **
__ª°ri˘
 
__íd±r
,

317 
__ba£
, 
__group
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

323 #ifde‡
__USE_EXTERN_INLINES


326 
__BEGIN_NAMESPACE_STD


327 
__ölöe
 

328 
	`__NTH
 (
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

330  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

331 
	}
}

332 
__ölöe
 

333 
__NTH
 (
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

334 
__ba£
))

336  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

337 
	}
}

338 
__ölöe
 

339 
__NTH
 (
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

340 
__ba£
))

342  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

343 
	}
}

344 
__END_NAMESPACE_STD


346 #ifde‡
__USE_ISOC99


347 
__BEGIN_NAMESPACE_C99


348 
__ölöe
 

349 
__NTH
 (
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

351  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

352 
	}
}

353 #i‚de‡
__LDBL_COMPAT


354 
__ölöe
 

355 
__NTH
 (
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

357  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

358 
	}
}

360 
__END_NAMESPACE_C99


363 #ifde‡
__USE_BSD


364 
__exãnsi⁄__
 
__ölöe
 

365 
__NTH
 (
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

366 
__ba£
))

368  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

369 
	}
}

370 
__exãnsi⁄__
 
__ölöe
 

371 
__NTH
 (
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

372 
__ba£
))

374  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

375 
	}
}

378 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


379 
__BEGIN_NAMESPACE_C99


380 
__exãnsi⁄__
 
__ölöe
 

381 
__NTH
 (
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

382 
__ba£
))

384  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

385 
	}
}

386 
__exãnsi⁄__
 
__ölöe
 

387 
__NTH
 (
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

388 
__ba£
))

390  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

391 
	}
}

392 
__END_NAMESPACE_C99


395 
__BEGIN_NAMESPACE_STD


396 
__ölöe
 

397 
__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

399  
	`°πod
 (
__≈å
, (**Ë
NULL
);

400 
	}
}

401 
__ölöe
 

402 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

404  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

405 
	}
}

406 
__ölöe
 

407 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

409  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

410 
	}
}

411 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


414 
__BEGIN_NAMESPACE_C99


415 
__exãnsi⁄__
 
__ölöe
 

416 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

418  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

419 
	}
}

420 
__END_NAMESPACE_C99


425 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


429 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

432 
	$a64l
 (
__c⁄°
 *
__s
)

433 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

437 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


438 
	~<sys/ty≥s.h
>

445 
	$øndom
 (Ë
__THROW
;

448 
	$§™dom
 (
__£ed
Ë
__THROW
;

454 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

455 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

459 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 #ifde‡
__USE_MISC


467 
	søndom_d©a


469 
öt32_t
 *
Âå
;

470 
öt32_t
 *
Ωå
;

471 
öt32_t
 *
°©e
;

472 
ønd_ty≥
;

473 
ønd_deg
;

474 
ønd_£p
;

475 
öt32_t
 *
íd_±r
;

478 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

479 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

481 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

482 
__THROW
 
	`__n⁄nuŒ
 ((2));

484 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

485 
size_t
 
__°©ñí
,

486 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

487 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

489 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

490 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 
__BEGIN_NAMESPACE_STD


498 
	$ønd
 (Ë
__THROW
;

500 
	$§™d
 (
__£ed
Ë
__THROW
;

501 
__END_NAMESPACE_STD


503 #ifde‡
__USE_POSIX


505 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

509 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


513 
	$dønd48
 (Ë
__THROW
;

514 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

517 
	$Ã™d48
 (Ë
__THROW
;

518 
	$ƒ™d48
 (
__xsubi
[3])

519 
__THROW
 
	`__n⁄nuŒ
 ((1));

522 
	$mønd48
 (Ë
__THROW
;

523 
	$jønd48
 (
__xsubi
[3])

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

528 *
	$£ed48
 (
__£ed16v
[3])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #ifde‡
__USE_MISC


536 
	sdønd48_d©a


538 
__x
[3];

539 
__ﬁd_x
[3];

540 
__c
;

541 
__öô
;

542 
__a
;

546 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

547 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

548 
	$î™d48_r
 (
__xsubi
[3],

549 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

550 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

553 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

554 *
__ª°ri˘
 
__ªsu…
)

555 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

556 
	$ƒ™d48_r
 (
__xsubi
[3],

557 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

558 *
__ª°ri˘
 
__ªsu…
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

563 *
__ª°ri˘
 
__ªsu…
)

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$jønd48_r
 (
__xsubi
[3],

566 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

567 *
__ª°ri˘
 
__ªsu…
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

572 
__THROW
 
	`__n⁄nuŒ
 ((2));

574 
	$£ed48_r
 (
__£ed16v
[3],

575 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 
	$lc⁄g48_r
 (
__∑øm
[7],

578 
dønd48_d©a
 *
__buf„r
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


586 
	#__mÆloc_™d_ˇŒoc_deföed


	)

587 
__BEGIN_NAMESPACE_STD


589 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

591 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

592 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

593 
__END_NAMESPACE_STD


596 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


597 
__BEGIN_NAMESPACE_STD


600 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

601 
__THROW
 
__©åibuã_mÆloc__
 
__©åibuã_w¨n_unu£d_ªsu…__
;

603 
	$‰ì
 (*
__±r
Ë
__THROW
;

604 
__END_NAMESPACE_STD


606 #ifdef 
__USE_MISC


608 
	$c‰ì
 (*
__±r
Ë
__THROW
;

611 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


612 
	~<Æloˇ.h
>

615 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


617 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

620 #ifde‡
__USE_XOPEN2K


622 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

623 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
__BEGIN_NAMESPACE_STD


628 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

632 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

633 
__END_NAMESPACE_STD


635 #ifdef 
__USE_MISC


638 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

639 
__THROW
 
	`__n⁄nuŒ
 ((1));

642 
__BEGIN_NAMESPACE_STD


646 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

647 
__END_NAMESPACE_STD


649 #ifde‡
__USE_ISOC99


650 
__BEGIN_NAMESPACE_C99


653 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

654 
__END_NAMESPACE_C99


658 
__BEGIN_NAMESPACE_STD


660 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 
__END_NAMESPACE_STD


665 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

666 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

668 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


672 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


678 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

679 
__THROW
 
	`__n⁄nuŒ
 ((2));

682 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

685 #ifdef 
__USE_MISC


689 
	$˛óªnv
 (Ë
__THROW
;

693 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


698 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

708 #i‚de‡
__USE_FILE_OFFSET64


709 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 #ifde‡
__REDIRECT


712 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

713 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

715 
	#mk°emp
 
mk°emp64


	)

718 #ifde‡
__USE_LARGEFILE64


719 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #ifde‡
__USE_BSD


729 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

733 
__BEGIN_NAMESPACE_STD


738 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

739 
__END_NAMESPACE_STD


742 #ifdef 
__USE_GNU


746 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

750 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


757 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

758 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

763 #i‚de‡
__COMPAR_FN_T


764 
	#__COMPAR_FN_T


	)

765 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

767 #ifdef 
__USE_GNU


768 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

772 
__BEGIN_NAMESPACE_STD


775 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

776 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

777 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

781 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

782 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

786 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__BEGIN_NAMESPACE_STD


800 
div_t
 
	$div
 (
__numî
, 
__díom
)

801 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

802 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

803 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_ISOC99


807 
__BEGIN_NAMESPACE_C99


808 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

809 
__díom
)

810 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

811 
__END_NAMESPACE_C99


815 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


822 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

823 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

829 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

834 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 #ifde‡
__USE_MISC


840 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

841 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

843 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

845 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

846 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

852 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

853 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

854 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

855 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

856 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

857 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

860 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

861 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

862 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

863 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

864 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

865 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

871 
__BEGIN_NAMESPACE_STD


874 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

877 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

878 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

881 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

885 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

886 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

888 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

889 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

890 
__THROW
;

891 
__END_NAMESPACE_STD


894 #ifde‡
__USE_SVID


899 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

903 #ifde‡
__USE_XOPEN_EXTENDED


910 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

911 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

912 **
__ª°ri˘
 
__vÆuï
)

913 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

917 #ifde‡
__USE_XOPEN


919 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

925 #ifde‡
__USE_XOPEN2K


927 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

930 #ifde‡
__USE_XOPEN


935 
	$gø¡±
 (
__fd
Ë
__THROW
;

939 
	$u∆ock±
 (
__fd
Ë
__THROW
;

944 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

947 #ifde‡
__USE_GNU


951 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

952 
__THROW
 
	`__n⁄nuŒ
 ((2));

955 
	`gë±
 ();

958 #ifde‡
__USE_BSD


962 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

963 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


969 
	~<bôs/°dlib.h
>

971 #ifde‡
__LDBL_COMPAT


972 
	~<bôs/°dlib-ldbl.h
>

976 #unde‡
__√ed_mÆloc_™d_ˇŒoc


978 
__END_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

138 #i‡
__GNUC_PREREQ
 (2,97)

140 
	#__Êex¨r
 []

	)

142 #ifde‡
__GNUC__


143 
	#__Êex¨r
 [0]

	)

145 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

146 
	#__Êex¨r
 []

	)

149 
	#__Êex¨r
 [1]

	)

165 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

167 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

168 #ifde‡
__˝lu•lus


169 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

170 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

172 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

173 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

175 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

176 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

189 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

190 
	#__©åibuã__
(
xyz
Ë

	)

196 #i‡
__GNUC_PREREQ
 (2,96)

197 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

199 
	#__©åibuã_mÆloc__


	)

205 #i‡
__GNUC_PREREQ
 (2,96)

206 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

208 
	#__©åibuã_puª__


	)

214 #i‡
__GNUC_PREREQ
 (3,1)

215 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

216 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

218 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

219 
	#__©åibuã_noölöe__


	)

223 #i‡
__GNUC_PREREQ
 (3,2)

224 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

226 
	#__©åibuã_dïªˇãd__


	)

235 #i‡
__GNUC_PREREQ
 (2,8)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

238 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

245 #i‡
__GNUC_PREREQ
 (2,97)

246 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

247 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

249 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

254 #i‡
__GNUC_PREREQ
 (3,3)

255 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

257 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡
__GNUC_PREREQ
 (3,4)

263 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

264 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

265 #i‡
__USE_FORTIFY_LEVEL
 > 0

266 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

269 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

271 #i‚de‡
__wur


272 
	#__wur


	)

276 #i‡
__GNUC_PREREQ
 (3,2)

277 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

279 
	#__Æways_ölöe
 
__ölöe


	)

286 #i‡!
__GNUC_PREREQ
 (2,8)

287 
	#__exãnsi⁄__


	)

291 #i‡!
__GNUC_PREREQ
 (2,92)

292 
	#__ª°ri˘


	)

298 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


299 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

301 #ifde‡
__GNUC__


302 
	#__ª°ri˘_¨r


	)

304 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

305 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

308 
	#__ª°ri˘_¨r


	)

313 
	~<bôs/w‹dsize.h
>

315 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


316 
	#__LDBL_COMPAT
 1

	)

317 #ifde‡
__REDIRECT


318 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

319 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

320 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

321 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

322 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

323 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

324 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

325 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

326 
	#__LDBL_REDIR_DECL
(
«me
) \

327 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

330 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


331 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

332 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

333 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

334 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

335 
	#__LDBL_REDIR_DECL
(
«me
)

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTF
(
NAME
Ë
__libc_±hªad_fun˘i⁄s
.
±r_
##
	)
NAME

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
	`PTF
(
FUNC
Ë!
NULL
 ? PTF(FUNCË
ARGS
 : 
ELSE
)

	)

157 
	#PTF
(
NAME
Ë
	)
NAME

158 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

159 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

165 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

166 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

168 
	#__libc_lock_öô
(
NAME
) \

169 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

171 
	#__libc_rwlock_öô
(
NAME
) \

172 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

176 
	#__libc_lock_öô_ªcursive
(
NAME
) \

177 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

179 
	#__libc_lock_öô_ªcursive
(
NAME
) \

181 i‡(
__±hªad_muãx_öô
 !
NULL
) \

183 
±hªad_muãx©å_t
 
__©å
; \

184 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

185 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

186 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

187 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

189 } 0)

	)

192 
	#__πld_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

207 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

208 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

210 
	#__libc_lock_föi
(
NAME
) \

211 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

213 
	#__libc_rwlock_föi
(
NAME
) \

214 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

217 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

218 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

220 
	#__libc_lock_föi_ªcursive
(
NAME
) \

221 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

225 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

226 
	#__libc_lock_lock
(
NAME
) \

227 ({ 
	`Œl_lock
 (
NAME
); 0; })

	)

229 
	#__libc_lock_lock
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

232 
	#__libc_rwlock_rdlock
(
NAME
) \

233 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

234 
	#__libc_rwlock_wæock
(
NAME
) \

235 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

238 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

239 
	#__libc_lock_lock_ªcursive
(
NAME
) \

241 *
£lf
 = 
THREAD_SELF
; \

242 i‡((
NAME
).
ow√r
 !
£lf
) \

244 
	`Œl_lock
 ((
NAME
).
lock
); \

245 (
NAME
).
ow√r
 = 
£lf
; \

247 ++(
NAME
).
˙t
; \

248 } 0)

	)

250 
	#__libc_lock_lock_ªcursive
(
NAME
) \

251 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

255 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

256 
	#__libc_lock_åylock
(
NAME
) \

257 
	`Œl_åylock
 (
NAME
)

	)

259 
	#__libc_lock_åylock
(
NAME
) \

260 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

262 
	#__libc_rwlock_åyrdlock
(
NAME
) \

263 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

264 
	#__libc_rwlock_åywæock
(
NAME
) \

265 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

268 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

269 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

271 
ªsu…
 = 0; \

272 *
£lf
 = 
THREAD_SELF
; \

273 i‡((
NAME
).
ow√r
 !
£lf
) \

275 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

277 (
NAME
).
ow√r
 = 
£lf
; \

278 (
NAME
).
˙t
 = 1; \

281 
ªsu…
 = 
EBUSY
; \

284 ++(
NAME
).
˙t
; \

285 
ªsu…
; \

286 })

	)

288 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

289 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

292 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

293 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 
	#__libc_lock_u∆ock
(
NAME
) \

298 
	`Œl_u∆ock
 (
NAME
)

	)

300 
	#__libc_lock_u∆ock
(
NAME
) \

301 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

303 
	#__libc_rwlock_u∆ock
(
NAME
) \

304 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

307 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

309 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

311 i‡(--(
NAME
).
˙t
 == 0) \

313 (
NAME
).
ow√r
 = 
NULL
; \

314 
	`Œl_u∆ock
 ((
NAME
).
lock
); \

316 } 0)

	)

318 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

319 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


323 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

324 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

326 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

327 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

329 
	#__πld_lock_lock_ªcursive
(
NAME
) \

330 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

332 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

333 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

335 
	#__πld_lock_lock_ªcursive
(
NAME
) \

336 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

338 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

339 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

343 #i‡
PTHREAD_ONCE_INIT
 == 0

346 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

347 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

349 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

350 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

354 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

356 i‡(
	`PTF
(
__±hªad_⁄˚
Ë!
NULL
) \

357 
	`PTF
(
__±hªad_⁄˚
Ë(&(
ONCE_CONTROL
), 
INIT_FUNCTION
); \

358 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

359 
	`INIT_FUNCTION
 (); \

360 (
ONCE_CONTROL
) |= 2; \

362 } 0)

	)

369 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

370 (*
routöe
Ë(*), *
¨g
);

371 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

372 
execuã
);

373 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

374 (*
routöe
Ë(*), *
¨g
);

375 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

376 
execuã
);

379 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

380 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

381 
_avaû
; \

382 i‡(
DOIT
) { \

383 
_avaû
 = 
	`PTF
(
_±hªad_˛ónup_push_de„r
Ë!
NULL
; \

384 i‡(
_avaû
) { \

385 
	`PTF
(
_±hªad_˛ónup_push_de„r
Ë(&
_buf„r
, 
FCT
, 
ARG
); \

387 
_buf„r
.
__routöe
 = (
FCT
); \

388 
_buf„r
.
__¨g
 = (
ARG
); \

391 
_avaû
 = 0; \

392 }

	)

395 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

396 i‡(
_avaû
) { \

397 
	`PTF
(
_±hªad_˛ónup_p›_ª°‹e
Ë(&
_buf„r
, 
DOIT
); \

398 } i‡(
DOIT
) \

399 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

400 
	}

	)
}

403 
	#__libc_˛ónup_íd
(
DOIT
) \

404 i‡(
_avaû
) { \

405 
	`PTF
(
_±hªad_˛ónup_p›_ª°‹e
Ë(&
_buf„r
, 
DOIT
); \

406 } i‡(
DOIT
) \

407 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

411 
__ölöe
 

412 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

414 i‡(
f
->
__do_ô
)

415 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

416 
	}
}

418 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

420 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

421 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

422 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

423 .
__do_ô
 = 1 };

	)

425 
	#__libc_˛ónup_p›
(
execuã
) \

426 
__˛‰ame
.
__do_ô
 = (
execuã
); \

427 } 0)

	)

431 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

432 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

435 
	#__libc_gë•ecific
(
KEY
) \

436 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

439 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

440 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

446 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

447 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

448 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

449 (*
__∑ª¡
) (),

450 (*
__chûd
) (),

451 *
__dso_h™dÀ
);

456 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

457 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

459 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

461 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

463 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

465 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

467 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

469 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

471 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

472 
__köd
);

474 #ifde‡
__USE_UNIX98


475 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

476 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

478 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

480 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

482 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

484 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

486 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

488 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

491 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

492 (*
__de°r_fun˘i⁄
) (*));

494 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

495 
__c⁄°
 *
__poöãr
);

497 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

499 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

500 (*
__öô_routöe
) ());

502 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

503 (*
__∑ª¡
) (),

504 (*
__chûd
) ());

510 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


511 #ifde‡
wók_exã∫


512 #i‡
_LIBC


513 
	~<bp-sym.h
>

515 
	#BP_SYM
 (
sym
Ë
	)
sym

517 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

518 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

519 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

520 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

521 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

522 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

523 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

524 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

525 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

526 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

527 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

528 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

529 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

530 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

531 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

532 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

533 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

536 
	$wók_exã∫
 (
__±hªad_öôülize
)

537 
	$wók_exã∫
 (
__±hªad_©f‹k
)

538 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

542 #¥agm®
wók
 
__±hªad_muãx_öô


543 #¥agm®
wók
 
__±hªad_muãx_de°roy


544 #¥agm®
wók
 
__±hªad_muãx_lock


545 #¥agm®
wók
 
__±hªad_muãx_åylock


546 #¥agm®
wók
 
__±hªad_muãx_u∆ock


547 #¥agm®
wók
 
__±hªad_muãx©å_öô


548 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


549 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


550 #¥agm®
wók
 
__±hªad_rwlock_de°roy


551 #¥agm®
wók
 
__±hªad_rwlock_rdlock


552 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


553 #¥agm®
wók
 
__±hªad_rwlock_wæock


554 #¥agm®
wók
 
__±hªad_rwlock_åywæock


555 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


556 #¥agm®
wók
 
__±hªad_key_¸óã


557 #¥agm®
wók
 
__±hªad_£t•ecific


558 #¥agm®
wók
 
__±hªad_gë•ecific


559 #¥agm®
wók
 
__±hªad_⁄˚


560 #¥agm®
wók
 
__±hªad_öôülize


561 #¥agm®
wók
 
__±hªad_©f‹k


562 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


563 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


564 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 
	$__LDBL_REDIR1_DECL
 (
__°πﬁd_öã∫Æ
, 
__°πod_öã∫Æ
)

36 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


37 #ifde‡
__USE_MISC


38 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

40 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

41 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

42 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

31 
__Æways_ölöe
 
__wur
 *

32 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

34 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

35  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

37  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

38 
	}
}

41 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

42 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

43 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

44 
size_t
 
__buÊí
), 
±¢ame_r
)

45 
	`__n⁄nuŒ
 ((2));

47 
__Æways_ölöe
 

48 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

50 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

51 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

52  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

53  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

54 
	}
}

57 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

58 
__THROW
 
__wur
;

59 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

60 
w˘omb
Ë
__wur
;

62 
__Æways_ölöe
 
__wur
 

63 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

68 
	#__STDLIB_MB_LEN_MAX
 16

	)

69 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


72 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

73  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

74  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

75 
	}
}

78 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

79 
__c⁄°
 *
__ª°ri˘
 
__§c
,

80 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

81 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

82 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

83 
__c⁄°
 *
__ª°ri˘
 
__§c
,

84 
size_t
 
__Àn
), 
mb°owcs
);

86 
__Æways_ölöe
 
size_t


87 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

88 
size_t
 
__Àn
))

90 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

91 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

92 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

93  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

94 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

95  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

96 
	}
}

99 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

100 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

103 (*
__ª°ri˘
 
__d°
,

104 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
wc°ombs
);

107 
__Æways_ölöe
 
size_t


108 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

109 
size_t
 
__Àn
))

111 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

113  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

114  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

115 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

16 
	#XATTR_NAME_MAX
 255

	)

17 
	#XATTR_SIZE_MAX
 65536

	)

18 
	#XATTR_LIST_MAX
 65536

	)

20 
	#RTSIG_MAX
 32

	)

	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


327 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

328 
__ölöe
 
wöt_t


329 
	`__NTH
 (
	$btowc
 (
__c
))

330 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

331 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

333 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

334 
__ölöe
 

335 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

337 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

339 
__ölöe
 
size_t


340 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

341 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

342 {  (
__ps
 !
NULL


343 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

346 
__BEGIN_NAMESPACE_C99


349 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

350 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

351 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

355 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

356 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

358 
__END_NAMESPACE_C99


361 #ifdef 
__USE_GNU


364 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

365 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

366 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

370 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

371 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

372 
size_t
 
__nwc
, size_à
__Àn
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN


380 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

384 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

388 
__BEGIN_NAMESPACE_C99


391 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

392 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

394 #ifde‡
__USE_ISOC99


396 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

397 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

398 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

399 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

405 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

406 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

410 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

411 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

412 
__THROW
;

414 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

417 
__exãnsi⁄__


418 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

419 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

420 
__THROW
;

424 
__exãnsi⁄__


425 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

426 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

427 
__ba£
Ë
__THROW
;

429 
__END_NAMESPACE_C99


431 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


434 
__exãnsi⁄__


435 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

436 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

437 
__THROW
;

441 
__exãnsi⁄__


442 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

443 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

444 
__ba£
Ë
__THROW
;

447 #ifde‡
__USE_GNU


461 
	~<xloˇÀ.h
>

465 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

467 
__loˇÀ_t
 
__loc
Ë
__THROW
;

469 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

470 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

471 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

473 
__exãnsi⁄__


474 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

475 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

476 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

478 
__exãnsi⁄__


479 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

480 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

481 
__ba£
, 
__loˇÀ_t
 
__loc
)

482 
__THROW
;

484 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

485 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

486 
__THROW
;

488 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

490 
__THROW
;

492 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

493 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

494 
__loˇÀ_t
 
__loc
Ë
__THROW
;

500 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

502 
__THROW
;

503 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

505 
__THROW
;

506 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

507 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

508 
__group
Ë
__THROW
;

510 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


511 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

512 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

513 
__ba£
, 
__group
Ë
__THROW
;

514 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

516 #i‚de‡
__wc°oul_öã∫Æ_deföed


517 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

518 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

519 
__ba£
, 
__group
Ë
__THROW
;

520 
	#__wc°oul_öã∫Æ_deföed
 1

	)

522 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


523 
__exãnsi⁄__


524 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

525 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

526 
__ba£
, 
__group
Ë
__THROW
;

527 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

529 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


530 
__exãnsi⁄__


531 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

532 
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **

534 
__ª°ri˘
 
__íd±r
,

535 
__ba£
,

536 
__group
Ë
__THROW
;

537 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

541 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

543 
__BEGIN_NAMESPACE_C99


545 
__ölöe
 

546 
	`__NTH
 (
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

548 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

549 
__ölöe
 

550 
__NTH
 (
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

552 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

553 
__ölöe
 

554 
__NTH
 (
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

556 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

557 
__END_NAMESPACE_C99


559 #ifde‡
__USE_GNU


560 
__ölöe
 

561 
__NTH
 (
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

562 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

563 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

564 #i‚de‡
__LDBL_COMPAT


565 
__ölöe
 

566 
__NTH
 (
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

567 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

568 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

570 
__exãnsi⁄__


571 
__ölöe
 

572 
__NTH
 (
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

573 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

574 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

575 
__exãnsi⁄__


576 
__ölöe
 

577 
__NTH
 (
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

578 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

579 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

584 #ifdef 
__USE_GNU


587 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

591 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

592 
__THROW
;

597 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


598 
__BEGIN_NAMESPACE_C99


601 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

608 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

609 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

615 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

618 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
 ;

626 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

627 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

628 
__gnuc_va_li°
 
__¨g
)

634 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

635 
__gnuc_va_li°
 
__¨g
)

639 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

640 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

641 
__gnuc_va_li°
 
__¨g
)

642 
__THROW
 ;

649 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

650 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

656 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

659 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

660 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

661 
__THROW
 ;

663 
__END_NAMESPACE_C99


666 #ifde‡
__USE_ISOC99


667 
__BEGIN_NAMESPACE_C99


673 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

674 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

675 
__gnuc_va_li°
 
__¨g
)

681 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

682 
__gnuc_va_li°
 
__¨g
)

685 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

686 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

687 
__gnuc_va_li°
 
__¨g
)

688 
__THROW
 ;

690 
__END_NAMESPACE_C99


694 
__BEGIN_NAMESPACE_C99


699 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

700 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

706 
wöt_t
 
	`gëwch¨
 ();

713 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

714 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

720 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

728 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

735 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

736 
__FILE
 *
__ª°ri˘
 
__°ªam
);

743 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

744 
__END_NAMESPACE_C99


747 #ifde‡
__USE_GNU


755 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

756 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

764 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

772 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

781 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

782 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

791 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

792 
__FILE
 *
__ª°ri˘
 
__°ªam
);

800 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

801 
__FILE
 *
__ª°ri˘
 
__°ªam
);

805 
__BEGIN_NAMESPACE_C99


809 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

810 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

811 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

812 
__END_NAMESPACE_C99


814 #ifde‡
__USE_GNU


815 
	~<xloˇÀ.h
>

819 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

820 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

821 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

822 
__loˇÀ_t
 
__loc
Ë
__THROW
;

831 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


832 
	#__√ed_iswxxx


	)

833 
	~<w˘y≥.h
>

837 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


838 
	~<bôs/wch¨2.h
>

841 #ifde‡
__LDBL_COMPAT


842 
	~<bôs/wch¨-ldbl.h
>

845 
__END_DECLS


	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__wrôî
;

133 } 
	m__d©a
;

134 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

135 
	m__Æign
;

136 } 
	t±hªad_rwlock_t
;

140 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

141 
	m__Æign
;

142 } 
	t±hªad_rwlock©å_t
;

146 #ifde‡
__USE_XOPEN2K


148 vﬁ©ûê
	t±hªad_•ölock_t
;

155 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

156 
	m__Æign
;

157 } 
	t±hªad_b¨rõr_t
;

161 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

162 
	m__Æign
;

163 } 
	t±hªad_b¨rõøâr_t
;

168 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 
__LDBL_REDIR_DECL
 (
fwsˇnf
);

33 
__LDBL_REDIR_DECL
 (
wsˇnf
);

34 
__LDBL_REDIR_DECL
 (
swsˇnf
);

35 
	g__END_NAMESPACE_C99


38 #ifde‡
__USE_ISOC99


39 
__BEGIN_NAMESPACE_C99


40 
__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

41 
__LDBL_REDIR_DECL
 (
vfwsˇnf
);

42 
__LDBL_REDIR_DECL
 (
vwsˇnf
);

43 
__LDBL_REDIR_DECL
 (
vswsˇnf
);

44 
	g__END_NAMESPACE_C99


47 #ifde‡
__USE_GNU


48 
__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

51 
__LDBL_REDIR1_DECL
 (
__wc°ﬁd_öã∫Æ
, 
__wc°od_öã∫Æ
);

53 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


54 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

55 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

56 #i‡
__USE_FORTIFY_LEVEL
 > 1

57 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

58 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

59 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

60 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

33 
__Æways_ölöe
 
wch¨_t
 *

34 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

35 
size_t
 
__n
))

37 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

38  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

39  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

40 
	}
}

43 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

44 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

45 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

46 
__c⁄°
 
wch¨_t
 *
__s2
,

47 
size_t
 
__n
), 
wmemmove
);

49 
__Æways_ölöe
 
wch¨_t
 *

50 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

51 
size_t
 
__n
))

53 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

54  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

55  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

56 
	}
}

59 #ifde‡
__USE_GNU


60 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

61 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

62 
size_t
 
__ns1
Ë
__THROW
;

63 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

64 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

65 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

66 
size_t
 
__n
), 
wmemp˝y
);

68 
__Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

70 
size_t
 
__n
))

72 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

74  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

75 
	}
}

79 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

80 
size_t
 
__ns
Ë
__THROW
;

81 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

82 
size_t
 
__n
), 
wmem£t
);

84 
__Æways_ölöe
 
wch¨_t
 *

85 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

87 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

88  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

89  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

90 
	}
}

93 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

94 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

95 
size_t
 
__n
Ë
__THROW
;

96 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

97 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

98 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

100 
__Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

103 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

104  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

105  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

106 
	}
}

109 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

110 
size_t
 
__de°Àn
Ë
__THROW
;

111 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

112 
__c⁄°
 
wch¨_t
 *
__§c
),

113 
w˝˝y
);

115 
__Æways_ölöe
 
wch¨_t
 *

116 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

119  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

120  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

121 
	}
}

124 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

125 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

128 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

129 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

130 
size_t
 
__n
), 
wc¢˝y
);

132 
__Æways_ölöe
 
wch¨_t
 *

133 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

137  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

138 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

139  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

144 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

145 
size_t
 
__de°Àn
Ë
__THROW
;

146 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

147 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
), 
w˝n˝y
);

151 
__Æways_ölöe
 
wch¨_t
 *

152 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

155 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

156  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

157 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

158  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

159 
	}
}

162 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

163 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

166 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

167 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

169 
__Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

180 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢ˇt
);

186 
__Æways_ölöe
 
wch¨_t
 *

187 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

189 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

190  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

191 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

192  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

193 
	}
}

196 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

197 
__Êag
, 
size_t
 
__s_Àn
,

198 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

199 
__THROW
 ;

202 
	#sw¥ötf
(
s
, 
n
, ...) \

203 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

204 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
__VA_ARGS__
) \

205 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

208 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

209 
__Êag
, 
size_t
 
__s_Àn
,

210 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

211 
__gnuc_va_li°
 
__¨g
)

212 
__THROW
 ;

214 
	#vsw¥ötf
(
s
, 
n
, 
fmt
, 
≠
) \

215 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

216 ? 
	`__vsw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
fmt
, 
≠
) \

217 : 
	`vsw¥ötf
 (
s
, 
n
, 
fmt
, 
≠
))

	)

220 #i‡
__USE_FORTIFY_LEVEL
 > 1

222 
	`__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

223 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

224 
	`__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

226 
	`__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

227 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

228 
__gnuc_va_li°
 
__≠
);

229 
	`__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

230 
__gnuc_va_li°
 
__≠
);

232 
	#w¥ötf
(...) \

233 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

234 
	#fw¥ötf
(
°ªam
, ...) \

235 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

236 
	#vw¥ötf
(
f‹m©
, 
≠
) \

237 
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

238 
	#vfw¥ötf
(
°ªam
, 
f‹m©
, 
≠
) \

239 
	`__vfw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

243 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

246 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

247 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

249 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

250 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

252 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

253 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

254  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 #ifde‡
__USE_GNU


259 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

260 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

261 
__wur
;

262 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

263 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

264 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

265 
__wur
;

267 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

268 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

270 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

271 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

272  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

273  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

274 
	}
}

278 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

279 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

280 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

281 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

282 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

284 
__Æways_ölöe
 
__wur
 
size_t


285 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

290 
	#__WCHAR_MB_LEN_MAX
 16

	)

291 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


294 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

295  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

296  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

297 
	}
}

300 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

301 
__c⁄°
 **
__ª°ri˘
 
__§c
,

302 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

303 
size_t
 
__d°Àn
Ë
__THROW
;

304 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

305 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

306 
__c⁄°
 **
__ª°ri˘
 
__§c
,

307 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

308 
mb§towcs
);

310 
__Æways_ölöe
 
size_t


311 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

312 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

314 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

315 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

316 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

317  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

318 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

319  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

320 
	}
}

323 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

324 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

325 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

326 
size_t
 
__d°Àn
Ë
__THROW
;

327 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

328 (*
__ª°ri˘
 
__d°
,

329 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

330 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

331 
wc§tombs
);

333 
__Æways_ölöe
 
size_t


334 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

335 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

337 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

338 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

339  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

340  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

341 
	}
}

344 #ifde‡
__USE_GNU


345 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

346 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

347 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

348 
size_t
 
__d°Àn
Ë
__THROW
;

349 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

350 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

351 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

352 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

353 
mb¢πowcs
);

355 
__Æways_ölöe
 
size_t


356 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

357 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

359 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

360 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

361 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

362  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

363 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

364  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

365 
	}
}

368 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

369 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

370 
size_t
 
__nwc
, size_à
__Àn
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

372 
__THROW
;

373 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

374 (*
__ª°ri˘
 
__d°
,

375 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

376 
size_t
 
__nwc
, size_à
__Àn
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

379 
__Æways_ölöe
 
size_t


380 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

381 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

383 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

384 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

385  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

386  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

387 
	}
}

	@/usr/include/pthread.h

19 #i‚de‡
_PTHREAD_H


20 
	#_PTHREAD_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	#__√ed_sig£t_t


	)

27 
	~<sig«l.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #ifde‡
__USE_UNIX98


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_GNU


68 
	mPTHREAD_MUTEX_STALLED_NP
,

69 
	mPTHREAD_MUTEX_ROBUST_NP


74 #ifde‡
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__WORDSIZE
 == 64

87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


122 #i‡
__WORDSIZE
 == 64

123 
	#PTHREAD_RWLOCK_INITIALIZER
 \

124 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

129 #ifde‡
__USE_GNU


130 #i‡
__WORDSIZE
 == 64

131 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

133 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 0 } }

	)

145 
	mPTHREAD_INHERIT_SCHED
,

146 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

147 
	mPTHREAD_EXPLICIT_SCHED


148 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

155 
	mPTHREAD_SCOPE_SYSTEM
,

156 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

157 
	mPTHREAD_SCOPE_PROCESS


158 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

165 
	mPTHREAD_PROCESS_PRIVATE
,

166 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

167 
	mPTHREAD_PROCESS_SHARED


168 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

174 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

178 
	s_±hªad_˛ónup_buf„r


180 (*
	m__routöe
) (*);

181 *
	m__¨g
;

182 
	m__ˇn˚…y≥
;

183 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

189 
	mPTHREAD_CANCEL_ENABLE
,

190 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

191 
	mPTHREAD_CANCEL_DISABLE


192 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

196 
	mPTHREAD_CANCEL_DEFERRED
,

197 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

198 
	mPTHREAD_CANCEL_ASYNCHRONOUS


199 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

201 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

205 
	#PTHREAD_ONCE_INIT
 0

	)

208 #ifde‡
__USE_XOPEN2K


212 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

216 
__BEGIN_DECLS


221 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

222 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

223 *(*
__°¨t_routöe
) (*),

224 *
__ª°ri˘
 
__¨g
Ë
__THROW
;

230 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

238 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

240 #ifde‡
__USE_GNU


243 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

251 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

252 
__c⁄°
 
time•ec
 *
__ab°ime
);

259 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

263 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

266 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

274 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

277 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

280 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

281 *
__dëach°©e
Ë
__THROW
;

284 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

285 
__dëach°©e
Ë
__THROW
;

289 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

290 
size_t
 *
__gu¨dsize
Ë
__THROW
;

293 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

294 
size_t
 
__gu¨dsize
Ë
__THROW
;

298 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


299 
__©å
,

300 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

301 
__THROW
;

304 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

305 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


306 
__∑øm
Ë
__THROW
;

309 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

311 
__THROW
;

314 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

315 
__THROW
;

318 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__öhîô
)

320 
__THROW
;

323 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

324 
__öhîô
Ë
__THROW
;

328 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

329 *
__ª°ri˘
 
__sc›e
Ë
__THROW
;

332 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

333 
__THROW
;

336 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


337 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

338 
__THROW
 
__©åibuã_dïªˇãd__
;

344 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

345 *
__°ackaddr
)

346 
__THROW
 
__©åibuã_dïªˇãd__
;

349 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

351 
__THROW
;

356 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

357 
size_t
 
__°acksize
Ë
__THROW
;

359 #ifde‡
__USE_XOPEN2K


361 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

362 **
__ª°ri˘
 
__°ackaddr
,

363 
size_t
 *
__ª°ri˘
 
__°acksize
Ë
__THROW
;

368 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

369 
size_t
 
__°acksize
Ë
__THROW
;

372 #ifde‡
__USE_GNU


375 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__˝u£tsize
,

377 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

381 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

382 
size_t
 
__˝u£tsize
,

383 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

389 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
Ë
__THROW
;

397 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

398 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

399 
__THROW
;

402 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

403 *
__ª°ri˘
 
__pﬁicy
,

404 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

405 
__THROW
;

408 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

409 
__THROW
;

412 #ifde‡
__USE_UNIX98


414 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

417 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

420 #ifde‡
__USE_GNU


425 
	$±hªad_yõld
 (Ë
__THROW
;

430 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

431 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

434 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

435 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

448 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

449 (*
__öô_routöe
) ());

460 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

464 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

467 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

472 
	`±hªad_ã°ˇn˚l
 ();

481 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

482 
__mask_was_ßved
;

483 } 
__ˇn˚l_jmp_buf
[1];

484 *
__∑d
[4];

485 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

488 #i‚de‡
__˛ónup_f˘_©åibuã


489 
	#__˛ónup_f˘_©åibuã


	)

494 
	s__±hªad_˛ónup_‰ame


496 (*
__ˇn˚l_routöe
) (*);

497 *
__ˇn˚l_¨g
;

498 
__do_ô
;

499 
__ˇn˚l_ty≥
;

502 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


503 #ifde‡
__˝lu•lus


505 ˛as†
	c__±hªad_˛ónup_˛ass


507 (*
__ˇn˚l_routöe
) (*);

508 *
__ˇn˚l_¨g
;

509 
__do_ô
;

510 
__ˇn˚l_ty≥
;

512 
public
:

513 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

514 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

515 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

516 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

517 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

518 &
__ˇn˚l_ty≥
); 
	}
}

519 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

529 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

531 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

535 
	#±hªad_˛ónup_p›
(
execuã
) \

536 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

537 } 0)

	)

539 #ifde‡
__USE_GNU


543 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

545 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

546 
__˛‰ame
.
	`__de„r
 ()

	)

551 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

552 
__˛‰ame
.
	`__ª°‹e
 (); \

553 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

554 } 0)

	)

561 
__ölöe
 

562 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

564 i‡(
__‰ame
->
__do_ô
)

565 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

566 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

578 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

579 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

580 .
__do_ô
 = 1 };

	)

584 
	#±hªad_˛ónup_p›
(
execuã
) \

585 
__˛‰ame
.
__do_ô
 = (
execuã
); \

586 } 0)

	)

588 #ifde‡
__USE_GNU


592 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

594 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

595 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

596 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

597 .
__do_ô
 = 1 }; \

598 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

599 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

604 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

605 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

606 
__˛‰ame
.
__do_ô
 = (
execuã
); \

607 } 0)

	)

618 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

620 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

621 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

622 *
__ˇn˚l_¨g
 = (
¨g
); \

623 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

624 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

625 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

627 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

628 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

632 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

633 dÿ{

	)

634 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

635 
__˛ónup_f˘_©åibuã
;

639 
	#±hªad_˛ónup_p›
(
execuã
) \

641 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

642 i‡(
execuã
) \

643 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

644 } 0)

	)

645 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

646 
__˛ónup_f˘_©åibuã
;

648 #ifde‡
__USE_GNU


652 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

654 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

655 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

656 *
__ˇn˚l_¨g
 = (
¨g
); \

657 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

658 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

659 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

661 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

662 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

666 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

667 dÿ{

	)

668 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

669 
__˛ónup_f˘_©åibuã
;

674 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

676 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

677 i‡(
execuã
) \

678 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

679 
	}
} 0)

	)

680 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

686 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

687 #i‚de‡
SHARED


688 
	`__©åibuã__
 ((
__wók__
))

694 
__jmp_buf_èg
;

695 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

701 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

702 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

703 
__THROW
;

706 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

709 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
_muãx
Ë
__THROW
;

712 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

714 #ifde‡
__USE_XOPEN2K


716 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

717 
__c⁄°
 
time•ec
 *
__ª°ri˘


718 
__ab°ime
Ë
__THROW
;

722 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

725 #ifde‡
__USE_UNIX98


727 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

728 
__ª°ri˘
 
__muãx
,

729 *
__ª°ri˘
 
__¥io˚ûög
)

730 
__THROW
;

734 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

735 
__¥io˚ûög
,

736 *
__ª°ri˘
 
__ﬁd_˚ûög
)

737 
__THROW
;

741 #ifde‡
__USE_GNU


743 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

751 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

754 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

757 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

758 
__ª°ri˘
 
__©å
,

759 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

762 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

763 
__psh¨ed
Ë
__THROW
;

765 #ifde‡
__USE_UNIX98


767 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


768 
__©å
, *
__ª°ri˘
 
__köd
Ë
__THROW
;

773 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

774 
__THROW
;

777 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

778 
__ª°ri˘
 
__©å
,

779 *
__ª°ri˘
 
__¥Ÿocﬁ
Ë
__THROW
;

783 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

784 
__¥Ÿocﬁ
Ë
__THROW
;

787 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

788 
__ª°ri˘
 
__©å
,

789 *
__ª°ri˘
 
__¥io˚ûög
)

790 
__THROW
;

793 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

794 
__¥io˚ûög
Ë
__THROW
;

797 #ifde‡
__USE_GNU


799 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

800 *
__robu°√ss
Ë
__THROW
;

803 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

804 
__robu°√ss
Ë
__THROW
;

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


813 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

814 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


815 
__©å
Ë
__THROW
;

818 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

821 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

824 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

826 #ifde‡
__USE_XOPEN2K


828 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

829 
__c⁄°
 
time•ec
 *
__ª°ri˘


830 
__ab°ime
Ë
__THROW
;

834 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

837 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

839 #ifde‡
__USE_XOPEN2K


841 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

842 
__c⁄°
 
time•ec
 *
__ª°ri˘


843 
__ab°ime
Ë
__THROW
;

847 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

853 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

856 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

859 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

860 
__ª°ri˘
 
__©å
,

861 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

864 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

865 
__psh¨ed
Ë
__THROW
;

868 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

869 
__ª°ri˘
 
__©å
,

870 *
__ª°ri˘
 
__¥ef
Ë
__THROW
;

873 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

874 
__¥ef
Ë
__THROW
;

882 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

883 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


884 
__c⁄d_©å
Ë
__THROW
;

887 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

890 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

893 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

900 
	`±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

901 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
);

910 
	`±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

911 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

912 
__c⁄°
 
time•ec
 *
__ª°ri˘


913 
__ab°ime
);

918 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

921 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

924 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

925 
__ª°ri˘
 
__©å
,

926 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

929 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

930 
__psh¨ed
Ë
__THROW
;

932 #ifde‡
__USE_XOPEN2K


934 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

935 
__ª°ri˘
 
__©å
,

936 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

937 
__THROW
;

940 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

941 
__˛ockid_t
 
__˛ock_id
Ë
__THROW
;

946 #ifde‡
__USE_XOPEN2K


951 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

952 
__THROW
;

955 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

958 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

961 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

964 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

971 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

972 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


973 
__©å
, 
__cou¡
Ë
__THROW
;

976 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

979 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

983 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

986 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

989 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

990 
__ª°ri˘
 
__©å
,

991 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

994 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

995 
__psh¨ed
Ë
__THROW
;

1007 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1008 (*
__de°r_fun˘i⁄
Ë(*)Ë
__THROW
;

1011 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1014 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1017 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1018 
__c⁄°
 *
__poöãr
Ë
__THROW
;

1021 #ifde‡
__USE_XOPEN2K


1023 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1024 
__˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

1039 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1040 (*
__∑ª¡
) (),

1041 (*
__chûd
Ë()Ë
__THROW
;

1043 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

51 #i‚de‡
WEOF


52 
	#WEOF
 (0xffffffffu)

	)

55 #unde‡
__√ed_iswxxx


60 #i‚de‡
__iswxxx_deföed


61 
	#__iswxxx_deföed
 1

	)

63 
__BEGIN_NAMESPACE_C99


66 
	tw˘y≥_t
;

67 
__END_NAMESPACE_C99


69 #i‚de‡
_ISwbô


74 
	~<ídün.h
>

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

78 
	#_ISwbô
(
bô
) \

79 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

80 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

81 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

82 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

87 
__ISwuµî
 = 0,

88 
__ISwlowî
 = 1,

89 
__ISwÆpha
 = 2,

90 
__ISwdigô
 = 3,

91 
__ISwxdigô
 = 4,

92 
__ISw•a˚
 = 5,

93 
__ISw¥öt
 = 6,

94 
__ISwgøph
 = 7,

95 
__ISwbœnk
 = 8,

96 
__ISw˙ål
 = 9,

97 
__ISwpun˘
 = 10,

98 
__ISwÆnum
 = 11,

100 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

101 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

102 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

103 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

104 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

105 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

106 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

107 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

108 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

109 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

110 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

111 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

116 
__BEGIN_DECLS


118 
__BEGIN_NAMESPACE_C99


125 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

131 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

138 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

150 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

155 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

160 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

165 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

170 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

175 #ifde‡
__USE_ISOC99


176 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

185 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

189 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

190 
__END_NAMESPACE_C99


197 
__BEGIN_NAMESPACE_C99


200 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

201 
__END_NAMESPACE_C99


202 #ifde‡
__USE_GNU


203 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

206 
__BEGIN_NAMESPACE_C99


208 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

211 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
__END_NAMESPACE_C99


214 
__END_DECLS


221 #ifde‡
_WCTYPE_H


227 
__BEGIN_DECLS


229 
__BEGIN_NAMESPACE_C99


232 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

235 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

236 
__END_NAMESPACE_C99


238 #ifde‡
__USE_GNU


240 
	~<xloˇÀ.h
>

244 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

250 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

257 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

269 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

274 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

279 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

289 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

294 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

298 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

299 
__THROW
;

303 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

304 
__THROW
;

312 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

319 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

320 
__THROW
;

323 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

324 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_BITS_SETJMP_H


22 
	#_BITS_SETJMP_H
 1

	)

24 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


28 #i‚def 
_ASM


29 
	t__jmp_buf
[6];

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

36 #ifde‡
__USE_MISC


38 
	#CSIGNAL
 0x000000f‡

	)

39 
	#CLONE_VM
 0x00000100

	)

40 
	#CLONE_FS
 0x00000200

	)

41 
	#CLONE_FILES
 0x00000400

	)

42 
	#CLONE_SIGHAND
 0x00000800

	)

43 
	#CLONE_PTRACE
 0x00002000

	)

44 
	#CLONE_VFORK
 0x00004000

	)

46 
	#CLONE_PARENT
 0x00008000

	)

48 
	#CLONE_THREAD
 0x00010000

	)

49 
	#CLONE_NEWNS
 0x00020000

	)

50 
	#CLONE_SYSVSEM
 0x00040000

	)

51 
	#CLONE_SETTLS
 0x00080000

	)

52 
	#CLONE_PARENT_SETTID
 0x00100000

	)

54 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

56 
	#CLONE_DETACHED
 0x00400000

	)

57 
	#CLONE_UNTRACED
 0x00800000

	)

59 
	#CLONE_CHILD_SETTID
 0x01000000

	)

61 
	#CLONE_STOPPED
 0x02000000

	)

65 
	ssched_∑øm


67 
	m__sched_¥i‹ôy
;

70 
	g__BEGIN_DECLS


72 #ifde‡
__USE_MISC


74 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

75 
__Êags
, *
__¨g
, ...Ë
__THROW
;

78 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

81 
__END_DECLS


85 #i‡!
deföed
 
__deföed_sched∑øm
 \

86 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

87 
	#__deföed_sched∑øm
 1

	)

89 
	s__sched_∑øm


91 
__sched_¥i‹ôy
;

93 #unde‡
__√ed_sched∑øm


97 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


98 
	#__˝u_£t_t_deföed


	)

100 
	#__CPU_SETSIZE
 1024

	)

101 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

104 
	t__˝u_mask
;

107 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

108 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

113 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

114 } 
	t˝u_£t_t
;

117 
	#__CPU_ZERO
(
˝u£ç
) \

119 
__i
; \

120 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

121 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

122 
__¨r
->
__bôs
[
__i
] = 0; \

123 
	}
} 0)

	)

124 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

125 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

126 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

127 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

128 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

129 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/sigcontext.h

2 #i‚de‡
__ASM_STUB_SIGCONTEXT_H


3 
	#__ASM_STUB_SIGCONTEXT_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/sigc⁄ãxt.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/sigc⁄ãxt.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/asm-i386/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

19 
	s_Âªg
 {

20 
	msignifiˇnd
[4];

21 
	mexp⁄ít
;

24 
	s_Âxªg
 {

25 
	msignifiˇnd
[4];

26 
	mexp⁄ít
;

27 
	m∑ddög
[3];

30 
	s_xmmªg
 {

31 
	mñemít
[4];

34 
	s_Â°©e
 {

36 
	mcw
;

37 
	msw
;

38 
	mèg
;

39 
	mùoff
;

40 
	mcs£l
;

41 
	md©aoff
;

42 
	md©a£l
;

43 
_Âªg
 
	m_°
[8];

44 
	m°©us
;

45 
	mmagic
;

48 
	m_fx§_ív
[6];

49 
	mmxc§
;

50 
	mª£rved
;

51 
_Âxªg
 
	m_fx§_°
[8];

52 
_xmmªg
 
	m_xmm
[8];

53 
	m∑ddög
[56];

56 
	#X86_FXSR_MAGIC
 0x0000

	)

58 
	ssigc⁄ãxt
 {

59 
	mgs
, 
	m__gsh
;

60 
	mfs
, 
	m__fsh
;

61 
	mes
, 
	m__esh
;

62 
	mds
, 
	m__dsh
;

63 
	medi
;

64 
	mesi
;

65 
	mebp
;

66 
	me•
;

67 
	mebx
;

68 
	medx
;

69 
	mecx
;

70 
	móx
;

71 
	må≠no
;

72 
	mîr
;

73 
	meù
;

74 
	mcs
, 
	m__csh
;

75 
	meÊags
;

76 
	me•_©_sig«l
;

77 
	mss
, 
	m__ssh
;

78 
_Â°©e
 * 
	mÂ°©e
;

79 
	mﬁdmask
;

80 
	m¸2
;

	@/usr/include/asm-x86_64/sigcontext.h

1 #i‚de‡
_ASM_X86_64_SIGCONTEXT_H


2 
	#_ASM_X86_64_SIGCONTEXT_H


	)

4 
	~<asm/ty≥s.h
>

9 
	s_Â°©e
 {

10 
__u16
 
	mcwd
;

11 
__u16
 
	mswd
;

12 
__u16
 
	mtwd
;

13 
__u16
 
	mf›
;

14 
__u64
 
	mrù
;

15 
__u64
 
	mrdp
;

16 
__u32
 
	mmxc§
;

17 
__u32
 
	mmxc§_mask
;

18 
__u32
 
	m°_•a˚
[32];

19 
__u32
 
	mxmm_•a˚
[64];

20 
__u32
 
	mª£rved2
[24];

23 
	ssigc⁄ãxt
 {

24 
	mr8
;

25 
	mr9
;

26 
	mr10
;

27 
	mr11
;

28 
	mr12
;

29 
	mr13
;

30 
	mr14
;

31 
	mr15
;

32 
	mrdi
;

33 
	mrsi
;

34 
	mrbp
;

35 
	mrbx
;

36 
	mrdx
;

37 
	møx
;

38 
	mrcx
;

39 
	mr•
;

40 
	mrù
;

41 
	meÊags
;

42 
	mcs
;

43 
	mgs
;

44 
	mfs
;

45 
	m__∑d0
;

46 
	mîr
;

47 
	må≠no
;

48 
	mﬁdmask
;

49 
	m¸2
;

50 
_Â°©e
 *
	mÂ°©e
;

51 
	mª£rved1
[8];

	@/usr/include/asm/types.h

2 #i‚de‡
__ASM_STUB_TYPES_H


3 
	#__ASM_STUB_TYPES_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/ty≥s.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/ty≥s.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/asm-i386/types.h

1 #i‚de‡
_I386_TYPES_H


2 
	#_I386_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

23 
__sig√d__
 
	t__s64
;

24 
	t__u64
;

	@/usr/include/asm-x86_64/types.h

1 #i‚de‡
_X86_64_TYPES_H


2 
	#_X86_64_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 
__sig√d__
 
	t__s64
;

23 
	t__u64
;

	@
1
.
1
/usr/include
80
2016
leaky_subr.c
libumem.c
misc.c
misc.h
proc_kludges.c
proc_kludges.h
umem.c
umem.h
umem_pagesize.h
/usr/include/alloca.h
/usr/include/limits.h
/usr/include/stdio.h
/usr/include/string.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdlib.h
/usr/include/sys/cdefs.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/limits.h
/usr/include/sys/types.h
/usr/include/wchar.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/wctype.h
/usr/include/bits/select.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/sys/ucontext.h
/usr/include/asm/sigcontext.h
/usr/include/asm-i386/sigcontext.h
/usr/include/asm-x86_64/sigcontext.h
/usr/include/asm/types.h
/usr/include/asm-i386/types.h
/usr/include/asm-x86_64/types.h
